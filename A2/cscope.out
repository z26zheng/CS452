cscope 15 $HOME/cs452/cs452-TRAINS               0000308956
	@include/bwio.h

5 *
	tva_li°
;

7 
	#__va_¨gsiz
(
t
) \

8 ((((
t
Ë+ (Ë- 1Ë/ ()Ë* ())

	)

10 
	#va_°¨t
(
≠
, 
pN
Ë(◊pË((
va_li°
Ë
	`__buûtö_√xt_¨g
’N)))

	)

12 
	#va_íd
(
≠
Ë(()0)

	)

14 
	#va_¨g
(
≠
, 
t
) \

15 (((
≠
Ë◊pË+ 
	`__va_¨gsiz
(
t
)), *(—*Ë(*Ë(◊pË- __va_¨gsiz—))))

	)

17 
	#COM1
 0

	)

18 
	#COM2
 1

	)

20 
	#ON
 1

	)

21 
	#OFF
 0

	)

23 
bw£tfifo
–
ch™√l
, 
°©e
 );

25 
bw£t•ìd
–
ch™√l
, 
•ìd
 );

27 
bwputc
–
ch™√l
, 
c
 );

29 
bwgëc
–
ch™√l
 );

31 
bwputx
–
ch™√l
, 
c
 );

33 
bwput°r
–
ch™√l
, *
°r
 );

35 
bwpuå
–
ch™√l
, 
ªg
 );

37 
bwputw
–
ch™√l
, 
n
, 
fc
, *
bf
 );

39 
bw¥ötf
–
ch™√l
, *
f‹m©
, ... );

	@include/context_switch.h

1 #i‚de‡
__CONTEXT_SWITCH_H__


2 
	#__CONTEXT_SWITCH_H__


	)

5 
kî√l_exô
(
ªtvÆ
, *
•
, 
•§
);

7 
öô_kî√À¡ry
();

9 
öô_ªgs
();

	@include/global.h

2 #i‚de‡
__GLOBAL_H__


3 
	#__GLOBAL_H__


	)

5 
	#REDBOOT_OFFSET
 0x218000

	)

6 
	#NULL
 ((*Ë0)

	)

7 
	tsize_t
;

10 
	#TD_BIT
 5

11 
	#TD_MAX
 (1 << 
TD_BIT
)

	)

12 
	#TID_IDX
–
id
 ) ( id & (
TD_MAX
 - 1Ë)

	)

13 
	#TID_GEN
–
id
 ) ( id >> 
TD_BIT
 )

	)

16 
	#SYS_CREATE
 1

	)

17 
	#SYS_MY_TID
 2

	)

18 
	#SYS_MY_PARENT_TID
 3

	)

19 
	#SYS_PASS
 4

	)

20 
	#SYS_SEND
 5

	)

21 
	#SYS_RECEIVE
 6

	)

22 
	#SYS_REPLY
 7

	)

23 
	#SYS_EXIT
 99

	)

26 
	#NUM_JOBS
 1

	)

27 
	#JOB_RPS
 0

	)

30 
	#TIMER_LOAD_VAL
 100000000

	)

33 
	#CACHE_ON
 1

	)

34 
	#CACHE_OFF
 0

	)

	@include/kernel.h

1 #i‚de‡
__KERNEL_H__


2 
	#__KERNEL_H__


	)

4 
	~<globÆ.h
>

5 
	~<èsk_des¸ùt‹.h
>

6 
	~<scheduÀr.h
>

7 
	~<kî√l_sysˇŒ.h
>

8 
	~<u£r_èsk.h
>

9 
	~<c⁄ãxt_swôch.h
>

12 
	#TD_SIZE
 0x3000

	)

13 
	#TD_MAGIC
 0x3b1a4ef5

	)

14 
	#USER_SPACE_SIZE
 (
TD_MAX
 * 
TD_SIZE
)

	)

15 
	#PRIORITY_MAX
 16

	)

18 
	sglobÆ_c⁄ãxt_t
 {

21 
èsk_des¸ùt‹_t
 * 
	mcur_èsk
;

22 
èsk_des¸ùt‹_t
 
	mtds
[
TD_MAX
];

23 
èsk_des¸ùt‹_t
 * 
	mtd_fú°_‰ì
;

24 
èsk_des¸ùt‹_t
 * 
	mtd_œ°_‰ì
;

25 
	mtd_magic
;

26 
	mtd_‰ì_num
;

27 
	mu£r_•a˚
[
TD_MAX
 * 
TD_SIZE
];

30 
scheduÀr_t
 
	m¥i‹ôõs
[
PRIORITY_MAX
];

31 
	m¥i‹ôy_bôm≠
;

32 
	mde_bruijn_bô_posôi⁄s
[32];

34 } 
	tglobÆ_c⁄ãxt_t
;

36 
kî√l_öô
–
globÆ_c⁄ãxt_t
 *
gc
);

38 
a˘iv©e
–
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 *
td
 );

40 
h™dÀ
–
globÆ_c⁄ãxt_t
 *
gc
, 
ªque°_ty≥
 );

	@include/kernel_syscall.h

1 #i‚de‡
__KERNEL_SYSCALL_H__


2 
	#__KERNEL_SYSCALL_H__


	)

4 
	~<globÆ.h
>

6 
	gglobÆ_c⁄ãxt_t
;

8 
h™dÀ_¸óã
–
globÆ_c⁄ãxt_t
 *
gc
 );

10 
h™dÀ_∑ss
–
globÆ_c⁄ãxt_t
 *
gc
 );

12 
h™dÀ_exô
–
globÆ_c⁄ãxt_t
 *
gc
 );

14 
h™dÀ_my_tid
–
globÆ_c⁄ãxt_t
 *
gc
 );

16 
h™dÀ_my_∑ª¡_tid
–
globÆ_c⁄ãxt_t
 *
gc
 );

18 
h™dÀ_£nd
–
globÆ_c⁄ãxt_t
 *
gc
 );

20 
h™dÀ_ª˚ive
–
globÆ_c⁄ãxt_t
 *
gc
 );

22 
h™dÀ_ª∂y
–
globÆ_c⁄ãxt_t
 *
gc
 );

	@include/nameserver.h

1 #i‚de‡
__NAMESERVER_H__


2 
	#__NAMESERVER_H__


	)

4 
	~<globÆ.h
>

6 
	#REGISTER
 1

	)

7 
	#WHOIS
 2

	)

8 
	#SUCCESS
 98

	)

9 
	#ERROR
 99

	)

13 
	#INVALID_REQUEST
 -2

	)

14 
	#MESSAGE_TOO_SHORT
 -3

	)

15 
	#INVALID_JOB
 -4

	)

16 
	#SERVER_NOT_FOUND
 -5

	)

18 
	s«me£rvî_msg_t
 {

19 
	mty≥
;

20 
	mvÆ
;

21 } 
	t«me£rvî_msg_t
;

23 
«me£rvî_maö
( );

25 
Regi°îAs
–*
«me
 );

27 
WhoIs
–*
«me
 );

	@include/rps.h

1 #i‚de‡
__RPS_H__


2 
	#__RPS_H__


	)

4 
	~<globÆ.h
>

7 
	#SIGNUP
 0

	)

8 
	#PLAY
 1

	)

9 
	#QUIT
 2

	)

10 
	#READY_TO_PLAY
 3

	)

11 
	#RESULT
 4

	)

12 
	#ERROR
 99

	)

15 
	#INVALID_COMMAND
 -1

	)

16 
	#PLAY_BEFORE_SIGNUP
 -2

	)

19 
	#ROCK
 0

	)

20 
	#PAPER
 1

	)

21 
	#SCISSORS
 2

	)

24 
	#TIE
 0

	)

25 
	#WIN
 1

	)

26 
	#LOSS
 2

	)

27 
	#OPPONENT_QUIT
 3

	)

29 
	s˛õ¡_t
 {

30 
	mc_tid
;

31 
˛õ¡_t
 *
	m√xt_˛õ¡_q
;

32 
˛õ¡_t
 *
	m√xt_˛õ¡_‰ì
;

33 } 
	t˛õ¡_t
;

35 
	sΩs_msg_t
 {

36 
	mty≥
;

37 
	mvÆ
;

38 } 
	tΩs_msg_t
;

40 
Ωs_£rvî
( );

41 
Ωs_˛õ¡1
( );

42 
Ωs_˛õ¡2
( );

43 
Ωs_˛õ¡3
( );

	@include/scheduler.h

1 #i‚de‡
__SCHEDULER_H__


2 
	#__SCHEDULER_H__


	)

4 
	~<globÆ.h
>

6 
	gglobÆ_c⁄ãxt_t
;

7 
	gèsk_des¸ùt‹_t
;

9 
	sscheduÀr_t
{

10 
	m¥i‹ôy
;

12 
	mnum_ö_queue
;

13 
èsk_des¸ùt‹_t
 *
	mfú°_ö_queue
;

14 
èsk_des¸ùt‹_t
 *
	mœ°_ö_queue
;

15 } 
	tscheduÀr_t
;

17 
öô_scheduÀrs
–
globÆ_c⁄ãxt_t
* 
gc
 );

19 
èsk_des¸ùt‹_t
 *
scheduÀ
–
globÆ_c⁄ãxt_t
 *
gc
);

21 
add_to_¥i‹ôy
–
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 *
td
 );

23 
gë_highe°_¥i‹ôy
–
globÆ_c⁄ãxt_t
 *
gc
 );

	@include/syscall.h

1 #i‚de‡
__SYSCALL_H__


2 
	#__SYSCALL_H__


	)

4 
	~<globÆ.h
>

7 
Cª©e
–
¥i‹ôy
, (*
code
) ( ) );

9 
MyTid
( );

11 
MyP¨ítTid
( );

13 
Pass
( );

15 
Exô
( );

17 
Síd
–
tid
, *
msg
, 
msgÀn
, *
ª∂y
, 
ª∂yÀn
 );

19 
Re˚ive
–*
tid
, *
msg
, 
msgÀn
 );

21 
Rïly
–
tid
, *
ª∂y
, 
ª∂yÀn
 );

	@include/task_descriptor.h

1 #i‚de‡
__TASK_DESCRIPTOR_H__


2 
	#__TASK_DESCRIPTOR_H__


	)

4 
	~<globÆ.h
>

6 
	gglobÆ_c⁄ãxt_t
;

8 
	sèsk_des¸ùt‹_t
{

9 *
	m•
;

10 *
	m‹ig_•
;

11 
	m•§
;

12 
	mªtvÆ
;

14 
	mid
;

15 
	m∑ª¡_id
;

16 
	m¥i‹ôy
;

19 
	mTD_READY
,

20 
	mTD_RECEIVE_BLOCKED
,

21 
	mTD_REPLY_BLOCKED
,

22 
	mTD_SEND_BLOCKED
,

23 
	mTD_ZOMBIE
,

24 } 
	m°©us
;

26 
èsk_des¸ùt‹_t
 * 
	m√xt_‰ì
;

27 
èsk_des¸ùt‹_t
 * 
	m√xt_ö_¥i‹ôy
;

28 
èsk_des¸ùt‹_t
 * 
	mfú°_£ndî_ö_queue
;

29 
èsk_des¸ùt‹_t
 * 
	mœ°_£ndî_ö_queue
;

30 
èsk_des¸ùt‹_t
 * 
	m√xt_£ndî
;

32 } 
	tèsk_des¸ùt‹_t
;

34 
tds_öô
–
globÆ_c⁄ãxt_t
 *
gc
 );

36 
èsk_des¸ùt‹_t
 * 
tds_¸óã_td
–
globÆ_c⁄ãxt_t
 *
gc
, 
¥i‹ôy
, 
code
 );

38 
tds_ªmove_td
–
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 * 
td
 );

	@include/timer.h

1 #i‚de‡
__TIMER_H__


2 
	#__TIMER_H__


	)

4 
°¨t_˛ock
–
lﬂd_vÆ
 );

6 
gë_timî_vÆ
( );

	@include/tools.h

4 #i‚de‡
__TOOLS_H__


5 
	#__TOOLS_H__


	)

7 
	~"bwio.h
"

8 
	~"globÆ.h
"

10 
	#FOREVER
  ; ; )

	)

11 
	#A1
 1

	)

12 
	#A2
 1

	)

14 
	#as£π
–
c⁄d
, ... ) \

16 if–!–
c⁄d
 ) ) \

17 
	`bw¥ötf
(
COM2
,"As£π faûed (%s:%d):\t%s\n\r\n\r",
__FILE__
, \

18 
__LINE__
, ## 
__VA_ARGS__
); \

19 }  0 )

	)

25 #i‚de‡
DEBUG


26 
	#DEBUG
 0

	)

28 
	#debug
–
fmt
, ... ) \

30 if–
DEBUG
 ) { \

31 
	`bw¥ötf
(
COM2
, "DEBUG (%s: %d):\t"#fmt"\n\r", 
__FILE__
, \

32 
__LINE__
, ## 
__VA_ARGS__
 ); \

34 }  0 )

	)

36 
	#mö
(
a
, 
b
) \

37 –{
	`__ty≥of__
 (
a
Ë
_a
 = (a); \

38 
	`__ty≥of__
 (
b
Ë
_b
 = (b); \

39 
_a
 < 
_b
 ? _®: _b; } )

	)

	@include/ts7200.h

8 
	#TIMER1_BASE
 0x80810000

	)

9 
	#TIMER2_BASE
 0x80810020

	)

10 
	#TIMER3_BASE
 0x80810080

	)

12 
	#LDR_OFFSET
 0x00000000

13 
	#VAL_OFFSET
 0x00000004

14 
	#CRTL_OFFSET
 0x00000008

15 
	#ENABLE_MASK
 0x00000080

	)

16 
	#MODE_MASK
 0x00000040

	)

17 
	#CLKSEL_MASK
 0x00000008

	)

18 
	#CLR_OFFSET
 0x0000000c

19 

	)

21 
	#LED_ADDRESS
 0x80840020

	)

22 
	#LED_NONE
 0x0

	)

23 
	#LED_GREEN
 0x1

	)

24 
	#LED_RED
 0x2

	)

25 
	#LED_BOTH
 0x3

	)

27 
	#COM1
 0

	)

28 
	#COM2
 1

	)

30 
	#IRDA_BASE
 0x808b0000

	)

31 
	#UART1_BASE
 0x808c0000

	)

32 
	#UART2_BASE
 0x808d0000

	)

37 
	#UART_DATA_OFFSET
 0x0

38 
	#DATA_MASK
 0xff

	)

39 
	#UART_RSR_OFFSET
 0x4

40 
	#FE_MASK
 0x1

	)

41 
	#PE_MASK
 0x2

	)

42 
	#BE_MASK
 0x4

	)

43 
	#OE_MASK
 0x8

	)

44 
	#UART_LCRH_OFFSET
 0x8

45 
	#BRK_MASK
 0x1

	)

46 
	#PEN_MASK
 0x2

47 
	#EPS_MASK
 0x4

48 
	#STP2_MASK
 0x8

49 
	#FEN_MASK
 0x10

50 
	#WLEN_MASK
 0x60

51 
	#UART_LCRM_OFFSET
 0xc

52 
	#BRDH_MASK
 0xff

53 
	#UART_LCRL_OFFSET
 0x10

54 
	#BRDL_MASK
 0xff

55 
	#UART_CTLR_OFFSET
 0x14

56 
	#UARTEN_MASK
 0x1

	)

57 
	#MSIEN_MASK
 0x8

58 
	#RIEN_MASK
 0x10

59 
	#TIEN_MASK
 0x20

60 
	#RTIEN_MASK
 0x40

61 
	#LBEN_MASK
 0x80

62 
	#UART_FLAG_OFFSET
 0x18

63 
	#CTS_MASK
 0x1

	)

64 
	#DCD_MASK
 0x2

	)

65 
	#DSR_MASK
 0x4

	)

66 
	#TXBUSY_MASK
 0x8

	)

67 
	#RXFE_MASK
 0x10

68 
	#TXFF_MASK
 0x20

69 
	#RXFF_MASK
 0x40

70 
	#TXFE_MASK
 0x80

71 
	#UART_INTR_OFFSET
 0x1c

	)

72 
	#UART_DMAR_OFFSET
 0x28

	)

76 
	#UART_MDMCTL_OFFSET
 0x100

	)

77 
	#UART_MDMSTS_OFFSET
 0x104

	)

78 
	#UART_HDLCCTL_OFFSET
 0x20c

	)

79 
	#UART_HDLCAMV_OFFSET
 0x210

	)

80 
	#UART_HDLCAM_OFFSET
 0x214

	)

81 
	#UART_HDLCRIB_OFFSET
 0x218

	)

82 
	#UART_HDLCSTS_OFFSET
 0x21c

	)

	@include/user_task.h

1 #i‚de‡
__USER_TASK_H__


2 
	#__USER_TASK_H__


	)

4 
fú°_u£r_èsk
( );

6 
a1_u£r_èsk
( );

	@src/bwio.c

8 
	~<ts7200.h
>

9 
	~<bwio.h
>

18 
	$bw£tfifo
–
ch™√l
, 
°©e
 ) {

19 *
löe
, 
buf
;

20  
ch™√l
 ) {

21 
COM1
:

22 
löe
 = (*)–
UART1_BASE
 + 
UART_LCRH_OFFSET
 );

24 
COM2
:

25 
löe
 = (*)–
UART2_BASE
 + 
UART_LCRH_OFFSET
 );

31 
buf
 = *
löe
;

32 
buf
 = 
°©e
 ? bu‡| 
FEN_MASK
 : buf & ~FEN_MASK;

33 *
löe
 = 
buf
;

35 
	}
}

37 
	$bw£t•ìd
–
ch™√l
, 
•ìd
 ) {

38 *
high
, *
low
;

39  
ch™√l
 ) {

40 
COM1
:

41 
high
 = (*)–
UART1_BASE
 + 
UART_LCRM_OFFSET
 );

42 
low
 = (*)–
UART1_BASE
 + 
UART_LCRL_OFFSET
 );

44 
COM2
:

45 
high
 = (*)–
UART2_BASE
 + 
UART_LCRM_OFFSET
 );

46 
low
 = (*)–
UART2_BASE
 + 
UART_LCRL_OFFSET
 );

52  
•ìd
 ) {

54 *
high
 = 0x0;

55 *
low
 = 0x3;

58 *
high
 = 0x0;

59 *
low
 = 0x90;

64 
	}
}

66 
	$bwputc
–
ch™√l
, 
c
 ) {

67 *
Êags
, *
d©a
;

68  
ch™√l
 ) {

69 
COM1
:

70 
Êags
 = (*)–
UART1_BASE
 + 
UART_FLAG_OFFSET
 );

71 
d©a
 = (*)–
UART1_BASE
 + 
UART_DATA_OFFSET
 );

73 
COM2
:

74 
Êags
 = (*)–
UART2_BASE
 + 
UART_FLAG_OFFSET
 );

75 
d©a
 = (*)–
UART2_BASE
 + 
UART_DATA_OFFSET
 );

81  ( *
Êags
 & 
TXFF_MASK
 ) ) ;

82 *
d©a
 = 
c
;

84 
	}
}

86 
	$c2x
–
ch
 ) {

87 i‡–(
ch
 <= 9) )  '0' + ch;

88  'a' + 
ch
 - 10;

89 
	}
}

91 
	$bwputx
–
ch™√l
, 
c
 ) {

92 
chh
, 
chl
;

94 
chh
 = 
	`c2x
–
c
 / 16 );

95 
chl
 = 
	`c2x
–
c
 % 16 );

96 
	`bwputc
–
ch™√l
, 
chh
 );

97  
	`bwputc
–
ch™√l
, 
chl
 );

98 
	}
}

100 
	$bwpuå
–
ch™√l
, 
ªg
 ) {

101 
byã
;

102 *
ch
 = (*Ë&
ªg
;

104  
byã
 = 3; byã >0; byã-- ) 
	`bwputx
–
ch™√l
, 
ch
[byte] );

105  
	`bwputc
–
ch™√l
, ' ' );

106 
	}
}

108 
	$bwput°r
–
ch™√l
, *
°r
 ) {

109  *
°r
 ) {

110 if–
	`bwputc
–
ch™√l
, *
°r
 ) < 0 )  -1;

111 
°r
++;

114 
	}
}

116 
	$bwputw
–
ch™√l
, 
n
, 
fc
, *
bf
 ) {

117 
ch
;

118 *
p
 = 
bf
;

120  *
p
++ && 
n
 > 0 )Ç--;

121  
n
-- > 0 ) 
	`bwputc
–
ch™√l
, 
fc
 );

122  ( 
ch
 = *
bf
++ ) ) 
	`bwputc
–
ch™√l
, ch );

123 
	}
}

125 
	$bwgëc
–
ch™√l
 ) {

126 *
Êags
, *
d©a
;

127 
c
;

129  
ch™√l
 ) {

130 
COM1
:

131 
Êags
 = (*)–
UART1_BASE
 + 
UART_FLAG_OFFSET
 );

132 
d©a
 = (*)–
UART1_BASE
 + 
UART_DATA_OFFSET
 );

134 
COM2
:

135 
Êags
 = (*)–
UART2_BASE
 + 
UART_FLAG_OFFSET
 );

136 
d©a
 = (*)–
UART2_BASE
 + 
UART_DATA_OFFSET
 );

142  !–*
Êags
 & 
RXFF_MASK
 ) ) ;

143 
c
 = *
d©a
;

144  
c
;

145 
	}
}

147 
	$bwa2d
–
ch
 ) {

148 if–
ch
 >= '0' && ch <= '9' )  ch - '0';

149 if–
ch
 >= 'a' && ch <= 'f' )  ch - 'a' + 10;

150 if–
ch
 >= 'A' && ch <= 'F' )  ch - 'A' + 10;

152 
	}
}

154 
	$bwa2i
–
ch
, **
§c
, 
ba£
, *
nump
 ) {

155 
num
, 
digô
;

156 *
p
;

158 
p
 = *
§c
; 
num
 = 0;

159  ( 
digô
 = 
	`bwa2d
–
ch
 ) ) >= 0 ) {

160 i‡–
digô
 > 
ba£
 ) ;

161 
num
 =Çum*
ba£
 + 
digô
;

162 
ch
 = *
p
++;

164 *
§c
 = 
p
; *
nump
 = 
num
;

165  
ch
;

166 
	}
}

168 
	$bwui2a
–
num
, 
ba£
, *
bf
 ) {

169 
n
 = 0;

170 
dgt
;

171 
d
 = 1;

173  (
num
 / 
d
Ë>
ba£
 ) d *= base;

174  
d
 != 0 ) {

175 
dgt
 = 
num
 / 
d
;

176 
num
 %
d
;

177 
d
 /
ba£
;

178 if–
n
 || 
dgt
 > 0 || 
d
 == 0 ) {

179 *
bf
++ = 
dgt
 + ( dgt < 10 ? '0' : 'a' - 10 );

180 ++
n
;

183 *
bf
 = 0;

184 
	}
}

186 
	$bwi2a
–
num
, *
bf
 ) {

187 if–
num
 < 0 ) {

188 
num
 = -num;

189 *
bf
++ = '-';

191 
	`bwui2a
–
num
, 10, 
bf
 );

192 
	}
}

194 
	$bwf‹m©
 ( 
ch™√l
, *
fmt
, 
va_li°
 
va
 ) {

195 
bf
[12];

196 
ch
, 
lz
;

197 
w
;

200  ( 
ch
 = *(
fmt
++) ) ) {

201 i‡–
ch
 != '%' )

202 
	`bwputc
–
ch™√l
, 
ch
 );

204 
lz
 = 0; 
w
 = 0;

205 
ch
 = *(
fmt
++);

206  
ch
 ) {

208 
lz
 = 1; 
ch
 = *(
fmt
++);

219 
ch
 = 
	`bwa2i
–ch, &
fmt
, 10, &
w
 );

222  
ch
 ) {

225 
	`bwputc
–
ch™√l
, 
	`va_¨g
–
va
, ) );

228 
	`bwputw
–
ch™√l
, 
w
, 0, 
	`va_¨g
–
va
, * ) );

231 
	`bwui2a
–
	`va_¨g
–
va
, ), 10, 
bf
 );

232 
	`bwputw
–
ch™√l
, 
w
, 
lz
, 
bf
 );

235 
	`bwi2a
–
	`va_¨g
–
va
, ), 
bf
 );

236 
	`bwputw
–
ch™√l
, 
w
, 
lz
, 
bf
 );

239 
	`bwui2a
–
	`va_¨g
–
va
, ), 16, 
bf
 );

240 
	`bwputw
–
ch™√l
, 
w
, 
lz
, 
bf
 );

243 
	`bwputc
–
ch™√l
, 
ch
 );

248 
	}
}

250 
	$bw¥ötf
–
ch™√l
, *
fmt
, ... ) {

251 
va_li°
 
va
;

253 
	`va_°¨t
(
va
,
fmt
);

254 
	`bwf‹m©
–
ch™√l
, 
fmt
, 
va
 );

255 
	`va_íd
(
va
);

256 
	}
}

	@src/kernel.c

1 
	~<toﬁs.h
>

2 
	~<kî√l.h
>

6 
	$ˇche_öô
( ) {

7 
asm
 volatile(

13 
	}
}

15 
	$kî√l_öô
–
globÆ_c⁄ãxt_t
 *
gc
) {

16 
gc
->
cur_èsk
 = 
NULL
;

17 
gc
->
¥i‹ôy_bôm≠
 = 0;

20 
	`öô_kî√À¡ry
();

21 
	`ˇche_öô
( );

23 
	`tds_öô
(
gc
);

24 
	`öô_scheduÀrs
(
gc
);

25 
	}
}

27 
	$a˘iv©e
–
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 *
td
 ) {

28 
ªque°_ty≥_ªg
 
	`asm
("r0");

29 
ªque°_ty≥
;

30 *
√w_•_ªg
 
	`asm
("r1");

31 *
√w_•
;

32 
√w_•§_ªg
 
	`asm
("r2");

33 
√w_•§
;

34 
gc
->
cur_èsk
 = 
td
;

36 
	`kî√l_exô
(
td
->
ªtvÆ
,Åd->
•
,Åd->
•§
);

38 
asm
 volatile(

42 : "+r"(
ªque°_ty≥_ªg
), "+r"(
√w_•_ªg
), "+r"(
√w_•§_ªg
)

45 
ªque°_ty≥
 = 
ªque°_ty≥_ªg
;

46 
√w_•
 = 
√w_•_ªg
;

47 
td
->
•
 = 
√w_•
;

48 
√w_•§
 = 
√w_•§_ªg
;

49 
td
->
•§
 = 
√w_•§
;

52 
	`as£π
(*(
td
->
‹ig_•
 - (
TD_SIZE
 - 1)Ë=
gc
->
td_magic
);

53  
ªque°_ty≥
;

54 
	}
}

56 
	$h™dÀ
–
globÆ_c⁄ãxt_t
 *
gc
, 
ªque°_ty≥
 ) {

57  
ªque°_ty≥
 ) {

58 
SYS_CREATE
:

59 
	`h™dÀ_¸óã
–
gc
 );

61 
SYS_MY_TID
:

62 
	`h™dÀ_my_tid
–
gc
 );

64 
SYS_MY_PARENT_TID
:

65 
	`h™dÀ_my_∑ª¡_tid
–
gc
 );

67 
SYS_SEND
:

68 
	`h™dÀ_£nd
–
gc
 );

70 
SYS_RECEIVE
:

71 
	`h™dÀ_ª˚ive
–
gc
 );

73 
SYS_REPLY
:

74 
	`h™dÀ_ª∂y
–
gc
 );

76 
SYS_PASS
:

77 
	`h™dÀ_∑ss
–
gc
 );

79 
SYS_EXIT
:

80 
	`h™dÀ_exô
–
gc
 );

85 
	}
}

87 
	$maö
(
¨gc
, *
¨gv
[]) {

89 
	`debug
("TD_BIT: %d", 
TD_BIT
);

90 
	`debug
("TD_MAX: %d", 
TD_MAX
);

92 
ªque°_ty≥
;

93 
	`bwput°r
–
COM2
, "LOADING... WE ARE FASTER THAN WINDOWS :)\r\n" );

94 
globÆ_c⁄ãxt_t
 
gc
;

95 
	`kî√l_öô
–&
gc
 );

97 
èsk_des¸ùt‹_t
 *
fú°_td
 = 
	`tds_¸óã_td
(&
gc
, 5, ()&
fú°_u£r_èsk
);

98 
	`add_to_¥i‹ôy
–&
gc
, 
fú°_td
 );

100 
	`bwput°r
–
COM2
, "FINISHED INITIALIZATION. WOO!\r\n" );

102 
FOREVER
 {

103 
èsk_des¸ùt‹_t
 *
scheduÀd_td
 = 
	`scheduÀ
–&
gc
 );

104 i‡–
scheduÀd_td
 =
NULL
 ) {

109 
ªque°_ty≥
 = 
	`a˘iv©e
–&
gc
, 
scheduÀd_td
 );

110 
	`h™dÀ
–&
gc
, 
ªque°_ty≥
 );

113 
	`bw¥ötf
(
COM2
, "\n\rExit Main\n\r");

116 
	}
}

	@src/kernel_syscall.c

1 
	~<toﬁs.h
>

2 
	~<kî√l.h
>

7 
	$kmem˝y
–* 
d°
, c⁄° * 
§c
, 
size_t
 
Àn
 ) {

8 
d°
 +
Àn
;

9 
§c
 +
Àn
;

10 
Àn
-- > 0)

11 *--
d°
 = *--
§c
;

12 
	}
}

14 
	$gë_mesßge_tid
–*
•
, 
off£t
 ) {

15 
	`debug
("•, *•: %x, %x", 
•
, *sp);

16 
	`debug
("off£t: %d", 
off£t
);

17 
öt_ªg
 
	`asm
("r1");

18 
off£t_ªg
 
	`asm
("r2"Ë
off£t
;

19 *
cur_•_ªg
 
	`asm
("r3"Ë
•
;

20 
πn
;

22 
asm
 volatile(

27 : "+r"(
öt_ªg
), "+r"(
cur_•_ªg
)

28 : "r"(
off£t_ªg
)

30 
πn
 = 
öt_ªg
;

31  
πn
;

32 
	}
}

34 *
	$gë_mesßge
–*
•
, 
off£t
, *
msgÀn
 ) {

36 *
ch¨_ªg
 
	`asm
("r0");

37 
öt_ªg
 
	`asm
("r1");

38 
off£t_ªg
 
	`asm
("r2"Ë
off£t
;

39 *
cur_•_ªg
 
	`asm
("r3"Ë
•
;

40 *
msg
;

41 
asm
 volatile(

46 : "+r"(
ch¨_ªg
), "+r"(
öt_ªg
), "+r"(
cur_•_ªg
)

47 : "r"(
off£t_ªg
)

49 *
msgÀn
 = 
öt_ªg
;

50 
msg
 = 
ch¨_ªg
;

51  
msg
;

52 
	}
}

55 
	$check_tid
–
globÆ_c⁄ãxt_t
 *
gc
, 
tid
 ) {

58 
tid_idx
 = 
	`TID_IDX
–
tid
 );

59 
	`as£π
–
tid_idx
 >= 0 );

60 
	`as£π
–
tid_idx
 <–
TD_MAX
 - 1 ));

63 if–
	`TID_GEN
(
tid
) == 0 ){

69 
èsk_des¸ùt‹_t
 * 
td
 = &(
gc
->
tds
[
	`TID_IDX
(
tid
)]);

70 if–
	`TID_GEN
(
td
->
id
Ë!TID_GEN(
tid
) ||

71 
td
->
°©us
 =
TD_ZOMBIE
 ) {

76 
	}
}

78 
	$h™dÀ_£nd
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

79 
tid_s
;

80 
msgÀn_s
, 
ª∂yÀn_s
;

81 *
msg_s
, *
ª∂y_s
;

83 
tid_s
 = 
	`gë_mesßge_tid
–
gc
->
cur_èsk
->
•
, 60 );

85 
msg_s
 = 
	`gë_mesßge
–
gc
->
cur_èsk
->
•
, 44, &
msgÀn_s
 );

87 
ª∂y_s
 = 
	`gë_mesßge
–
gc
->
cur_èsk
->
•
, 52, &
ª∂yÀn_s
 );

89 
	`debug
("SENDER:Åid: %d, msg: %x, msglen: %d,Ñeply: %x,Ñeplylen: %d",

90 
tid_s
, 
msg_s
, 
msgÀn_s
, 
ª∂y_s
, 
ª∂yÀn_s
);

92 
tid_check
 = 
	`check_tid
–
gc
, 
tid_s
 );

93 i‡–
tid_check
 < 0 ) {

94 
gc
->
cur_èsk
->
ªtvÆ
 = 
tid_check
;

95 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

108 
èsk_des¸ùt‹_t
 * 
td_r
 = &(
gc
->
tds
[
	`TID_IDX
(
tid_s
)]);

109 if–
td_r
->
°©us
 =
TD_SEND_BLOCKED
 ) {

110 *
±id_r
;

111 
msgÀn_r
;

112 *
msg_r
;

115 
±id_r
 = (*Ë
	`gë_mesßge_tid
–
td_r
->
•
, 44 );

116 
msg_r
 = 
	`gë_mesßge
–
td_r
->
•
, 48, &
msgÀn_r
 );

119 *
±id_r
 = 
gc
->
cur_èsk
->
id
;

120 
msg_c›õd
 = 
	`mö
(
msgÀn_s
, 
msgÀn_r
);

121 
	`kmem˝y
– 
msg_r
, 
msg_s
, 
msg_c›õd
 );

123 
td_r
->
ªtvÆ
 = 
msg_c›õd
;

124 
	`add_to_¥i‹ôy
–
gc
, 
td_r
 );

126 
gc
->
cur_èsk
->
°©us
 = 
TD_REPLY_BLOCKED
;

135 i‡–
td_r
->
fú°_£ndî_ö_queue
 =
NULL
 ) {

137 
td_r
->
fú°_£ndî_ö_queue
 = 
gc
->
cur_èsk
;

138 
td_r
->
œ°_£ndî_ö_queue
 = 
gc
->
cur_èsk
;

140 
td_r
->
œ°_£ndî_ö_queue
->
√xt_£ndî
 = 
gc
->
cur_èsk
;

141 
td_r
->
œ°_£ndî_ö_queue
 = 
gc
->
cur_èsk
;

142 
gc
->
cur_èsk
->
√xt_£ndî
 = 
NULL
;

144 
gc
->
cur_èsk
->
°©us
 = 
TD_RECEIVE_BLOCKED
;

150 
	}
}

152 
	$h™dÀ_ª˚ive
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

158 
èsk_des¸ùt‹_t
 *
r_td
 = 
gc
->
cur_èsk
;

159 i‡–
r_td
->
fú°_£ndî_ö_queue
 =
NULL
 ) {

160 
r_td
->
°©us
 = 
TD_SEND_BLOCKED
;

165 
èsk_des¸ùt‹_t
 *
s_td
 = 
r_td
->
fú°_£ndî_ö_queue
;

166 
	`as£π
(
s_td
->
°©us
 =
TD_RECEIVE_BLOCKED
);

167 
r_td
->
fú°_£ndî_ö_queue
 = 
s_td
->
√xt_£ndî
;

168 
s_td
->
√xt_£ndî
 = 
NULL
;

169 i‡(
r_td
->
fú°_£ndî_ö_queue
 =
NULL
) {

170 
r_td
->
œ°_£ndî_ö_queue
 = 
NULL
;

173 
tid_s
;

174 
msgÀn_s
, 
ª∂yÀn_s
;

175 *
msg_s
, *
ª∂y_s
;

178 
tid_s
 = 
	`gë_mesßge_tid
–
s_td
->
•
, 60 );

179 
msg_s
 = 
	`gë_mesßge
–
s_td
->
•
, 44, &
msgÀn_s
 );

180 
ª∂y_s
 = 
	`gë_mesßge
–
s_td
->
•
, 52, &
ª∂yÀn_s
 );

182 
	`debug
("SENDER:Åid: %d, msg: %x, msglen: %d,Ñeply: %x,Ñeplylen: %d",

183 
tid_s
, 
msg_s
, 
msgÀn_s
, 
ª∂y_s
, 
ª∂yÀn_s
);

185 *
±id_r
;

186 
msgÀn_r
;

187 *
msg_r
;

190 
±id_r
 = (*Ë
	`gë_mesßge_tid
–
r_td
->
•
, 44 );

191 
msg_r
 = 
	`gë_mesßge
–
r_td
->
•
, 48, &
msgÀn_r
 );

194 *
±id_r
 = 
s_td
->
id
;

195 
msg_c›õd
 = 
	`mö
(
msgÀn_s
, 
msgÀn_r
);

196 
	`kmem˝y
– 
msg_r
, 
msg_s
, 
msg_c›õd
 );

198 
s_td
->
°©us
 = 
TD_REPLY_BLOCKED
;

199 
r_td
->
ªtvÆ
 = 
msg_c›õd
;

200 
	`add_to_¥i‹ôy
–
gc
, 
r_td
 );

202 
	}
}

204 
	$h™dÀ_ª∂y
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

205 
èrgë_tid
;

206 
ª∂yÀn_r
, 
ª∂yÀn_s
;

207 *
ª∂y_r
, *
ª∂y_s
;

210 
èrgë_tid
 = 
	`gë_mesßge_tid
–
gc
->
cur_èsk
->
•
, 44 );

212 
tid_check
 = 
	`check_tid
–
gc
, 
èrgë_tid
 );

213 i‡–
tid_check
 < 0 ) {

214 
gc
->
cur_èsk
->
ªtvÆ
 = 
tid_check
;

215 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

224 
èsk_des¸ùt‹_t
 * 
èrgë_td
 = &(
gc
->
tds
[
	`TID_IDX
(
èrgë_tid
)]);

225 if–
èrgë_td
->
°©us
 !
TD_REPLY_BLOCKED
 ) {

226 
gc
->
cur_èsk
->
ªtvÆ
 = -3;

227 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

232 
ª∂y_r
 = 
	`gë_mesßge
–
gc
->
cur_èsk
->
•
, 48, &
ª∂yÀn_r
 );

235 
ª∂y_s
 = 
	`gë_mesßge
–
èrgë_td
->
•
, 52, &
ª∂yÀn_s
 );

240 if–
ª∂yÀn_s
 < 
ª∂yÀn_r
 ) {

241 
gc
->
cur_èsk
->
ªtvÆ
 = -4;

242 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

247 
	`kmem˝y
– 
ª∂y_s
, 
ª∂y_r
, 
ª∂yÀn_r
 );

249 
èrgë_td
->
ªtvÆ
 = 
ª∂yÀn_r
;

250 
gc
->
cur_èsk
->
ªtvÆ
 = 0;

251 
	`add_to_¥i‹ôy
–
gc
, 
èrgë_td
 );

252 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

253 
	}
}

255 
	$h™dÀ_¸óã
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

256 
¥i‹ôy_ªg
 
	`asm
("r0");

257 
¥i‹ôy
;

258 (*
code_ªg
)(Ë
	`asm
("r1");

259 (*
code
)();

260 *
cur_•_ªg
 
	`asm
("r3"Ë(
gc
->
cur_èsk
)->
•
;

262 
asm
 volatile(

267 : "+r"(
¥i‹ôy_ªg
), "+r"(
code_ªg
), "+r"(
cur_•_ªg
)

269 
¥i‹ôy
 = 
¥i‹ôy_ªg
;

270 
code
 = 
code_ªg
;

273 if(
¥i‹ôy
 > 
PRIORITY_MAX
) {

274 
gc
->
cur_èsk
->
ªtvÆ
 = -1;

277 
èsk_des¸ùt‹_t
 *
√w_td
 = 
	`tds_¸óã_td
(
gc
, 
¥i‹ôy
, ()(
code
));

280 if(
√w_td
 =
NULL
) {

281 
gc
->
cur_èsk
->
ªtvÆ
 = -2;

284 (
gc
->
cur_èsk
)->
ªtvÆ
 = 
√w_td
->
id
;

285 
	`add_to_¥i‹ôy
–
gc
, 
√w_td
 );

289 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

290 
	}
}

292 
	$h™dÀ_∑ss
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

293 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

294 
	}
}

296 
	$h™dÀ_exô
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

305 
èsk_des¸ùt‹_t
 *
£nd_td
 = 
gc
->
cur_èsk
->
fú°_£ndî_ö_queue
;

306  
£nd_td
 !
NULL
 ) {

307 
£nd_td
->
ªtvÆ
 = -3;

308 
	`add_to_¥i‹ôy
–
gc
, 
£nd_td
 );

309 
£nd_td
 = síd_td->
√xt_£ndî
;

311 (
gc
->
cur_èsk
)->
°©us
 = 
TD_ZOMBIE
;

312 
	}
}

314 
	$h™dÀ_my_tid
–
globÆ_c⁄ãxt_t
 *
gc
 ){

315 
èsk_des¸ùt‹_t
 *
td
 = 
gc
->
cur_èsk
;

316 
td
->
ªtvÆ
 =Åd->
id
;

317 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

318 
	}
}

320 
	$h™dÀ_my_∑ª¡_tid
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

321 
èsk_des¸ùt‹_t
 *
td
 = 
gc
->
cur_èsk
;

322 
td
->
ªtvÆ
 =Åd->
∑ª¡_id
;

323 
	`add_to_¥i‹ôy
–
gc
, gc->
cur_èsk
 );

324 
	}
}

	@src/nameserver.c

1 
	~<toﬁs.h
>

2 
	~<sysˇŒ.h
>

3 
	~<«me£rvî.h
>

5 
	$ª∂y_back
–
tid
, 
«me£rvî_msg_t
 *
ª∂y
, 
msg_Àn
, 
ty≥
, 
vÆ
 ) {

6 
ª∂y
->
ty≥
 =Åype;

7 
ª∂y
->
vÆ
 = val;

8 
	`Rïly
–
tid
, (*)
ª∂y
, 
msg_Àn
 );

9 
	}
}

11 
	$«me£rvî_maö
( ) {

12 
jobs
[
NUM_JOBS
];

13 
i
 = 0;

14 
ª∂y_tid
;

15 
πn_tid
;

16 
«me£rvî_msg_t
 
ªque°
;

17 
«me£rvî_msg_t
 
ª∂y
;

18 
msg_Àn
 = (
ªque°
);

19 
rcv_Àn
;

21  ; 
i
 < 
NUM_JOBS
; ++i ) {

22 
jobs
[
i
] = 0;

24 
	`debug
( "INITIALIZED NAMESERVER" );

25 
FOREVER
 {

26 
rcv_Àn
 = 
	`Re˚ive
–&
ª∂y_tid
, (*)&
ªque°
, 
msg_Àn
 );

27 if–
rcv_Àn
 < 
msg_Àn
 ){

28 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
ERROR
, 
MESSAGE_TOO_SHORT
 );

32  
ªque°
.
ty≥
 ) {

33 
REGISTER
:

35 if–!–
ªque°
.
vÆ
 >0 &&Ñeque°.vÆ < 
NUM_JOBS
 ) ) {

36 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
ERROR
, 
INVALID_JOB
 );

39 
jobs
[
ªque°
.
vÆ
] = 
ª∂y_tid
;

40 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
SUCCESS
, 0 );

41 
	`debug
–"Woo,á %d sîvîÑegi°îed wôh id: %d", 
ªque°
.
ty≥
, 
jobs
[request.type] );

44 
WHOIS
:

46 if–!–
ªque°
.
vÆ
 >0 &&Ñeque°.vÆ < 
NUM_JOBS
 ) ) {

47 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
ERROR
, 
INVALID_JOB
 );

50 
πn_tid
 = 
jobs
[
ªque°
.
vÆ
];

51 if–
πn_tid
 == 0 ) {

52 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
ERROR
, 
SERVER_NOT_FOUND
 );

54 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
SUCCESS
, 
πn_tid
 );

59 
	`ª∂y_back
–
ª∂y_tid
, &
ª∂y
, 
msg_Àn
, 
ERROR
, 
INVALID_REQUEST
 );

64 
	`Exô
( );

65 
	}
}

69 
	$Regi°îAs
–*
«me
 ) {

70 
«me£rvî_msg_t
 
ªque°
;

71 
«me£rvî_msg_t
 
ª∂y
;

72 
ªque°
.
ty≥
 = 
REGISTER
;

73 
ªque°
.
vÆ
 = (Ë
«me
;

76 
πn
 = 
	`Síd
–33, (*)&
ªque°
, ‘eque°), (*)&
ª∂y
, (reply) );

78 if–
πn
 < 0 ) {

81  
ª∂y
.
vÆ
;

82 
	}
}

84 
	$WhoIs
–*
«me
 ) {

85 
«me£rvî_msg_t
 
ªque°
;

86 
«me£rvî_msg_t
 
ª∂y
;

87 
ªque°
.
ty≥
 = 
WHOIS
;

88 
ªque°
.
vÆ
 = (Ë
«me
;

89 
πn
 = 
	`Síd
–33, (*)&
ªque°
, ‘eque°), (*)&
ª∂y
, (reply) );

91 if–
πn
 < 0 ) {

94  
ª∂y
.
vÆ
;

95 
	}
}

	@src/rps.c

1 
	~<toﬁs.h
>

2 
	~<Ωs.h
>

3 
	~<«me£rvî.h
>

4 
	~<timî.h
>

5 
	~<sysˇŒ.h
>

7 
	$öôülize_˛õ¡s
–
˛õ¡_t
 *
˛õ¡s
 ) {

8 
i
 = 0;

9  ; 
i
 < 
TD_MAX
 - 1; ++i ) {

10 
˛õ¡s
[
i
].
c_tid
 = 0;

11 
˛õ¡s
[
i
].
√xt_˛õ¡_q
 = 
NULL
;

12 
˛õ¡s
[
i
].
√xt_˛õ¡_‰ì
 = &(clients[i+1]);

14 
˛õ¡s
[
i
].
c_tid
 = 0;

15 
˛õ¡s
[
i
].
√xt_˛õ¡_q
 = 
NULL
;

16 
˛õ¡s
[
i
].
√xt_˛õ¡_‰ì
 = 
NULL
;

17 
	}
}

19 
	$Ωs_£rvî
( ) {

20 
î∫o
;

21 
î∫o
 = 
	`Regi°îAs
–(*Ë
JOB_RPS
 );

22 
	`debug
( "Woo,Ñegistered" );

23 if–
î∫o
 < 0 ) {

24 
	`bwput°r
–
COM2
, "ErrorÑegistering RPS server,áborting." );

25 
	`Exô
( );

28 
˛õ¡_t
 
˛õ¡s
[
TD_MAX
];

29 
	`öôülize_˛õ¡s
–
˛õ¡s
 );

30 
˛õ¡_t
 *
fú°_˛õ¡_q
 = 
NULL
;

31 
˛õ¡_t
 *
œ°_˛õ¡_q
 = 
NULL
;

32 
˛õ¡_t
 *
√w_˛õ¡
 = 
NULL
;

33 
˛õ¡_t
 *
fú°_˛õ¡_‰ì
 = &(
˛õ¡s
[0]);

34 
˛õ¡_t
 *
œ°_˛õ¡_‰ì
 = &(
˛õ¡s
[
TD_MAX
 - 1]);

36 
Ωs_msg_t
 
ª˚ive
;

37 
Ωs_msg_t
 
ª∂y
;

38 
˛õ¡_tid
;

39 
msg_size
 = –
ª˚ive
 );

42 
˛õ¡_t
 *
∂ayî1
 = 
NULL
;

43 
˛õ¡_t
 *
∂ayî2
 = 
NULL
;

44 
p1_a˘i⁄
 = -1;

45 
p2_a˘i⁄
 = -1;

46 
should_quô
 = 0;

47 
p1_quô
 = 0;

48 
p2_quô
 = 0;

51 
	`°¨t_˛ock
–
TIMER_LOAD_VAL
 );

53 
FOREVER
 {

54 
	`Re˚ive
–(*)&
˛õ¡_tid
, (*)&
ª˚ive
, 
msg_size
 );

55  
ª˚ive
.
ty≥
 ) {

56 
SIGNUP
:

57 
√w_˛õ¡
 = 
fú°_˛õ¡_‰ì
;

58 
fú°_˛õ¡_‰ì
 = 
√w_˛õ¡
->
√xt_˛õ¡_‰ì
;

59 i‡–
fú°_˛õ¡_‰ì
 =
NULL
 ) {

60 
œ°_˛õ¡_‰ì
 = 
NULL
;

63 
√w_˛õ¡
->
c_tid
 = 
˛õ¡_tid
;

64 
√w_˛õ¡
->
√xt_˛õ¡_‰ì
 = 
NULL
;

65 
√w_˛õ¡
->
√xt_˛õ¡_q
 = 
NULL
;

66 i‡–
fú°_˛õ¡_q
 =
NULL
 ) {

67 
fú°_˛õ¡_q
 = 
√w_˛õ¡
;

68 
œ°_˛õ¡_q
 = 
√w_˛õ¡
;

70 
œ°_˛õ¡_q
->
√xt_˛õ¡_q
 = 
√w_˛õ¡
;

71 
œ°_˛õ¡_q
 = 
√w_˛õ¡
;

76 
PLAY
:

77 if–
˛õ¡_tid
 =
∂ayî1
->
c_tid
 ) {

78 
p1_a˘i⁄
 = 
ª˚ive
.
vÆ
;

79  
p1_a˘i⁄
 ){

80 
ROCK
:

81 
	`bw¥ötf
–
COM2
, "Task %dÖœyed ROCK\r\n", 
∂ayî1
->
c_tid
 );

83 
PAPER
:

84 
	`bw¥ötf
–
COM2
, "Task %dÖœyed PAPER\r\n", 
∂ayî1
->
c_tid
 );

86 
SCISSORS
:

87 
	`bw¥ötf
–
COM2
, "Task %dÖœyed SCISSORS\r\n", 
∂ayî1
->
c_tid
 );

90 } if–
˛õ¡_tid
 =
∂ayî2
->
c_tid
 ) {

91 
p2_a˘i⁄
 = 
ª˚ive
.
vÆ
;

92  
p2_a˘i⁄
 ){

93 
ROCK
:

94 
	`bw¥ötf
–
COM2
, "Task %dÖœyed ROCK\r\n", 
∂ayî2
->
c_tid
 );

96 
PAPER
:

97 
	`bw¥ötf
–
COM2
, "Task %dÖœyed PAPER\r\n", 
∂ayî2
->
c_tid
 );

99 
SCISSORS
:

100 
	`bw¥ötf
–
COM2
, "Task %dÖœyed SCISSORS\r\n", 
∂ayî2
->
c_tid
 );

103 if–
p1_quô
 ) {

104 
ª∂y
.
ty≥
 = 
RESULT
;

105 
ª∂y
.
vÆ
 = 
OPPONENT_QUIT
;

106 
	`bw¥ötf
–
COM2
, "Task %d'†›p⁄íàquô!\r\n", 
∂ayî2
->
c_tid
 );

107 
	`Rïly
–
∂ayî2
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

108 
∂ayî2
->
c_tid
 = 0;

109 if–
œ°_˛õ¡_‰ì
 !
NULL
 ) {

110 
œ°_˛õ¡_‰ì
->
√xt_˛õ¡_‰ì
 = 
∂ayî2
;

112 
fú°_˛õ¡_‰ì
 = 
∂ayî2
;

114 
œ°_˛õ¡_‰ì
 = 
∂ayî2
;

115 
p2_a˘i⁄
 = -1;

116 
∂ayî2
 = 
NULL
;

117 
p1_quô
 = 0;

118 
	`bwput°r
–
COM2
, "Pressány keyÅo continue: " );

119 
	`bwgëc
–
COM2
 );

120 
	`bwput°r
–
COM2
, "\r\n" );

123 
ª∂y
.
ty≥
 = 
ERROR
;

124 
ª∂y
.
vÆ
 = 
PLAY_BEFORE_SIGNUP
;

125 
	`Rïly
–
˛õ¡_tid
, (*)&
ª∂y
, 
msg_size
 );

129 if–
p1_a˘i⁄
 >0 && 
p2_a˘i⁄
 >= 0 ) {

130 if–
p1_a˘i⁄
 =
p2_a˘i⁄
 ) {

131 
ª∂y
.
ty≥
 = 
RESULT
;

132 
ª∂y
.
vÆ
 = 
TIE
;

133 
	`bw¥ötf
–
COM2
, "TIE!\r\n" );

134 
	`Rïly
–
∂ayî1
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

135 
	`Rïly
–
∂ayî2
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

137 if((
p1_a˘i⁄
 - 
p2_a˘i⁄
 + 3) % 3 == 1) {

138 
ª∂y
.
ty≥
 = 
RESULT
;

139 
ª∂y
.
vÆ
 = 
WIN
;

140 
	`bw¥ötf
–
COM2
, "Task %d WINS!\r\n", 
∂ayî1
->
c_tid
 );

141 
	`Rïly
–
∂ayî1
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

142 
ª∂y
.
vÆ
 = 
LOSS
;

143 
	`Rïly
–
∂ayî2
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

146 
ª∂y
.
ty≥
 = 
RESULT
;

147 
ª∂y
.
vÆ
 = 
LOSS
;

148 
	`bw¥ötf
–
COM2
, "Task %d WINS!\r\n", 
∂ayî2
->
c_tid
 );

149 
	`Rïly
–
∂ayî1
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

150 
ª∂y
.
vÆ
 = 
WIN
;

151 
	`Rïly
–
∂ayî2
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

155 
∂ayî1
->
c_tid
 = 0;

156 
∂ayî2
->
c_tid
 = 0;

157 
∂ayî1
->
√xt_˛õ¡_‰ì
 = 
∂ayî2
;

158 if–
œ°_˛õ¡_‰ì
 !
NULL
 ) {

159 
œ°_˛õ¡_‰ì
->
√xt_˛õ¡_‰ì
 = 
∂ayî1
;

161 
fú°_˛õ¡_‰ì
 = 
∂ayî1
;

163 
œ°_˛õ¡_‰ì
 = 
∂ayî2
;

164 
∂ayî1
 = 
NULL
;

165 
∂ayî2
 = 
NULL
;

166 
p1_a˘i⁄
 = -1;

167 
p2_a˘i⁄
 = -1;

168 
	`bwput°r
–
COM2
, "Pressány keyÅo continue: " );

169 
	`bwgëc
–
COM2
 );

170 
	`bwput°r
–
COM2
, "\r\n" );

173 
QUIT
:

174 
	`debug
–"ö quô, %d", 
˛õ¡_tid
 );

175 if–
˛õ¡_tid
 =
∂ayî1
->
c_tid
 ) {

176 
p1_quô
 = 1;

177 
	`bw¥ötf
–
COM2
, "Task %d Quô!\r\n", 
˛õ¡_tid
 );

178 
∂ayî1
->
c_tid
 = 0;

179 if–
œ°_˛õ¡_‰ì
 !
NULL
 ) {

180 
œ°_˛õ¡_‰ì
->
√xt_˛õ¡_‰ì
 = 
∂ayî1
;

182 
fú°_˛õ¡_‰ì
 = 
∂ayî1
;

184 
œ°_˛õ¡_‰ì
 = 
∂ayî1
;

185 
p1_a˘i⁄
 = -1;

186 
∂ayî1
 = 
NULL
;

187 } if–
˛õ¡_tid
 =
∂ayî2
->
c_tid
 ) {

188 
p2_quô
 = 1;

189 
	`bw¥ötf
–
COM2
, "Task %d Quô!\r\n", 
˛õ¡_tid
 );

190 
∂ayî2
->
c_tid
 = 0;

191 if–
œ°_˛õ¡_‰ì
 !
NULL
 ) {

192 
œ°_˛õ¡_‰ì
->
√xt_˛õ¡_‰ì
 = 
∂ayî2
;

194 
fú°_˛õ¡_‰ì
 = 
∂ayî2
;

196 
œ°_˛õ¡_‰ì
 = 
∂ayî2
;

197 
p2_a˘i⁄
 = -1;

198 
∂ayî2
 = 
NULL
;

199 if–
p1_quô
 && 
p2_quô
 ){

200 
p1_quô
 = 0;

201 
p2_quô
 = 0;

203 
ª∂y
.
ty≥
 = 
RESULT
;

204 
ª∂y
.
vÆ
 = 
OPPONENT_QUIT
;

205 
	`bw¥ötf
–
COM2
, "Task %d'†›p⁄íàquô!\r\n", 
∂ayî1
->
c_tid
 );

206 
	`Rïly
–
∂ayî1
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

207 
∂ayî1
->
c_tid
 = 0;

208 if–
œ°_˛õ¡_‰ì
 !
NULL
 ) {

209 
œ°_˛õ¡_‰ì
->
√xt_˛õ¡_‰ì
 = 
∂ayî1
;

211 
fú°_˛õ¡_‰ì
 = 
∂ayî1
;

213 
œ°_˛õ¡_‰ì
 = 
∂ayî1
;

214 
p1_a˘i⁄
 = -1;

215 
∂ayî1
 = 
NULL
;

216 
p2_quô
 = 0;

218 
	`bwput°r
–
COM2
, "Pressány keyÅo continue: " );

219 
	`bwgëc
–
COM2
 );

220 
	`bwput°r
–
COM2
, "\r\n" );

224 
ª∂y
.
ty≥
 = 
ERROR
;

225 
ª∂y
.
vÆ
 = 
INVALID_COMMAND
;

226 
	`Rïly
–
˛õ¡_tid
, (*)&
ª∂y
, 
msg_size
 );

230 if–
should_quô
 ) {

235 if–
∂ayî1
 =
NULL
 && 
fú°_˛õ¡_q
 !NULL && !
p1_quô
 ) {

236 
∂ayî1
 = 
fú°_˛õ¡_q
;

237 
fú°_˛õ¡_q
 = 
∂ayî1
->
√xt_˛õ¡_q
;

238 
∂ayî1
->
√xt_˛õ¡_q
 = 
NULL
;

239 i‡–
fú°_˛õ¡_q
 =
NULL
 ) {

240 
œ°_˛õ¡_q
 = 
NULL
;

244 if–
∂ayî2
 =
NULL
 && 
fú°_˛õ¡_q
 !NULL && !
p2_quô
 ) {

245 
∂ayî2
 = 
fú°_˛õ¡_q
;

246 
fú°_˛õ¡_q
 = 
∂ayî2
->
√xt_˛õ¡_q
;

247 
∂ayî2
->
√xt_˛õ¡_q
 = 
NULL
;

248 i‡–
fú°_˛õ¡_q
 =
NULL
 ) {

249 
œ°_˛õ¡_q
 = 
NULL
;

251 
ª∂y
.
ty≥
 = 
READY_TO_PLAY
;

252 
ª∂y
.
vÆ
 = 0;

253 
	`Rïly
–
∂ayî1
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

254 
	`Rïly
–
∂ayî2
->
c_tid
, (*)&
ª∂y
, 
msg_size
 );

255 
	`debug
–"Pœyî†%d, %dÑódyÅÿ∂ay", 
∂ayî1
->
c_tid
, 
∂ayî2
->c_tid );

258 
	`bw¥ötf
–
COM2
, "NotÉnoughÖlayers. Goodbye!\r\n" );

259 
	`Exô
( );

260 
	}
}

262 
	$Ωs_˛õ¡1
( ) {

263 
i
 = 0;

264 
cmd
;

265 
timî_vÆ
;

266 
Ωs_£rvî_tid
 = 
	`WhoIs
–(*)
JOB_RPS
 );

267 
Ωs_msg_t
 
mesßge
;

268 
Ωs_msg_t
 
ª∂y
;

269 
msg_size
 = (
mesßge
);

270 
my_tid
 = 
	`MyTid
( );

271  ; 
i
 < 5; ++i ) {

272 
mesßge
.
ty≥
 = 
SIGNUP
;

273 
mesßge
.
vÆ
 = 0;

274 
	`Síd
–
Ωs_£rvî_tid
, (*)&
mesßge
, 
msg_size
, (*)&
ª∂y
, msg_size );

275 if–
ª∂y
.
ty≥
 =
READY_TO_PLAY
 ) {

276 
timî_vÆ
 = 
	`gë_timî_vÆ
( );

278 if–
timî_vÆ
 % 10 == 0 ) {

279 
mesßge
.
ty≥
 = 
QUIT
;

280 
mesßge
.
vÆ
 = 0;

282 
cmd
 = 
timî_vÆ
 % 3;

283 
mesßge
.
ty≥
 = 
PLAY
;

284 
mesßge
.
vÆ
 = 
cmd
;

286 
	`Síd
–
Ωs_£rvî_tid
, (*)&
mesßge
, 
msg_size
, (*)&
ª∂y
, msg_size );

288 
	`debug
( "SOMETHING WENT WRONG, why can'tÅhe clientÖlay?" );

291 
	`bw¥ötf
–
COM2
, "Task %d i†d⁄ê∂ayög\r\n", 
my_tid
 );

292 
mesßge
.
ty≥
 = 
QUIT
;

293 
mesßge
.
vÆ
 = 0;

294 
	`Síd
–
Ωs_£rvî_tid
, (*)&
mesßge
, 
msg_size
, (*)&
ª∂y
, msg_size );

295 
	`Exô
( );

296 
	}
}

	@src/scheduler.c

1 
	~<toﬁs.h
>

2 
	~<kî√l.h
>

4 
	$gë_highe°_¥i‹ôy
–
globÆ_c⁄ãxt_t
 *
gc
 ) {

6 
bm
 = 
gc
->
¥i‹ôy_bôm≠
;

7 
πn
;

8 
πn
 = 
gc
->
de_bruijn_bô_posôi⁄s
[(((
bm
 & -bm) * 0x077CB531U)) >> 27];

9  
πn
;

10 
	}
}

12 
	$öô_scheduÀrs
–
globÆ_c⁄ãxt_t
* 
gc
 ) {

13 
i
 = 0;

14  ; 
i
 <
PRIORITY_MAX
; ++i ) {

15 
scheduÀr_t
 *
scheduÀr
 = &((
gc
->
¥i‹ôõs
)[
i
]);

16 
scheduÀr
->
¥i‹ôy
 = 
i
;

17 
scheduÀr
->
num_ö_queue
 = 0;

18 
scheduÀr
->
fú°_ö_queue
 = 
NULL
;

19 
scheduÀr
->
œ°_ö_queue
 = 
NULL
;

21 
gc
->
¥i‹ôy_bôm≠
 = 0;

22 (
gc
->
de_bruijn_bô_posôi⁄s
)[0] = 0;

23 (
gc
->
de_bruijn_bô_posôi⁄s
)[1] = 1;

24 (
gc
->
de_bruijn_bô_posôi⁄s
)[2] = 28;

25 (
gc
->
de_bruijn_bô_posôi⁄s
)[3] = 2;

26 (
gc
->
de_bruijn_bô_posôi⁄s
)[4] = 29;

27 (
gc
->
de_bruijn_bô_posôi⁄s
)[5] = 14;

28 (
gc
->
de_bruijn_bô_posôi⁄s
)[6] = 24;

29 (
gc
->
de_bruijn_bô_posôi⁄s
)[7] = 3;

30 (
gc
->
de_bruijn_bô_posôi⁄s
)[8] = 30;

31 (
gc
->
de_bruijn_bô_posôi⁄s
)[9] = 22;

32 (
gc
->
de_bruijn_bô_posôi⁄s
)[10] = 20;

33 (
gc
->
de_bruijn_bô_posôi⁄s
)[11] = 15;

34 (
gc
->
de_bruijn_bô_posôi⁄s
)[12] = 25;

35 (
gc
->
de_bruijn_bô_posôi⁄s
)[13] = 17;

36 (
gc
->
de_bruijn_bô_posôi⁄s
)[14] = 4;

37 (
gc
->
de_bruijn_bô_posôi⁄s
)[15] = 8;

38 (
gc
->
de_bruijn_bô_posôi⁄s
)[16] = 31;

39 (
gc
->
de_bruijn_bô_posôi⁄s
)[17] = 27;

40 (
gc
->
de_bruijn_bô_posôi⁄s
)[18] = 13;

41 (
gc
->
de_bruijn_bô_posôi⁄s
)[19] = 23;

42 (
gc
->
de_bruijn_bô_posôi⁄s
)[20] = 21;

43 (
gc
->
de_bruijn_bô_posôi⁄s
)[21] = 19;

44 (
gc
->
de_bruijn_bô_posôi⁄s
)[22] = 16;

45 (
gc
->
de_bruijn_bô_posôi⁄s
)[23] = 7;

46 (
gc
->
de_bruijn_bô_posôi⁄s
)[24] = 26;

47 (
gc
->
de_bruijn_bô_posôi⁄s
)[25] = 12;

48 (
gc
->
de_bruijn_bô_posôi⁄s
)[26] = 18;

49 (
gc
->
de_bruijn_bô_posôi⁄s
)[27] = 6;

50 (
gc
->
de_bruijn_bô_posôi⁄s
)[28] = 11;

51 (
gc
->
de_bruijn_bô_posôi⁄s
)[29] = 5;

52 (
gc
->
de_bruijn_bô_posôi⁄s
)[30] = 10;

53 (
gc
->
de_bruijn_bô_posôi⁄s
)[31] = 9;

55 
	}
}

57 
	$add_to_¥i‹ôy
–
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 *
td
 ) {

58 
¥i‹ôy
 = 
td
->priority;

59 
	`as£π
(
¥i‹ôy
 != 0, "ERROR: shouldÇotÖass inÖriority = 0");

60 
scheduÀr_t
 *
scheduÀr
 = &((
gc
->
¥i‹ôõs
)[
¥i‹ôy
]);

61 
èsk_des¸ùt‹_t
 *
œ°_td
 = 
scheduÀr
->
œ°_ö_queue
;

62 i‡–
œ°_td
 !
NULL
 ) {

63 
œ°_td
->
√xt_ö_¥i‹ôy
 = 
td
;

65 i‡–
scheduÀr
->
fú°_ö_queue
 =
NULL
 ) {

66 
scheduÀr
->
fú°_ö_queue
 = 
td
;

69 
td
->
°©us
 = 
TD_READY
;

70 
gc
->
¥i‹ôy_bôm≠
 = gc->¥i‹ôy_bôm≠ | ( 1 << 
¥i‹ôy
 );

71 
scheduÀr
->
œ°_ö_queue
 = 
td
;

73 ++(
scheduÀr
->
num_ö_queue
);

75 
	`as£π
(
scheduÀr
->
num_ö_queue
 > 0);

76 
	`as£π
(
scheduÀr
->
num_ö_queue
 <
TD_MAX
);

77 
	}
}

79 
èsk_des¸ùt‹_t
 *
	$scheduÀ
–
globÆ_c⁄ãxt_t
 *
gc
) {

80 
highe°_¥i‹ôy
 = 
	`gë_highe°_¥i‹ôy
–
gc
 );

81 i‡–
highe°_¥i‹ôy
 == 0 ) {

82  
NULL
;

84 
scheduÀr_t
 *
scheduÀr
 = &((
gc
->
¥i‹ôõs
)[
highe°_¥i‹ôy
]);

86 
èsk_des¸ùt‹_t
 *
td
 = 
scheduÀr
->
fú°_ö_queue
;

87 
scheduÀr
->
fú°_ö_queue
 = 
td
->
√xt_ö_¥i‹ôy
;

88 i‡(
scheduÀr
->
fú°_ö_queue
 =
NULL
) {

89 
scheduÀr
->
œ°_ö_queue
 = 
NULL
;

90 
gc
->
¥i‹ôy_bôm≠
 = gc->¥i‹ôy_bôm≠ ^ ( 1 << 
highe°_¥i‹ôy
 );

92 
td
->
√xt_ö_¥i‹ôy
 = 
NULL
;

93 --(
scheduÀr
->
num_ö_queue
);

95 
	`as£π
(
scheduÀr
->
num_ö_queue
 >= 0);

97  
td
;

98 
	}
}

	@src/syscall.c

1 
	~<sysˇŒ.h
>

2 
	~<toﬁs.h
>

5 
Cª©e
–
¥i‹ôy
, (*
code
) ( ) ) {

6 
ªtvÆ_ªg
 
	`asm
("r0");

7 
ªtvÆ
;

8 
asm
 volatile(

13 : "+r"(
ªtvÆ_ªg
)

14 : "i"(
SYS_CREATE
)

16 
ªtvÆ
 = 
ªtvÆ_ªg
;

17  
ªtvÆ
;

18 
	}
}

20 
	$Síd
–
tid
, *
msg
, 
msgÀn
, *
ª∂y
, 
ª∂yÀn
 ) {

24 
ªtvÆ_ªg
 
	`asm
("r0");

25 
ªtvÆ
;

50 
asm
 volatile(

59 : "+r"(
ªtvÆ_ªg
)

60 : "i"(
SYS_SEND
)

63 
ªtvÆ
 = 
ªtvÆ_ªg
;

65  
ªtvÆ
;

66 
	}
}

68 
	$Re˚ive
–*
tid
, *
msg
, 
msgÀn
 ) {

69 
ªtvÆ_ªg
 
	`asm
("r0");

70 
ªtvÆ
;

71 
asm
 volatile(

76 : "+r"(
ªtvÆ_ªg
)

77 : "i"(
SYS_RECEIVE
)

79 
ªtvÆ
 = 
ªtvÆ_ªg
;

80  
ªtvÆ
;

81 
	}
}

83 
	$Rïly
(
tid
, *
ª∂y
, 
ª∂yÀn
 ) {

84 
ªtvÆ_ªg
 
	`asm
("r0");

85 
ªtvÆ
;

86 
asm
 volatile(

91 : "+r"(
ªtvÆ_ªg
)

92 : "i"(
SYS_REPLY
)

94 
ªtvÆ
 = 
ªtvÆ_ªg
;

95  
ªtvÆ
;

96 
	}
}

98 
	$MyTid
( ) {

99 
ªtvÆ_ªg
 
	`asm
("r0");

100 
ªtvÆ
;

101 
asm
 volatile(

104 : "+r"(
ªtvÆ_ªg
)

105 : "i"(
SYS_MY_TID
)

107 
ªtvÆ
 = 
ªtvÆ_ªg
;

108  
ªtvÆ
;

109 
	}
}

111 
	$MyP¨ítTid
( ) {

112 
ªtvÆ_ªg
 
	`asm
("r0");

113 
ªtvÆ
;

114 
asm
 volatile(

117 : "+r"(
ªtvÆ_ªg
)

118 : "i"(
SYS_MY_PARENT_TID
)

120 
ªtvÆ
 = 
ªtvÆ_ªg
;

121  
ªtvÆ
;

122 
	}
}

124 
	$Pass
( ) {

126 
asm
 volatile(

128 :: "i"(
SYS_PASS
)

130 
	}
}

132 
	$Exô
( ) {

134 
asm
 volatile(

136 :: "i"(
SYS_EXIT
)

138 
	}
}

	@src/task_descriptor.c

1 
	~<toﬁs.h
>

2 
	~<kî√l.h
>

4 
	$tds_öô
(
globÆ_c⁄ãxt_t
 *
gc
) {

5 
i
 = 0;

8 
b¨_size
 = 40;

9 
block_size
 = 
USER_SPACE_SIZE
 / 
b¨_size
;

10 
block_°ï
 = 0;

11 
blocks
 = 1;

14 
gc
->
td_fú°_‰ì
 = gc->
tds
;

15 
gc
->
td_œ°_‰ì
 = &(gc->
tds
[
TD_MAX
-1]);

16 
gc
->
td_‰ì_num
 = 
TD_MAX
;

17 
gc
->
td_magic
 = 
TD_MAGIC
;

19 
èsk_des¸ùt‹_t
 *
cur_td
;

21  ; 
i
 < 
USER_SPACE_SIZE
 ; ++i ) {

22 (
gc
->
u£r_•a˚
)[
i
] = 0;

26 if(
block_°ï
 =
block_size
) {

27 
	`bw¥ötf
(
COM2
, "\033[s\033[50D%d%%\033[u\033[44m ",

28 
blocks
 * 100 / 
b¨_size
 );

29 ++
blocks
;

30 
block_°ï
 = 0;

32 ++
block_°ï
;

37 
	`bw¥ötf
(
COM2
, "\033[40m\n\r");

40 
i
 = 0;

41  ; 
i
 < 
TD_MAX
; ++i) {

42 
cur_td
 = &(
gc
->
tds
[
i
]);

43 
cur_td
->
•
 = 
gc
->
u£r_•a˚
 + (
TD_SIZE
 * (
i
 + 1)) - 1;

44 
cur_td
->
‹ig_•
 = cur_td->
•
;

45 *(
cur_td
->
‹ig_•
 - (
TD_SIZE
 - 1)Ë
gc
->
td_magic
;

46 
cur_td
->
•§
 = 0xd0;

47 
cur_td
->
ªtvÆ
 = 0;

48 
cur_td
->
id
 = 
i
;

49 
cur_td
->
∑ª¡_id
 = 0;

50 
cur_td
->
¥i‹ôy
 = 0;

51 
cur_td
->
°©us
 = 
TD_ZOMBIE
;

52 
cur_td
->
√xt_‰ì
 = &(
gc
->
tds
[
i
 + 1]);

53 
cur_td
->
√xt_ö_¥i‹ôy
 = 
NULL
;

54 
cur_td
->
fú°_£ndî_ö_queue
 = 
NULL
;

55 
cur_td
->
œ°_£ndî_ö_queue
 = 
NULL
;

56 
cur_td
->
√xt_£ndî
 = 
NULL
;

59 ((
gc
->
tds
)[
TD_MAX
 - 1]).
√xt_‰ì
 = 
NULL
;

60 
	}
}

62 
èsk_des¸ùt‹_t
 * 
	$tds_¸óã_td
(
globÆ_c⁄ãxt_t
 *
gc
, 
¥i‹ôy
, 
code_addr
) {

63 if(
gc
->
td_fú°_‰ì
 =
NULL
) {

65  
NULL
;

68 
èsk_des¸ùt‹_t
 * 
td_out
 = 
gc
->
td_fú°_‰ì
;

70 
td_out
->
id
 = (td_out->id & (
TD_MAX
 - 1)Ë| ((—d_out->id >> 
TD_BIT
) + 1) << TD_BIT) ;

71 
td_out
->
∑ª¡_id
 = 
gc
->
cur_èsk
 =
NULL
 ? 0 : (gc->cur_èsk)->
id
;

72 
td_out
->
¥i‹ôy
 =Öriority;

73 
td_out
->
°©us
 = 
TD_READY
;

76 
gc
->
td_fú°_‰ì
 = 
td_out
->
√xt_‰ì
;

77 
td_out
->
√xt_‰ì
 = 
NULL
;

80 *(
td_out
->
•
 - 10Ë
code_addr
 + 
REDBOOT_OFFSET
;

81 *(
td_out
->
•
 - 2) = ()(td_out->sp);

82 
td_out
->
•
 -= 10;

85 --(
gc
->
td_‰ì_num
);

88  
td_out
;

89 
	}
}

91 
	$tds_ªmove_td
(
globÆ_c⁄ãxt_t
 *
gc
, 
èsk_des¸ùt‹_t
 * 
td
) {

93 
td
->
•§
 = 0xd0;

94 
td
->
•
 =Åd->
‹ig_•
;

95 
td
->
id
 = 0;

96 
td
->
∑ª¡_id
 = 0;

97 
td
->
¥i‹ôy
 = 0;

98 
td
->
°©us
=
TD_ZOMBIE
;

101 (
gc
->
td_œ°_‰ì
)->
√xt_‰ì
 = 
td
;

102 
td
->
√xt_‰ì
 = 
NULL
;

103 
td
->
√xt_ö_¥i‹ôy
 = 
NULL
;

104 
gc
->
td_œ°_‰ì
 = 
td
;

105 ++(
gc
->
td_‰ì_num
);

106 
	}
}

	@src/timer.c

1 
	~<toﬁs.h
>

2 
	~<timî.h
>

3 
	~<ts7200.h
>

5 
	$°¨t_˛ock
–
lﬂd_vÆ
 ) {

7 *
timî_ba£
 = (*)
TIMER3_BASE
;

8 *
˛k_ldr
 = 
timî_ba£
 + (
LDR_OFFSET
 / 4);

9 *
˛k_˘æ
 = 
timî_ba£
 + (
CRTL_OFFSET
 / 4);

11 *
˛k_ldr
 = 
lﬂd_vÆ
;

13 *
˛k_˘æ
 = *˛k_˘æ | 
ENABLE_MASK
 | 
MODE_MASK
 | 
CLKSEL_MASK
;

14 
	}
}

17 
	$gë_timî_vÆ
( ) {

18 *
timî_ba£
 = (*)
TIMER3_BASE
;

19 *
˛k_vÆ
 = 
timî_ba£
 + (
VAL_OFFSET
 / 4);

20  *
˛k_vÆ
;

21 
	}
}

	@src/user_task.c

1 
	~<toﬁs.h
>

2 
	~<u£r_èsk.h
>

3 
	~<sysˇŒ.h
>

4 
	~<«me£rvî.h
>

5 
	~<Ωs.h
>

6 
	~"timî.h
"

8 
	#CYCLES
 1000

	)

11 
	sSîvî
 {

12 
	m¨r
[64];

15 
	$gí_u£r_èsk
( ){

16 
Sîvî
 
£rvî_r
;

17 
i
 = 0;

18 
tid
;

19 * 
msg
;

20 
msgÀn
 = (
£rvî_r
);

21 
msg
 = (*)&
£rvî_r
;

22  ; 
i
 < 5; ++i ){

23 
	`debug
–"I¿gí_u£r_èsk, iãr: %d", 
i
 );

24 
	`Pass
( );

26 
	`debug
("tid: %x, msg: %x, msgÀn: %d", &
tid
, &
£rvî_r
, 
msgÀn
);

27 
πn
 = 
	`Re˚ive
–&
tid
, (*Ë&
£rvî_r
, 
msgÀn
 );

28 
	`debug
("πn: %d", 
πn
);

30 
	`Exô
( );

31 
	}
}

33 
	$u£r_ª˚ive_èsk
( ){

34 
£ndî_tid
;

35 
Sîvî
 
£rvî_r
;

36 
Sîvî
 
£rvî_ª∂y
;

37 
cy˛es
 = 
CYCLES
;

38 
πn
;

42 
msgÀn
 = (
£rvî_r
);

44 --
cy˛es
 >= 0){

45 
πn
 = 
	`Re˚ive
–&
£ndî_tid
, (*Ë&
£rvî_r
, 
msgÀn
 );

46 
	`debug
("πn: %d", 
πn
);

48 
πn
 = 
	`Rïly
–
£ndî_tid
, (*)&
£rvî_ª∂y
, (server_reply) );

49 
	`debug
("Rïly'†πn: %d", 
πn
 );

56 
	`Exô
( );

57 
	}
}

60 
	$u£r_£nd_èsk
( ){

61 
Sîvî
 
£rvî_s
;

62 
Sîvî
 
£rvî_ª∂y
;

65 
ª˚ivî_tid
 = 
	`Cª©e
–4, &
u£r_ª˚ive_èsk
 );

66 
cy˛es
;

67 
πn
;

68 
cy˛es
 = 
CYCLES
;

74 --
cy˛es
 >= 0){

75 
πn
 = 
	`Síd
–
ª˚ivî_tid
, (*Ë&
£rvî_s
, (£rvî_s), (*Ë&
£rvî_ª∂y
, (server_reply));

76 
	`debug
–"Síd'†πn: %d", 
πn
 );

79 
	`Exô
( );

81 
	}
}

83 #unde‡
A1


85 #ifde‡
A1


86 
	$a1_u£r_èsk
( ){

87 
my_tid
;

88 
∑ª¡_tid
;

89 
my_tid
 = 
	`MyTid
( );

90 
∑ª¡_tid
 = 
	`MyP¨ítTid
( );

91 
	`bw¥ötf
–
COM2
, "My TID: %d, P¨íàTID: %d\n\r", 
my_tid
, 
∑ª¡_tid
 );

92 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
my_tid
), 
	`TID_GEN
(my_tid));

93 
	`Pass
( );

94 
	`bw¥ötf
–
COM2
, "My TID: %d, P¨íàTID: %d\n\r", 
my_tid
, 
∑ª¡_tid
 );

95 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
my_tid
), 
	`TID_GEN
(my_tid));

96 
	`Exô
( );

97 
	}
}

99 #ifde‡
A2


100 
	$a2_ã°_èsk
( ) {

101 
	`bw£tfifo
–
COM2
, 
OFF
 );

102 
	`°¨t_˛ock
–
TIMER_LOAD_VAL
 );

104 
£ndî_tid1
;

105 
°¨t_tick
, 
íd_tick
;

107 
°¨t_tick
 = ()
	`gë_timî_vÆ
( );

108 
£ndî_tid1
 = 
	`Cª©e
–3, &
u£r_£nd_èsk
 );

109 
íd_tick
 = ()
	`gë_timî_vÆ
( );

111 
	`bw¥ötf
–
COM2
, "avîagêduøti⁄ i¿ticks:: %d\n\r", (
°¨t_tick
 - 
íd_tick
) );

115 
	`Exô
( );

116 
	}
}

118 
	$a2_u£r_èsk
( ) {

119 
	`bw£tfifo
–
COM2
, 
OFF
 );

121 
«me£rvî_tid
 = 
	`Cª©e
–1, &
«me£rvî_maö
 );

122 
	`debug
–"Name£rvîÅid: %d", 
«me£rvî_tid
 );

123 
Ωs_£rvî_tid
 = 
	`Cª©e
–2, &
Ωs_£rvî
 );

124 
	`debug
–"RPS SîvîÅid: %d", 
Ωs_£rvî_tid
 );

125 
Ωs_˛õ¡1_tid
 = 
	`Cª©e
–10, &
Ωs_˛õ¡1
 );

126 
	`debug
–"RPS clõ¡1Åid: %d", 
Ωs_˛õ¡1_tid
 );

127 
Ωs_˛õ¡2_tid
 = 
	`Cª©e
–10, &
Ωs_˛õ¡1
 );

128 
	`debug
–"RPS clõ¡2Åid: %d", 
Ωs_˛õ¡2_tid
 );

129 
Ωs_˛õ¡3_tid
 = 
	`Cª©e
–10, &
Ωs_˛õ¡1
 );

130 
	`debug
–"RPS clõ¡3Åid: %d", 
Ωs_˛õ¡3_tid
 );

131 
Ωs_˛õ¡4_tid
 = 
	`Cª©e
–10, &
Ωs_˛õ¡1
 );

132 
	`debug
–"RPS clõ¡4Åid: %d", 
Ωs_˛õ¡4_tid
 );

133 
Ωs_˛õ¡5_tid
 = 
	`Cª©e
–10, &
Ωs_˛õ¡1
 );

134 
	`debug
–"RPS clõ¡5Åid: %d", 
Ωs_˛õ¡5_tid
 );

137 
	`Exô
( );

138 
	}
}

141 
	$fú°_u£r_èsk
( ){

142 #ifde‡
A1


143 
fú°_tid
 = 
	`MyTid
( );

144 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
fú°_tid
), 
	`TID_GEN
(first_tid));

146 
¸óãd_tid
;

147 
¸óãd_tid
 = 
	`Cª©e
–10, &
a1_u£r_èsk
 );

148 
	`bw¥ötf
–
COM2
, "Cª©ed: %d, Pri‹ôy: LowîÅh™ Fú°\n\r", 
¸óãd_tid
);

149 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
¸óãd_tid
), 
	`TID_GEN
(created_tid));

151 
¸óãd_tid
 = 
	`Cª©e
–10, &
a1_u£r_èsk
 );

152 
	`bw¥ötf
–
COM2
, "Cª©ed: %d, Pri‹ôy: LowîÅh™ Fú°\n\r", 
¸óãd_tid
);

153 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
¸óãd_tid
), 
	`TID_GEN
(created_tid));

155 
¸óãd_tid
 = 
	`Cª©e
–1, &
a1_u£r_èsk
 );

156 
	`bw¥ötf
–
COM2
, "Cª©ed: %d, Pri‹ôy: HighîÅh™ Fú°\n\r", 
¸óãd_tid
);

157 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
¸óãd_tid
), 
	`TID_GEN
(created_tid));

159 
¸óãd_tid
 = 
	`Cª©e
–1, &
a1_u£r_èsk
 );

160 
	`bw¥ötf
–
COM2
, "Cª©ed: %d, Pri‹ôy: HighîÅh™ Fú°\n\r", 
¸óãd_tid
);

161 
	`debug
–"TID_IDX: %d, TID_GEN: %d", 
	`TID_IDX
(
¸óãd_tid
), 
	`TID_GEN
(created_tid));

164 #ifde‡
A2


165 
	`a2_ã°_èsk
( );

170 
	`bw¥ötf
–
COM2
, "First:Éxiting\n\r");

171 
	`Exô
( );

172 
	}
}

	@untracked/test.c

2 
	~<°dio.h
>

23 
	$kmem˝y
–*
d°0
, *
§c0
, 
size_t
 
Àn
 ) {

24 * 
d°
 = 
d°0
;

25 * 
§c
 = 
§c0
;

26 
d°
 +
Àn
;

27 
§c
 +
Àn
;

28  --
Àn
 > 0 ) {

34 
	}
}

36 
	$maö
() {

37 * 
§c
 = "12345\0";

38 * 
d°
 = "11111\0";

40 
	`kmem˝y
((*)
d°
, (*)
§c
, 3);

41 
	`¥ötf
("d°[0]: %c, d°[œ°]: %c\n", 
d°
[0], dst[5]);

44 
	}
}

	@untracked/tools.h

4 #i‚de‡
__TOOLS_H__


5 
	#__TOOLS_H__


	)

8 
	~<°dio.h
>

10 
	#FOREVER
  ; ; )

	)

13 
	#as£π
(
c⁄d
, ...) \

14 if(!(
c⁄d
)) { \

15 
	`¥ötf
("As£π faûed (%s: %d): %s\n\r\n\r",
__FILE__
,
__LINE__
, ## 
__VA_ARGS__
);\

16 }

	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

173 
	#°dö
 
°dö


	)

174 
	#°dout
 
°dout


	)

175 
	#°dîr
 
°dîr


	)

177 
__BEGIN_NAMESPACE_STD


179 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

181 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

182 
__END_NAMESPACE_STD


184 #ifde‡
__USE_ATFILE


186 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

187 
__c⁄°
 *
__√w
Ë
__THROW
;

190 
__BEGIN_NAMESPACE_STD


195 #i‚de‡
__USE_FILE_OFFSET64


196 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

198 #ifde‡
__REDIRECT


199 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

210 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

211 
__END_NAMESPACE_STD


213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

233 
__BEGIN_NAMESPACE_STD


238 
	`f˛o£
 (
FILE
 *
__°ªam
);

243 
	`fÊush
 (
FILE
 *
__°ªam
);

244 
__END_NAMESPACE_STD


246 #ifde‡
__USE_MISC


253 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

256 #ifde‡
__USE_GNU


263 
	`f˛o£Æl
 ();

267 
__BEGIN_NAMESPACE_STD


268 #i‚de‡
__USE_FILE_OFFSET64


273 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

274 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

279 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

280 
__c⁄°
 *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

283 #ifde‡
__REDIRECT


284 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

285 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

286 
__wur
;

287 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

288 
__c⁄°
 *
__ª°ri˘
 
__modes
,

289 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

290 
__wur
;

292 
	#f›í
 
f›í64


	)

293 
	#‰e›í
 
‰e›í64


	)

296 
__END_NAMESPACE_STD


297 #ifde‡
__USE_LARGEFILE64


298 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

299 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

300 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
,

302 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

305 #ifdef 
__USE_POSIX


307 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

310 #ifdef 
__USE_GNU


313 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

314 
__c⁄°
 *
__ª°ri˘
 
__modes
,

315 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

318 #ifde‡
__USE_XOPEN2K8


320 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

321 
__THROW
 
__wur
;

326 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

330 
__BEGIN_NAMESPACE_STD


333 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

337 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

338 
__modes
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifdef 
__USE_BSD


344 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

345 
size_t
 
__size
Ë
__THROW
;

348 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

352 
__BEGIN_NAMESPACE_STD


357 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

363 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

373 
_G_va_li°
 
__¨g
);

378 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

381 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

382 
__END_NAMESPACE_STD


384 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
__BEGIN_NAMESPACE_C99


387 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

389 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

391 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

392 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

393 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 
__END_NAMESPACE_C99


397 #ifde‡
__USE_GNU


400 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

401 
_G_va_li°
 
__¨g
)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

403 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

404 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

406 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

407 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

408 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

411 #ifde‡
__USE_XOPEN2K8


418 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

419 
_G_va_li°
 
__¨g
)

420 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

421 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

426 
__BEGIN_NAMESPACE_STD


431 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

432 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

437 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

440 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

442 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

443 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

444 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

445 #ifde‡
__REDIRECT


449 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

450 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

451 
__isoc99_fsˇnf
Ë
__wur
;

452 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_sˇnf
Ë
__wur
;

454 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

456 
__isoc99_ssˇnf
);

458 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

459 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

460 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

461 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

462 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

463 
	#fsˇnf
 
__isoc99_fsˇnf


	)

464 
	#sˇnf
 
__isoc99_sˇnf


	)

465 
	#ssˇnf
 
__isoc99_ssˇnf


	)

469 
__END_NAMESPACE_STD


471 #ifdef 
__USE_ISOC99


472 
__BEGIN_NAMESPACE_C99


477 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

478 
_G_va_li°
 
__¨g
)

479 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

485 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

486 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

489 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

490 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

491 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

493 #i‡!
deföed
 
__USE_GNU
 \

494 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

495 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

496 #ifde‡
__REDIRECT


500 
	`__REDIRECT
 (
vfsˇnf
,

501 (
FILE
 *
__ª°ri˘
 
__s
,

502 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

503 
__isoc99_vfsˇnf
)

504 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

505 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

506 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

507 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

508 
	`__REDIRECT_NTH
 (
vssˇnf
,

509 (
__c⁄°
 *
__ª°ri˘
 
__s
,

510 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

511 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

512 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

514 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

515 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

516 
_G_va_li°
 
__¨g
Ë
__wur
;

517 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

520 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

521 
_G_va_li°
 
__¨g
Ë
__THROW
;

522 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

523 
	#vsˇnf
 
__isoc99_vsˇnf


	)

524 
	#vssˇnf
 
__isoc99_vssˇnf


	)

528 
__END_NAMESPACE_C99


532 
__BEGIN_NAMESPACE_STD


537 
	`fgëc
 (
FILE
 *
__°ªam
);

538 
	`gëc
 (
FILE
 *
__°ªam
);

544 
	`gëch¨
 ();

545 
__END_NAMESPACE_STD


549 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

551 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


556 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

557 
	`gëch¨_u∆ocked
 ();

560 #ifde‡
__USE_MISC


567 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

571 
__BEGIN_NAMESPACE_STD


579 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

586 
	`putch¨
 (
__c
);

587 
__END_NAMESPACE_STD


591 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

593 #ifde‡
__USE_MISC


600 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


608 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

609 
	`putch¨_u∆ocked
 (
__c
);

613 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

614 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

616 
	`gëw
 (
FILE
 *
__°ªam
);

619 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

623 
__BEGIN_NAMESPACE_STD


628 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

629 
__wur
;

636 *
	$gës
 (*
__s
Ë
__wur
;

637 
__END_NAMESPACE_STD


639 #ifde‡
__USE_GNU


646 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

647 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

651 #ifdef 
__USE_XOPEN2K8


662 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

663 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

664 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

665 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

675 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

676 
size_t
 *
__ª°ri˘
 
__n
,

677 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

681 
__BEGIN_NAMESPACE_STD


686 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

692 
	`puts
 (
__c⁄°
 *
__s
);

699 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

706 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

707 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

712 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

713 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

714 
__END_NAMESPACE_STD


716 #ifde‡
__USE_GNU


723 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

724 
FILE
 *
__ª°ri˘
 
__°ªam
);

727 #ifde‡
__USE_MISC


734 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

735 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

736 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

741 
__BEGIN_NAMESPACE_STD


746 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

751 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

756 
	`ªwöd
 (
FILE
 *
__°ªam
);

757 
__END_NAMESPACE_STD


764 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


765 #i‚de‡
__USE_FILE_OFFSET64


770 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

775 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

777 #ifde‡
__REDIRECT


778 
	`__REDIRECT
 (
f£eko
,

779 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

780 
f£eko64
);

781 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

783 
	#f£eko
 
f£eko64


	)

784 
	#·ñlo
 
·ñlo64


	)

789 
__BEGIN_NAMESPACE_STD


790 #i‚de‡
__USE_FILE_OFFSET64


795 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

800 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

802 #ifde‡
__REDIRECT


803 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

804 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

805 
	`__REDIRECT
 (
f£ços
,

806 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

808 
	#fgëpos
 
fgëpos64


	)

809 
	#f£ços
 
f£ços64


	)

812 
__END_NAMESPACE_STD


814 #ifde‡
__USE_LARGEFILE64


815 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

816 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

817 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

818 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

821 
__BEGIN_NAMESPACE_STD


823 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

825 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

827 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

828 
__END_NAMESPACE_STD


830 #ifde‡
__USE_MISC


832 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

833 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

838 
__BEGIN_NAMESPACE_STD


843 
	`≥º‹
 (
__c⁄°
 *
__s
);

844 
__END_NAMESPACE_STD


850 
	~<bôs/sys_îæi°.h
>

853 #ifdef 
__USE_POSIX


855 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

858 #ifde‡
__USE_MISC


860 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

864 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

865 
deföed
 
__USE_MISC
)

870 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

876 
	`p˛o£
 (
FILE
 *
__°ªam
);

880 #ifdef 
__USE_POSIX


882 *
	$˘îmid
 (*
__s
Ë
__THROW
;

886 #ifde‡
__USE_XOPEN


888 *
	`cu£rid
 (*
__s
);

892 #ifdef 
__USE_GNU


893 
ob°ack
;

896 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

897 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

898 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

899 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

901 
_G_va_li°
 
__¨gs
)

902 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

906 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


910 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

914 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

917 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

920 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


924 
	#__√ed_gë›t


	)

925 
	~<gë›t.h
>

930 #ifde‡
__USE_EXTERN_INLINES


931 
	~<bôs/°dio.h
>

933 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


934 
	~<bôs/°dio2.h
>

936 #ifde‡
__LDBL_COMPAT


937 
	~<bôs/°dio-ldbl.h
>

940 
__END_DECLS


	@/usr/include/syscall.h

1 
	~<sys/sysˇŒ.h
>

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

313 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

314 #i‡
_FORTIFY_SOURCE
 > 1

315 
	#__USE_FORTIFY_LEVEL
 2

	)

317 
	#__USE_FORTIFY_LEVEL
 1

	)

320 
	#__USE_FORTIFY_LEVEL
 0

	)

324 
	~<bôs/¥edefs.h
>

327 
	#__STDC_ISO_10646__
 200009L

	)

335 #unde‡
__GNU_LIBRARY__


336 
	#__GNU_LIBRARY__
 6

	)

340 
	#__GLIBC__
 2

	)

341 
	#__GLIBC_MINOR__
 15

	)

343 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

344 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

347 #i‡
deföed
 
__GNUC__
 \

348 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

349 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

350 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

351 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

355 #i‚de‡
__ASSEMBLER__


356 #i‚de‡
_SYS_CDEFS_H


357 
	~<sys/cdefs.h
>

362 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


363 
	#__USE_LARGEFILE
 1

	)

364 
	#__USE_LARGEFILE64
 1

	)

370 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

371 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

372 && 
deföed
 
	g__exã∫_ölöe


373 
	#__USE_EXTERN_INLINES
 1

	)

378 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

379 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

380 && 
deföed
 
	g__exã∫_ölöe


381 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

389 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/sys/syscall.h

19 #i‚de‡
_SYSCALL_H


20 
	#_SYSCALL_H
 1

	)

25 
	~<asm/uni°d.h
>

27 #i‚de‡
_LIBC


32 
	~<bôs/sysˇŒ.h
>

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/asm/unistd.h

1 #ifde‡
__i386__


2 
	~<asm/uni°d_32.h
>

4 
	~<asm/uni°d_64.h
>

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/predefs.h

19 #i‚de‡
_FEATURES_H


23 #i‚de‡
_PREDEFS_H


24 
	#_PREDEFS_H


	)

27 
	#__STDC_IEC_559__
 1

	)

28 
	#__STDC_IEC_559_COMPLEX__
 1

	)

	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

24 
	~<lowÀvñlock.h
>

28 
	#_IO_lock_öex≥nsive
 1

	)

30 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t_IO_lock_t
;

32 
	#_IO_lock_öôülizî
 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

34 
	#_IO_lock_öô
(
_«me
) \

35 ((
_«me
Ë(
_IO_lock_t
Ë
_IO_lock_öôülizî
 , 0)

	)

37 
	#_IO_lock_föi
(
_«me
) \

38 ((Ë0)

	)

40 
	#_IO_lock_lock
(
_«me
) \

42 *
__£lf
 = 
THREAD_SELF
; \

43 i‡((
_«me
).
ow√r
 !
__£lf
) \

45 
	`Œl_lock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

46 (
_«me
).
ow√r
 = 
__£lf
; \

48 ++(
_«me
).
˙t
; \

49 } 0)

	)

51 
	#_IO_lock_åylock
(
_«me
) \

53 
__ªsu…
 = 0; \

54 *
__£lf
 = 
THREAD_SELF
; \

55 i‡((
_«me
).
ow√r
 !
__£lf
) \

57 i‡(
	`Œl_åylock
 ((
_«me
).
lock
) == 0) \

59 (
_«me
).
ow√r
 = 
__£lf
; \

60 (
_«me
).
˙t
 = 1; \

63 
__ªsu…
 = 
EBUSY
; \

66 ++(
_«me
).
˙t
; \

67 
__ªsu…
; \

68 })

	)

70 
	#_IO_lock_u∆ock
(
_«me
) \

72 i‡(--(
_«me
).
˙t
 == 0) \

74 (
_«me
).
ow√r
 = 
NULL
; \

75 
	`Œl_u∆ock
 ((
_«me
).
lock
, 
LLL_PRIVATE
); \

77 } 0)

	)

81 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
) \

82 
	`__libc_˛ónup_ªgi⁄_°¨t
 (((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0, 
_f˘
, _Â)

	)

83 
	#_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
_f˘
) \

84 
	`__libc_˛ónup_ªgi⁄_°¨t
 (1, 
_f˘
, 
NULL
)

	)

85 
	#_IO_˛ónup_ªgi⁄_íd
(
_doô
) \

86 
	`__libc_˛ónup_ªgi⁄_íd
 (
_doô
)

	)

88 #i‡
deföed
 
_LIBC
 && !deföed 
NOT_IN_libc


90 #ifde‡
__EXCEPTIONS


91 
	#_IO_acquúe_lock
(
_Â
) \

93 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

94 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_f˘
))) \

95 (
_Â
); \

96 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

97 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
) \

99 
_IO_FILE
 *
_IO_acquúe_lock_fûe
 \

100 
	`__©åibuã__
((
	`˛ónup
 (
_IO_acquúe_lock_˛ór_Êags2_f˘
))) \

101 (
_Â
); \

102 
	`_IO_Êockfûe
 (
_IO_acquúe_lock_fûe
);

	)

104 
	#_IO_acquúe_lock
(
_Â
Ë
_IO_acquúe_lock_√eds_ex˚±i⁄s_íabÀd


	)

105 
	#_IO_acquúe_lock_˛ór_Êags2
(
_Â
Ë
	`_IO_acquúe_lock
 (_Â)

	)

107 
	#_IO_ªÀa£_lock
(
_Â
Ë; } 0)

	)

	@/usr/include/bits/syscall.h

3 #i‚de‡
_SYSCALL_H


7 
	~<bôs/w‹dsize.h
>

9 #i‡
__WORDSIZE
 == 32

10 
	#SYS__Œ£ek
 
__NR__Œ£ek


	)

11 
	#SYS__√w£À˘
 
__NR__√w£À˘


	)

12 
	#SYS__sys˘l
 
__NR__sys˘l


	)

13 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

14 
	#SYS_ac˘
 
__NR_ac˘


	)

15 
	#SYS_add_key
 
__NR_add_key


	)

16 
	#SYS_adjtimex
 
__NR_adjtimex


	)

17 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

18 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

19 
	#SYS_bdÊush
 
__NR_bdÊush


	)

20 
	#SYS_bªak
 
__NR_bªak


	)

21 
	#SYS_brk
 
__NR_brk


	)

22 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

23 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

24 
	#SYS_chdú
 
__NR_chdú


	)

25 
	#SYS_chmod
 
__NR_chmod


	)

26 
	#SYS_chown
 
__NR_chown


	)

27 
	#SYS_chown32
 
__NR_chown32


	)

28 
	#SYS_chroŸ
 
__NR_chroŸ


	)

29 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

30 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

31 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

32 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

33 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

34 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

35 
	#SYS_˛o£
 
__NR_˛o£


	)

36 
	#SYS_¸ót
 
__NR_¸ót


	)

37 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

38 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

39 
	#SYS_dup
 
__NR_dup


	)

40 
	#SYS_dup2
 
__NR_dup2


	)

41 
	#SYS_dup3
 
__NR_dup3


	)

42 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

43 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

44 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

45 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

46 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

47 
	#SYS_evítfd
 
__NR_evítfd


	)

48 
	#SYS_evítfd2
 
__NR_evítfd2


	)

49 
	#SYS_execve
 
__NR_execve


	)

50 
	#SYS_exô
 
__NR_exô


	)

51 
	#SYS_exô_group
 
__NR_exô_group


	)

52 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

53 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

54 
	#SYS_Ádvi£64_64
 
__NR_Ádvi£64_64


	)

55 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

56 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

57 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

58 
	#SYS_fchdú
 
__NR_fchdú


	)

59 
	#SYS_fchmod
 
__NR_fchmod


	)

60 
	#SYS_fchmod©
 
__NR_fchmod©


	)

61 
	#SYS_fchown
 
__NR_fchown


	)

62 
	#SYS_fchown32
 
__NR_fchown32


	)

63 
	#SYS_fchow«t
 
__NR_fchow«t


	)

64 
	#SYS_f˙é
 
__NR_f˙é


	)

65 
	#SYS_f˙é64
 
__NR_f˙é64


	)

66 
	#SYS_fd©async
 
__NR_fd©async


	)

67 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

68 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

69 
	#SYS_Êock
 
__NR_Êock


	)

70 
	#SYS_f‹k
 
__NR_f‹k


	)

71 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

72 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

73 
	#SYS_f°©
 
__NR_f°©


	)

74 
	#SYS_f°©64
 
__NR_f°©64


	)

75 
	#SYS_f°©©64
 
__NR_f°©©64


	)

76 
	#SYS_f°©fs
 
__NR_f°©fs


	)

77 
	#SYS_f°©fs64
 
__NR_f°©fs64


	)

78 
	#SYS_fsync
 
__NR_fsync


	)

79 
	#SYS_·ime
 
__NR_·ime


	)

80 
	#SYS_·runˇã
 
__NR_·runˇã


	)

81 
	#SYS_·runˇã64
 
__NR_·runˇã64


	)

82 
	#SYS_fuãx
 
__NR_fuãx


	)

83 
	#SYS_futimeßt
 
__NR_futimeßt


	)

84 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

85 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

86 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

87 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

88 
	#SYS_gë˝u
 
__NR_gë˝u


	)

89 
	#SYS_gëcwd
 
__NR_gëcwd


	)

90 
	#SYS_gëdíts
 
__NR_gëdíts


	)

91 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

92 
	#SYS_gëegid
 
__NR_gëegid


	)

93 
	#SYS_gëegid32
 
__NR_gëegid32


	)

94 
	#SYS_gëeuid
 
__NR_gëeuid


	)

95 
	#SYS_gëeuid32
 
__NR_gëeuid32


	)

96 
	#SYS_gëgid
 
__NR_gëgid


	)

97 
	#SYS_gëgid32
 
__NR_gëgid32


	)

98 
	#SYS_gëgroups
 
__NR_gëgroups


	)

99 
	#SYS_gëgroups32
 
__NR_gëgroups32


	)

100 
	#SYS_gëôimî
 
__NR_gëôimî


	)

101 
	#SYS_gëpgid
 
__NR_gëpgid


	)

102 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

103 
	#SYS_gëpid
 
__NR_gëpid


	)

104 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

105 
	#SYS_gëµid
 
__NR_gëµid


	)

106 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

107 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

108 
	#SYS_gëªsgid32
 
__NR_gëªsgid32


	)

109 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

110 
	#SYS_gëªsuid32
 
__NR_gëªsuid32


	)

111 
	#SYS_gëæimô
 
__NR_gëæimô


	)

112 
	#SYS_gërußge
 
__NR_gërußge


	)

113 
	#SYS_gësid
 
__NR_gësid


	)

114 
	#SYS_gëtid
 
__NR_gëtid


	)

115 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

116 
	#SYS_gëuid
 
__NR_gëuid


	)

117 
	#SYS_gëuid32
 
__NR_gëuid32


	)

118 
	#SYS_gëx©å
 
__NR_gëx©å


	)

119 
	#SYS_gây
 
__NR_gây


	)

120 
	#SYS_idÀ
 
__NR_idÀ


	)

121 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

122 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

123 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

124 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

125 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

126 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

127 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

128 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

129 
	#SYS_io_£tup
 
__NR_io_£tup


	)

130 
	#SYS_io_submô
 
__NR_io_submô


	)

131 
	#SYS_io˘l
 
__NR_io˘l


	)

132 
	#SYS_i›îm
 
__NR_i›îm


	)

133 
	#SYS_i›l
 
__NR_i›l


	)

134 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

135 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

136 
	#SYS_ùc
 
__NR_ùc


	)

137 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

138 
	#SYS_key˘l
 
__NR_key˘l


	)

139 
	#SYS_kûl
 
__NR_kûl


	)

140 
	#SYS_lchown
 
__NR_lchown


	)

141 
	#SYS_lchown32
 
__NR_lchown32


	)

142 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

143 
	#SYS_lök
 
__NR_lök


	)

144 
	#SYS_lök©
 
__NR_lök©


	)

145 
	#SYS_li°x©å
 
__NR_li°x©å


	)

146 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

147 
	#SYS_lock
 
__NR_lock


	)

148 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

149 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

150 
	#SYS_l£ek
 
__NR_l£ek


	)

151 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

152 
	#SYS_l°©
 
__NR_l°©


	)

153 
	#SYS_l°©64
 
__NR_l°©64


	)

154 
	#SYS_madvi£
 
__NR_madvi£


	)

155 
	#SYS_madvi£1
 
__NR_madvi£1


	)

156 
	#SYS_mböd
 
__NR_mböd


	)

157 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

158 
	#SYS_möc‹e
 
__NR_möc‹e


	)

159 
	#SYS_mkdú
 
__NR_mkdú


	)

160 
	#SYS_mkdú©
 
__NR_mkdú©


	)

161 
	#SYS_mknod
 
__NR_mknod


	)

162 
	#SYS_mknod©
 
__NR_mknod©


	)

163 
	#SYS_mlock
 
__NR_mlock


	)

164 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

165 
	#SYS_mm≠
 
__NR_mm≠


	)

166 
	#SYS_mm≠2
 
__NR_mm≠2


	)

167 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

168 
	#SYS_mou¡
 
__NR_mou¡


	)

169 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

170 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

171 
	#SYS_mpx
 
__NR_mpx


	)

172 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

173 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

174 
	#SYS_mq_›í
 
__NR_mq_›í


	)

175 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

176 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

177 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

178 
	#SYS_mªm≠
 
__NR_mªm≠


	)

179 
	#SYS_msync
 
__NR_msync


	)

180 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

181 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

182 
	#SYS_munm≠
 
__NR_munm≠


	)

183 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

184 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

185 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

186 
	#SYS_ni˚
 
__NR_ni˚


	)

187 
	#SYS_ﬁdf°©
 
__NR_ﬁdf°©


	)

188 
	#SYS_ﬁdl°©
 
__NR_ﬁdl°©


	)

189 
	#SYS_ﬁdﬁdu«me
 
__NR_ﬁdﬁdu«me


	)

190 
	#SYS_ﬁd°©
 
__NR_ﬁd°©


	)

191 
	#SYS_ﬁdu«me
 
__NR_ﬁdu«me


	)

192 
	#SYS_›í
 
__NR_›í


	)

193 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

194 
	#SYS_›í©
 
__NR_›í©


	)

195 
	#SYS_∑u£
 
__NR_∑u£


	)

196 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

197 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

198 
	#SYS_pùe
 
__NR_pùe


	)

199 
	#SYS_pùe2
 
__NR_pùe2


	)

200 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

201 
	#SYS_pﬁl
 
__NR_pﬁl


	)

202 
	#SYS_µﬁl
 
__NR_µﬁl


	)

203 
	#SYS_¥˘l
 
__NR_¥˘l


	)

204 
	#SYS_¥ód64
 
__NR_¥ód64


	)

205 
	#SYS_¥ódv
 
__NR_¥ódv


	)

206 
	#SYS_¥limô64
 
__NR_¥limô64


	)

207 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

208 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

209 
	#SYS_¥of
 
__NR_¥of


	)

210 
	#SYS_¥ofû
 
__NR_¥ofû


	)

211 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

212 
	#SYS_±ø˚
 
__NR_±ø˚


	)

213 
	#SYS_puçmsg
 
__NR_puçmsg


	)

214 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

215 
	#SYS_pwrôev
 
__NR_pwrôev


	)

216 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

217 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

218 
	#SYS_ªad
 
__NR_ªad


	)

219 
	#SYS_ªadahód
 
__NR_ªadahód


	)

220 
	#SYS_ªaddú
 
__NR_ªaddú


	)

221 
	#SYS_ªadlök
 
__NR_ªadlök


	)

222 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

223 
	#SYS_ªadv
 
__NR_ªadv


	)

224 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

225 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

226 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

227 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

228 
	#SYS_ª«me
 
__NR_ª«me


	)

229 
	#SYS_ª«mót
 
__NR_ª«mót


	)

230 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

231 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

232 
	#SYS_rmdú
 
__NR_rmdú


	)

233 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

234 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

235 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

236 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

237 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

238 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

239 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

240 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

241 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

242 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

243 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

244 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

245 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

246 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

247 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

248 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

249 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

250 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

251 
	#SYS_£À˘
 
__NR_£À˘


	)

252 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

253 
	#SYS_£ndfûe64
 
__NR_£ndfûe64


	)

254 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

255 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

256 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

257 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

258 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

259 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

260 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

261 
	#SYS_£tfsgid32
 
__NR_£tfsgid32


	)

262 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

263 
	#SYS_£tfsuid32
 
__NR_£tfsuid32


	)

264 
	#SYS_£tgid
 
__NR_£tgid


	)

265 
	#SYS_£tgid32
 
__NR_£tgid32


	)

266 
	#SYS_£tgroups
 
__NR_£tgroups


	)

267 
	#SYS_£tgroups32
 
__NR_£tgroups32


	)

268 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

269 
	#SYS_£tôimî
 
__NR_£tôimî


	)

270 
	#SYS_£äs
 
__NR_£äs


	)

271 
	#SYS_£çgid
 
__NR_£çgid


	)

272 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

273 
	#SYS_£åegid
 
__NR_£åegid


	)

274 
	#SYS_£åegid32
 
__NR_£åegid32


	)

275 
	#SYS_£åesgid
 
__NR_£åesgid


	)

276 
	#SYS_£åesgid32
 
__NR_£åesgid32


	)

277 
	#SYS_£åesuid
 
__NR_£åesuid


	)

278 
	#SYS_£åesuid32
 
__NR_£åesuid32


	)

279 
	#SYS_£åeuid
 
__NR_£åeuid


	)

280 
	#SYS_£åeuid32
 
__NR_£åeuid32


	)

281 
	#SYS_£ålimô
 
__NR_£ålimô


	)

282 
	#SYS_£tsid
 
__NR_£tsid


	)

283 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

284 
	#SYS_£tuid
 
__NR_£tuid


	)

285 
	#SYS_£tuid32
 
__NR_£tuid32


	)

286 
	#SYS_£tx©å
 
__NR_£tx©å


	)

287 
	#SYS_sgëmask
 
__NR_sgëmask


	)

288 
	#SYS_siga˘i⁄
 
__NR_siga˘i⁄


	)

289 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

290 
	#SYS_sig«l
 
__NR_sig«l


	)

291 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

292 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

293 
	#SYS_sig≥ndög
 
__NR_sig≥ndög


	)

294 
	#SYS_sig¥ocmask
 
__NR_sig¥ocmask


	)

295 
	#SYS_sigªtu∫
 
__NR_sigªtu∫


	)

296 
	#SYS_sigsu•íd
 
__NR_sigsu•íd


	)

297 
	#SYS_sockëˇŒ
 
__NR_sockëˇŒ


	)

298 
	#SYS_•li˚
 
__NR_•li˚


	)

299 
	#SYS_s£tmask
 
__NR_s£tmask


	)

300 
	#SYS_°©
 
__NR_°©


	)

301 
	#SYS_°©64
 
__NR_°©64


	)

302 
	#SYS_°©fs
 
__NR_°©fs


	)

303 
	#SYS_°©fs64
 
__NR_°©fs64


	)

304 
	#SYS_°ime
 
__NR_°ime


	)

305 
	#SYS_°ty
 
__NR_°ty


	)

306 
	#SYS_sw≠off
 
__NR_sw≠off


	)

307 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

308 
	#SYS_symlök
 
__NR_symlök


	)

309 
	#SYS_symlök©
 
__NR_symlök©


	)

310 
	#SYS_sync
 
__NR_sync


	)

311 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

312 
	#SYS_syncfs
 
__NR_syncfs


	)

313 
	#SYS_sysfs
 
__NR_sysfs


	)

314 
	#SYS_sysöfo
 
__NR_sysöfo


	)

315 
	#SYS_sy¶og
 
__NR_sy¶og


	)

316 
	#SYS_ãe
 
__NR_ãe


	)

317 
	#SYS_tgkûl
 
__NR_tgkûl


	)

318 
	#SYS_time
 
__NR_time


	)

319 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

320 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

321 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

322 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

323 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

324 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

325 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

326 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

327 
	#SYS_times
 
__NR_times


	)

328 
	#SYS_tkûl
 
__NR_tkûl


	)

329 
	#SYS_åunˇã
 
__NR_åunˇã


	)

330 
	#SYS_åunˇã64
 
__NR_åunˇã64


	)

331 
	#SYS_ugëæimô
 
__NR_ugëæimô


	)

332 
	#SYS_ulimô
 
__NR_ulimô


	)

333 
	#SYS_umask
 
__NR_umask


	)

334 
	#SYS_umou¡
 
__NR_umou¡


	)

335 
	#SYS_umou¡2
 
__NR_umou¡2


	)

336 
	#SYS_u«me
 
__NR_u«me


	)

337 
	#SYS_u∆ök
 
__NR_u∆ök


	)

338 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

339 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

340 
	#SYS_u£lib
 
__NR_u£lib


	)

341 
	#SYS_u°©
 
__NR_u°©


	)

342 
	#SYS_utime
 
__NR_utime


	)

343 
	#SYS_utimíßt
 
__NR_utimíßt


	)

344 
	#SYS_utimes
 
__NR_utimes


	)

345 
	#SYS_vf‹k
 
__NR_vf‹k


	)

346 
	#SYS_vh™gup
 
__NR_vh™gup


	)

347 
	#SYS_vm86
 
__NR_vm86


	)

348 
	#SYS_vm86ﬁd
 
__NR_vm86ﬁd


	)

349 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

350 
	#SYS_v£rvî
 
__NR_v£rvî


	)

351 
	#SYS_waô4
 
__NR_waô4


	)

352 
	#SYS_waôid
 
__NR_waôid


	)

353 
	#SYS_waôpid
 
__NR_waôpid


	)

354 
	#SYS_wrôe
 
__NR_wrôe


	)

355 
	#SYS_wrôev
 
__NR_wrôev


	)

357 #i‡
__WORDSIZE
 == 64

358 
	#SYS__sys˘l
 
__NR__sys˘l


	)

359 
	#SYS_ac˚±
 
__NR_ac˚±


	)

360 
	#SYS_ac˚±4
 
__NR_ac˚±4


	)

361 
	#SYS_ac˚ss
 
__NR_ac˚ss


	)

362 
	#SYS_ac˘
 
__NR_ac˘


	)

363 
	#SYS_add_key
 
__NR_add_key


	)

364 
	#SYS_adjtimex
 
__NR_adjtimex


	)

365 
	#SYS_afs_sysˇŒ
 
__NR_afs_sysˇŒ


	)

366 
	#SYS_Æ¨m
 
__NR_Æ¨m


	)

367 
	#SYS_¨ch_¥˘l
 
__NR_¨ch_¥˘l


	)

368 
	#SYS_böd
 
__NR_böd


	)

369 
	#SYS_brk
 
__NR_brk


	)

370 
	#SYS_ˇpgë
 
__NR_ˇpgë


	)

371 
	#SYS_ˇp£t
 
__NR_ˇp£t


	)

372 
	#SYS_chdú
 
__NR_chdú


	)

373 
	#SYS_chmod
 
__NR_chmod


	)

374 
	#SYS_chown
 
__NR_chown


	)

375 
	#SYS_chroŸ
 
__NR_chroŸ


	)

376 
	#SYS_˛ock_adjtime
 
__NR_˛ock_adjtime


	)

377 
	#SYS_˛ock_gëªs
 
__NR_˛ock_gëªs


	)

378 
	#SYS_˛ock_gëtime
 
__NR_˛ock_gëtime


	)

379 
	#SYS_˛ock_«no¶ìp
 
__NR_˛ock_«no¶ìp


	)

380 
	#SYS_˛ock_£âime
 
__NR_˛ock_£âime


	)

381 
	#SYS_˛⁄e
 
__NR_˛⁄e


	)

382 
	#SYS_˛o£
 
__NR_˛o£


	)

383 
	#SYS_c⁄√˘
 
__NR_c⁄√˘


	)

384 
	#SYS_¸ót
 
__NR_¸ót


	)

385 
	#SYS_¸óã_moduÀ
 
__NR_¸óã_moduÀ


	)

386 
	#SYS_dñëe_moduÀ
 
__NR_dñëe_moduÀ


	)

387 
	#SYS_dup
 
__NR_dup


	)

388 
	#SYS_dup2
 
__NR_dup2


	)

389 
	#SYS_dup3
 
__NR_dup3


	)

390 
	#SYS_ïﬁl_¸óã
 
__NR_ïﬁl_¸óã


	)

391 
	#SYS_ïﬁl_¸óã1
 
__NR_ïﬁl_¸óã1


	)

392 
	#SYS_ïﬁl_˘l
 
__NR_ïﬁl_˘l


	)

393 
	#SYS_ïﬁl_˘l_ﬁd
 
__NR_ïﬁl_˘l_ﬁd


	)

394 
	#SYS_ïﬁl_pwaô
 
__NR_ïﬁl_pwaô


	)

395 
	#SYS_ïﬁl_waô
 
__NR_ïﬁl_waô


	)

396 
	#SYS_ïﬁl_waô_ﬁd
 
__NR_ïﬁl_waô_ﬁd


	)

397 
	#SYS_evítfd
 
__NR_evítfd


	)

398 
	#SYS_evítfd2
 
__NR_evítfd2


	)

399 
	#SYS_execve
 
__NR_execve


	)

400 
	#SYS_exô
 
__NR_exô


	)

401 
	#SYS_exô_group
 
__NR_exô_group


	)

402 
	#SYS_Ác˚sßt
 
__NR_Ác˚sßt


	)

403 
	#SYS_Ádvi£64
 
__NR_Ádvi£64


	)

404 
	#SYS_ÁŒoˇã
 
__NR_ÁŒoˇã


	)

405 
	#SYS_ÁnŸify_öô
 
__NR_ÁnŸify_öô


	)

406 
	#SYS_ÁnŸify_m¨k
 
__NR_ÁnŸify_m¨k


	)

407 
	#SYS_fchdú
 
__NR_fchdú


	)

408 
	#SYS_fchmod
 
__NR_fchmod


	)

409 
	#SYS_fchmod©
 
__NR_fchmod©


	)

410 
	#SYS_fchown
 
__NR_fchown


	)

411 
	#SYS_fchow«t
 
__NR_fchow«t


	)

412 
	#SYS_f˙é
 
__NR_f˙é


	)

413 
	#SYS_fd©async
 
__NR_fd©async


	)

414 
	#SYS_fgëx©å
 
__NR_fgëx©å


	)

415 
	#SYS_Êi°x©å
 
__NR_Êi°x©å


	)

416 
	#SYS_Êock
 
__NR_Êock


	)

417 
	#SYS_f‹k
 
__NR_f‹k


	)

418 
	#SYS_‰emovex©å
 
__NR_‰emovex©å


	)

419 
	#SYS_f£tx©å
 
__NR_f£tx©å


	)

420 
	#SYS_f°©
 
__NR_f°©


	)

421 
	#SYS_f°©fs
 
__NR_f°©fs


	)

422 
	#SYS_fsync
 
__NR_fsync


	)

423 
	#SYS_·runˇã
 
__NR_·runˇã


	)

424 
	#SYS_fuãx
 
__NR_fuãx


	)

425 
	#SYS_futimeßt
 
__NR_futimeßt


	)

426 
	#SYS_gë_kî√l_syms
 
__NR_gë_kî√l_syms


	)

427 
	#SYS_gë_mempﬁicy
 
__NR_gë_mempﬁicy


	)

428 
	#SYS_gë_robu°_li°
 
__NR_gë_robu°_li°


	)

429 
	#SYS_gë_thªad_¨ó
 
__NR_gë_thªad_¨ó


	)

430 
	#SYS_gë˝u
 
__NR_gë˝u


	)

431 
	#SYS_gëcwd
 
__NR_gëcwd


	)

432 
	#SYS_gëdíts
 
__NR_gëdíts


	)

433 
	#SYS_gëdíts64
 
__NR_gëdíts64


	)

434 
	#SYS_gëegid
 
__NR_gëegid


	)

435 
	#SYS_gëeuid
 
__NR_gëeuid


	)

436 
	#SYS_gëgid
 
__NR_gëgid


	)

437 
	#SYS_gëgroups
 
__NR_gëgroups


	)

438 
	#SYS_gëôimî
 
__NR_gëôimî


	)

439 
	#SYS_gë≥î«me
 
__NR_gë≥î«me


	)

440 
	#SYS_gëpgid
 
__NR_gëpgid


	)

441 
	#SYS_gëpgΩ
 
__NR_gëpgΩ


	)

442 
	#SYS_gëpid
 
__NR_gëpid


	)

443 
	#SYS_gëpmsg
 
__NR_gëpmsg


	)

444 
	#SYS_gëµid
 
__NR_gëµid


	)

445 
	#SYS_gë¥i‹ôy
 
__NR_gë¥i‹ôy


	)

446 
	#SYS_gëªsgid
 
__NR_gëªsgid


	)

447 
	#SYS_gëªsuid
 
__NR_gëªsuid


	)

448 
	#SYS_gëæimô
 
__NR_gëæimô


	)

449 
	#SYS_gërußge
 
__NR_gërußge


	)

450 
	#SYS_gësid
 
__NR_gësid


	)

451 
	#SYS_gësock«me
 
__NR_gësock«me


	)

452 
	#SYS_gësock›t
 
__NR_gësock›t


	)

453 
	#SYS_gëtid
 
__NR_gëtid


	)

454 
	#SYS_gëtimeofday
 
__NR_gëtimeofday


	)

455 
	#SYS_gëuid
 
__NR_gëuid


	)

456 
	#SYS_gëx©å
 
__NR_gëx©å


	)

457 
	#SYS_öô_moduÀ
 
__NR_öô_moduÀ


	)

458 
	#SYS_öŸify_add_w©ch
 
__NR_öŸify_add_w©ch


	)

459 
	#SYS_öŸify_öô
 
__NR_öŸify_öô


	)

460 
	#SYS_öŸify_öô1
 
__NR_öŸify_öô1


	)

461 
	#SYS_öŸify_rm_w©ch
 
__NR_öŸify_rm_w©ch


	)

462 
	#SYS_io_ˇn˚l
 
__NR_io_ˇn˚l


	)

463 
	#SYS_io_de°roy
 
__NR_io_de°roy


	)

464 
	#SYS_io_gëevíts
 
__NR_io_gëevíts


	)

465 
	#SYS_io_£tup
 
__NR_io_£tup


	)

466 
	#SYS_io_submô
 
__NR_io_submô


	)

467 
	#SYS_io˘l
 
__NR_io˘l


	)

468 
	#SYS_i›îm
 
__NR_i›îm


	)

469 
	#SYS_i›l
 
__NR_i›l


	)

470 
	#SYS_i›rio_gë
 
__NR_i›rio_gë


	)

471 
	#SYS_i›rio_£t
 
__NR_i›rio_£t


	)

472 
	#SYS_kexec_lﬂd
 
__NR_kexec_lﬂd


	)

473 
	#SYS_key˘l
 
__NR_key˘l


	)

474 
	#SYS_kûl
 
__NR_kûl


	)

475 
	#SYS_lchown
 
__NR_lchown


	)

476 
	#SYS_lgëx©å
 
__NR_lgëx©å


	)

477 
	#SYS_lök
 
__NR_lök


	)

478 
	#SYS_lök©
 
__NR_lök©


	)

479 
	#SYS_li°í
 
__NR_li°í


	)

480 
	#SYS_li°x©å
 
__NR_li°x©å


	)

481 
	#SYS_Œi°x©å
 
__NR_Œi°x©å


	)

482 
	#SYS_lookup_dcookõ
 
__NR_lookup_dcookõ


	)

483 
	#SYS_Ãemovex©å
 
__NR_Ãemovex©å


	)

484 
	#SYS_l£ek
 
__NR_l£ek


	)

485 
	#SYS_l£tx©å
 
__NR_l£tx©å


	)

486 
	#SYS_l°©
 
__NR_l°©


	)

487 
	#SYS_madvi£
 
__NR_madvi£


	)

488 
	#SYS_mböd
 
__NR_mböd


	)

489 
	#SYS_migøã_∑ges
 
__NR_migøã_∑ges


	)

490 
	#SYS_möc‹e
 
__NR_möc‹e


	)

491 
	#SYS_mkdú
 
__NR_mkdú


	)

492 
	#SYS_mkdú©
 
__NR_mkdú©


	)

493 
	#SYS_mknod
 
__NR_mknod


	)

494 
	#SYS_mknod©
 
__NR_mknod©


	)

495 
	#SYS_mlock
 
__NR_mlock


	)

496 
	#SYS_mlockÆl
 
__NR_mlockÆl


	)

497 
	#SYS_mm≠
 
__NR_mm≠


	)

498 
	#SYS_modify_ldt
 
__NR_modify_ldt


	)

499 
	#SYS_mou¡
 
__NR_mou¡


	)

500 
	#SYS_move_∑ges
 
__NR_move_∑ges


	)

501 
	#SYS_m¥Ÿe˘
 
__NR_m¥Ÿe˘


	)

502 
	#SYS_mq_gë£èâr
 
__NR_mq_gë£èâr


	)

503 
	#SYS_mq_nŸify
 
__NR_mq_nŸify


	)

504 
	#SYS_mq_›í
 
__NR_mq_›í


	)

505 
	#SYS_mq_timedª˚ive
 
__NR_mq_timedª˚ive


	)

506 
	#SYS_mq_timed£nd
 
__NR_mq_timed£nd


	)

507 
	#SYS_mq_u∆ök
 
__NR_mq_u∆ök


	)

508 
	#SYS_mªm≠
 
__NR_mªm≠


	)

509 
	#SYS_msg˘l
 
__NR_msg˘l


	)

510 
	#SYS_msggë
 
__NR_msggë


	)

511 
	#SYS_msgrcv
 
__NR_msgrcv


	)

512 
	#SYS_msg¢d
 
__NR_msg¢d


	)

513 
	#SYS_msync
 
__NR_msync


	)

514 
	#SYS_mu∆ock
 
__NR_mu∆ock


	)

515 
	#SYS_mu∆ockÆl
 
__NR_mu∆ockÆl


	)

516 
	#SYS_munm≠
 
__NR_munm≠


	)

517 
	#SYS_«me_to_h™dÀ_©
 
__NR_«me_to_h™dÀ_©


	)

518 
	#SYS_«no¶ìp
 
__NR_«no¶ìp


	)

519 
	#SYS_√wf°©©
 
__NR_√wf°©©


	)

520 
	#SYS_nfs£rv˘l
 
__NR_nfs£rv˘l


	)

521 
	#SYS_›í
 
__NR_›í


	)

522 
	#SYS_›í_by_h™dÀ_©
 
__NR_›í_by_h™dÀ_©


	)

523 
	#SYS_›í©
 
__NR_›í©


	)

524 
	#SYS_∑u£
 
__NR_∑u£


	)

525 
	#SYS_≥rf_evít_›í
 
__NR_≥rf_evít_›í


	)

526 
	#SYS_≥rs⁄Æôy
 
__NR_≥rs⁄Æôy


	)

527 
	#SYS_pùe
 
__NR_pùe


	)

528 
	#SYS_pùe2
 
__NR_pùe2


	)

529 
	#SYS_pivŸ_roŸ
 
__NR_pivŸ_roŸ


	)

530 
	#SYS_pﬁl
 
__NR_pﬁl


	)

531 
	#SYS_µﬁl
 
__NR_µﬁl


	)

532 
	#SYS_¥˘l
 
__NR_¥˘l


	)

533 
	#SYS_¥ód64
 
__NR_¥ód64


	)

534 
	#SYS_¥ódv
 
__NR_¥ódv


	)

535 
	#SYS_¥limô64
 
__NR_¥limô64


	)

536 
	#SYS_¥o˚ss_vm_ªadv
 
__NR_¥o˚ss_vm_ªadv


	)

537 
	#SYS_¥o˚ss_vm_wrôev
 
__NR_¥o˚ss_vm_wrôev


	)

538 
	#SYS_p£À˘6
 
__NR_p£À˘6


	)

539 
	#SYS_±ø˚
 
__NR_±ø˚


	)

540 
	#SYS_puçmsg
 
__NR_puçmsg


	)

541 
	#SYS_pwrôe64
 
__NR_pwrôe64


	)

542 
	#SYS_pwrôev
 
__NR_pwrôev


	)

543 
	#SYS_quîy_moduÀ
 
__NR_quîy_moduÀ


	)

544 
	#SYS_quŸa˘l
 
__NR_quŸa˘l


	)

545 
	#SYS_ªad
 
__NR_ªad


	)

546 
	#SYS_ªadahód
 
__NR_ªadahód


	)

547 
	#SYS_ªadlök
 
__NR_ªadlök


	)

548 
	#SYS_ªadlök©
 
__NR_ªadlök©


	)

549 
	#SYS_ªadv
 
__NR_ªadv


	)

550 
	#SYS_ªboŸ
 
__NR_ªboŸ


	)

551 
	#SYS_ªcv‰om
 
__NR_ªcv‰om


	)

552 
	#SYS_ªcvmmsg
 
__NR_ªcvmmsg


	)

553 
	#SYS_ªcvmsg
 
__NR_ªcvmsg


	)

554 
	#SYS_ªm≠_fûe_∑ges
 
__NR_ªm≠_fûe_∑ges


	)

555 
	#SYS_ªmovex©å
 
__NR_ªmovex©å


	)

556 
	#SYS_ª«me
 
__NR_ª«me


	)

557 
	#SYS_ª«mót
 
__NR_ª«mót


	)

558 
	#SYS_ªque°_key
 
__NR_ªque°_key


	)

559 
	#SYS_ª°¨t_sysˇŒ
 
__NR_ª°¨t_sysˇŒ


	)

560 
	#SYS_rmdú
 
__NR_rmdú


	)

561 
	#SYS_π_siga˘i⁄
 
__NR_π_siga˘i⁄


	)

562 
	#SYS_π_sig≥ndög
 
__NR_π_sig≥ndög


	)

563 
	#SYS_π_sig¥ocmask
 
__NR_π_sig¥ocmask


	)

564 
	#SYS_π_sigqueueöfo
 
__NR_π_sigqueueöfo


	)

565 
	#SYS_π_sigªtu∫
 
__NR_π_sigªtu∫


	)

566 
	#SYS_π_sigsu•íd
 
__NR_π_sigsu•íd


	)

567 
	#SYS_π_sigtimedwaô
 
__NR_π_sigtimedwaô


	)

568 
	#SYS_π_tgsigqueueöfo
 
__NR_π_tgsigqueueöfo


	)

569 
	#SYS_sched_gë_¥i‹ôy_max
 
__NR_sched_gë_¥i‹ôy_max


	)

570 
	#SYS_sched_gë_¥i‹ôy_mö
 
__NR_sched_gë_¥i‹ôy_mö


	)

571 
	#SYS_sched_gëafföôy
 
__NR_sched_gëafföôy


	)

572 
	#SYS_sched_gë∑øm
 
__NR_sched_gë∑øm


	)

573 
	#SYS_sched_gëscheduÀr
 
__NR_sched_gëscheduÀr


	)

574 
	#SYS_sched_º_gë_öãrvÆ
 
__NR_sched_º_gë_öãrvÆ


	)

575 
	#SYS_sched_£èfföôy
 
__NR_sched_£èfföôy


	)

576 
	#SYS_sched_£ç¨am
 
__NR_sched_£ç¨am


	)

577 
	#SYS_sched_£tscheduÀr
 
__NR_sched_£tscheduÀr


	)

578 
	#SYS_sched_yõld
 
__NR_sched_yõld


	)

579 
	#SYS_£curôy
 
__NR_£curôy


	)

580 
	#SYS_£À˘
 
__NR_£À˘


	)

581 
	#SYS_£m˘l
 
__NR_£m˘l


	)

582 
	#SYS_£mgë
 
__NR_£mgë


	)

583 
	#SYS_£m›
 
__NR_£m›


	)

584 
	#SYS_£mtimed›
 
__NR_£mtimed›


	)

585 
	#SYS_£ndfûe
 
__NR_£ndfûe


	)

586 
	#SYS_£ndmmsg
 
__NR_£ndmmsg


	)

587 
	#SYS_£ndmsg
 
__NR_£ndmsg


	)

588 
	#SYS_£ndto
 
__NR_£ndto


	)

589 
	#SYS_£t_mempﬁicy
 
__NR_£t_mempﬁicy


	)

590 
	#SYS_£t_robu°_li°
 
__NR_£t_robu°_li°


	)

591 
	#SYS_£t_thªad_¨ó
 
__NR_£t_thªad_¨ó


	)

592 
	#SYS_£t_tid_addªss
 
__NR_£t_tid_addªss


	)

593 
	#SYS_£tdomaö«me
 
__NR_£tdomaö«me


	)

594 
	#SYS_£tfsgid
 
__NR_£tfsgid


	)

595 
	#SYS_£tfsuid
 
__NR_£tfsuid


	)

596 
	#SYS_£tgid
 
__NR_£tgid


	)

597 
	#SYS_£tgroups
 
__NR_£tgroups


	)

598 
	#SYS_£tho°«me
 
__NR_£tho°«me


	)

599 
	#SYS_£tôimî
 
__NR_£tôimî


	)

600 
	#SYS_£äs
 
__NR_£äs


	)

601 
	#SYS_£çgid
 
__NR_£çgid


	)

602 
	#SYS_£çri‹ôy
 
__NR_£çri‹ôy


	)

603 
	#SYS_£åegid
 
__NR_£åegid


	)

604 
	#SYS_£åesgid
 
__NR_£åesgid


	)

605 
	#SYS_£åesuid
 
__NR_£åesuid


	)

606 
	#SYS_£åeuid
 
__NR_£åeuid


	)

607 
	#SYS_£ålimô
 
__NR_£ålimô


	)

608 
	#SYS_£tsid
 
__NR_£tsid


	)

609 
	#SYS_£tsock›t
 
__NR_£tsock›t


	)

610 
	#SYS_£âimeofday
 
__NR_£âimeofday


	)

611 
	#SYS_£tuid
 
__NR_£tuid


	)

612 
	#SYS_£tx©å
 
__NR_£tx©å


	)

613 
	#SYS_shm©
 
__NR_shm©


	)

614 
	#SYS_shm˘l
 
__NR_shm˘l


	)

615 
	#SYS_shmdt
 
__NR_shmdt


	)

616 
	#SYS_shmgë
 
__NR_shmgë


	)

617 
	#SYS_shutdown
 
__NR_shutdown


	)

618 
	#SYS_sigÆt°ack
 
__NR_sigÆt°ack


	)

619 
	#SYS_sig«lfd
 
__NR_sig«lfd


	)

620 
	#SYS_sig«lfd4
 
__NR_sig«lfd4


	)

621 
	#SYS_sockë
 
__NR_sockë


	)

622 
	#SYS_sockë∑ú
 
__NR_sockë∑ú


	)

623 
	#SYS_•li˚
 
__NR_•li˚


	)

624 
	#SYS_°©
 
__NR_°©


	)

625 
	#SYS_°©fs
 
__NR_°©fs


	)

626 
	#SYS_sw≠off
 
__NR_sw≠off


	)

627 
	#SYS_sw≠⁄
 
__NR_sw≠⁄


	)

628 
	#SYS_symlök
 
__NR_symlök


	)

629 
	#SYS_symlök©
 
__NR_symlök©


	)

630 
	#SYS_sync
 
__NR_sync


	)

631 
	#SYS_sync_fûe_ønge
 
__NR_sync_fûe_ønge


	)

632 
	#SYS_syncfs
 
__NR_syncfs


	)

633 
	#SYS_sysfs
 
__NR_sysfs


	)

634 
	#SYS_sysöfo
 
__NR_sysöfo


	)

635 
	#SYS_sy¶og
 
__NR_sy¶og


	)

636 
	#SYS_ãe
 
__NR_ãe


	)

637 
	#SYS_tgkûl
 
__NR_tgkûl


	)

638 
	#SYS_time
 
__NR_time


	)

639 
	#SYS_timî_¸óã
 
__NR_timî_¸óã


	)

640 
	#SYS_timî_dñëe
 
__NR_timî_dñëe


	)

641 
	#SYS_timî_gëovîrun
 
__NR_timî_gëovîrun


	)

642 
	#SYS_timî_gëtime
 
__NR_timî_gëtime


	)

643 
	#SYS_timî_£âime
 
__NR_timî_£âime


	)

644 
	#SYS_timîfd_¸óã
 
__NR_timîfd_¸óã


	)

645 
	#SYS_timîfd_gëtime
 
__NR_timîfd_gëtime


	)

646 
	#SYS_timîfd_£âime
 
__NR_timîfd_£âime


	)

647 
	#SYS_times
 
__NR_times


	)

648 
	#SYS_tkûl
 
__NR_tkûl


	)

649 
	#SYS_åunˇã
 
__NR_åunˇã


	)

650 
	#SYS_tuxˇŒ
 
__NR_tuxˇŒ


	)

651 
	#SYS_umask
 
__NR_umask


	)

652 
	#SYS_umou¡2
 
__NR_umou¡2


	)

653 
	#SYS_u«me
 
__NR_u«me


	)

654 
	#SYS_u∆ök
 
__NR_u∆ök


	)

655 
	#SYS_u∆ök©
 
__NR_u∆ök©


	)

656 
	#SYS_unsh¨e
 
__NR_unsh¨e


	)

657 
	#SYS_u£lib
 
__NR_u£lib


	)

658 
	#SYS_u°©
 
__NR_u°©


	)

659 
	#SYS_utime
 
__NR_utime


	)

660 
	#SYS_utimíßt
 
__NR_utimíßt


	)

661 
	#SYS_utimes
 
__NR_utimes


	)

662 
	#SYS_vf‹k
 
__NR_vf‹k


	)

663 
	#SYS_vh™gup
 
__NR_vh™gup


	)

664 
	#SYS_vm•li˚
 
__NR_vm•li˚


	)

665 
	#SYS_v£rvî
 
__NR_v£rvî


	)

666 
	#SYS_waô4
 
__NR_waô4


	)

667 
	#SYS_waôid
 
__NR_waôid


	)

668 
	#SYS_wrôe
 
__NR_wrôe


	)

669 
	#SYS_wrôev
 
__NR_wrôev


	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3)

150 
	#__w¨nde˛
(
«me
, 
msg
) \

151 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

152 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

153 
	#__îr‹de˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

156 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

157 
	#__w¨«âr
(
msg
)

	)

158 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

162 #i‡
__GNUC_PREREQ
 (2,97)

164 
	#__Êex¨r
 []

	)

166 #ifde‡
__GNUC__


167 
	#__Êex¨r
 [0]

	)

169 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

170 
	#__Êex¨r
 []

	)

173 
	#__Êex¨r
 [1]

	)

189 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

191 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

192 #ifde‡
__˝lu•lus


193 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

194 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

196 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

200 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

201 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

203 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

204 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

217 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

218 
	#__©åibuã__
(
xyz
Ë

	)

224 #i‡
__GNUC_PREREQ
 (2,96)

225 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

227 
	#__©åibuã_mÆloc__


	)

233 #i‡
__GNUC_PREREQ
 (2,96)

234 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

236 
	#__©åibuã_puª__


	)

240 #i‡
__GNUC_PREREQ
 (2,5)

241 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

243 
	#__©åibuã_c⁄°__


	)

249 #i‡
__GNUC_PREREQ
 (3,1)

250 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

251 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

254 
	#__©åibuã_noölöe__


	)

258 #i‡
__GNUC_PREREQ
 (3,2)

259 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

261 
	#__©åibuã_dïªˇãd__


	)

270 #i‡
__GNUC_PREREQ
 (2,8)

271 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

273 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

280 #i‡
__GNUC_PREREQ
 (2,97)

281 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

282 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

289 #i‡
__GNUC_PREREQ
 (3,3)

290 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

292 
	#__n⁄nuŒ
(
∑øms
)

	)

297 #i‡
__GNUC_PREREQ
 (3,4)

298 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

299 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

300 #i‡
__USE_FORTIFY_LEVEL
 > 0

301 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

304 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

306 #i‚de‡
__wur


307 
	#__wur


	)

311 #i‡
__GNUC_PREREQ
 (3,2)

312 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

314 
	#__Æways_ölöe
 
__ölöe


	)

319 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3)

320 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


321 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

322 #i‡
__GNUC_PREREQ
 (4,3)

323 
	#__exã∫_Æways_ölöe
 \

324 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

326 
	#__exã∫_Æways_ölöe
 \

327 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

330 
	#__exã∫_ölöe
 
__ölöe


	)

331 #i‡
__GNUC_PREREQ
 (4,3)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

342 #i‡
__GNUC_PREREQ
 (4,3)

343 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

344 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

351 #i‡!
__GNUC_PREREQ
 (2,8)

352 
	#__exãnsi⁄__


	)

356 #i‡!
__GNUC_PREREQ
 (2,92)

357 
	#__ª°ri˘


	)

363 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


364 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

366 #ifde‡
__GNUC__


367 
	#__ª°ri˘_¨r


	)

369 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

370 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

373 
	#__ª°ri˘_¨r


	)

378 
	~<bôs/w‹dsize.h
>

380 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


381 
	#__LDBL_COMPAT
 1

	)

382 #ifde‡
__REDIRECT


383 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

384 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

385 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

386 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

387 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

388 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

389 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

390 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

391 
	#__LDBL_REDIR_DECL
(
«me
) \

392 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

393 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

394 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

395 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

396 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

399 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


400 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

401 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

402 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

403 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

404 
	#__LDBL_REDIR_DECL
(
«me
)

	)

405 #ifde‡
__REDIRECT


406 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/unistd_32.h

1 #i‚de‡
_ASM_X86_UNISTD_32_H


2 
	#_ASM_X86_UNISTD_32_H


	)

8 
	#__NR_ª°¨t_sysˇŒ
 0

	)

9 
	#__NR_exô
 1

	)

10 
	#__NR_f‹k
 2

	)

11 
	#__NR_ªad
 3

	)

12 
	#__NR_wrôe
 4

	)

13 
	#__NR_›í
 5

	)

14 
	#__NR_˛o£
 6

	)

15 
	#__NR_waôpid
 7

	)

16 
	#__NR_¸ót
 8

	)

17 
	#__NR_lök
 9

	)

18 
	#__NR_u∆ök
 10

	)

19 
	#__NR_execve
 11

	)

20 
	#__NR_chdú
 12

	)

21 
	#__NR_time
 13

	)

22 
	#__NR_mknod
 14

	)

23 
	#__NR_chmod
 15

	)

24 
	#__NR_lchown
 16

	)

25 
	#__NR_bªak
 17

	)

26 
	#__NR_ﬁd°©
 18

	)

27 
	#__NR_l£ek
 19

	)

28 
	#__NR_gëpid
 20

	)

29 
	#__NR_mou¡
 21

	)

30 
	#__NR_umou¡
 22

	)

31 
	#__NR_£tuid
 23

	)

32 
	#__NR_gëuid
 24

	)

33 
	#__NR_°ime
 25

	)

34 
	#__NR_±ø˚
 26

	)

35 
	#__NR_Æ¨m
 27

	)

36 
	#__NR_ﬁdf°©
 28

	)

37 
	#__NR_∑u£
 29

	)

38 
	#__NR_utime
 30

	)

39 
	#__NR_°ty
 31

	)

40 
	#__NR_gây
 32

	)

41 
	#__NR_ac˚ss
 33

	)

42 
	#__NR_ni˚
 34

	)

43 
	#__NR_·ime
 35

	)

44 
	#__NR_sync
 36

	)

45 
	#__NR_kûl
 37

	)

46 
	#__NR_ª«me
 38

	)

47 
	#__NR_mkdú
 39

	)

48 
	#__NR_rmdú
 40

	)

49 
	#__NR_dup
 41

	)

50 
	#__NR_pùe
 42

	)

51 
	#__NR_times
 43

	)

52 
	#__NR_¥of
 44

	)

53 
	#__NR_brk
 45

	)

54 
	#__NR_£tgid
 46

	)

55 
	#__NR_gëgid
 47

	)

56 
	#__NR_sig«l
 48

	)

57 
	#__NR_gëeuid
 49

	)

58 
	#__NR_gëegid
 50

	)

59 
	#__NR_ac˘
 51

	)

60 
	#__NR_umou¡2
 52

	)

61 
	#__NR_lock
 53

	)

62 
	#__NR_io˘l
 54

	)

63 
	#__NR_f˙é
 55

	)

64 
	#__NR_mpx
 56

	)

65 
	#__NR_£çgid
 57

	)

66 
	#__NR_ulimô
 58

	)

67 
	#__NR_ﬁdﬁdu«me
 59

	)

68 
	#__NR_umask
 60

	)

69 
	#__NR_chroŸ
 61

	)

70 
	#__NR_u°©
 62

	)

71 
	#__NR_dup2
 63

	)

72 
	#__NR_gëµid
 64

	)

73 
	#__NR_gëpgΩ
 65

	)

74 
	#__NR_£tsid
 66

	)

75 
	#__NR_siga˘i⁄
 67

	)

76 
	#__NR_sgëmask
 68

	)

77 
	#__NR_s£tmask
 69

	)

78 
	#__NR_£åeuid
 70

	)

79 
	#__NR_£åegid
 71

	)

80 
	#__NR_sigsu•íd
 72

	)

81 
	#__NR_sig≥ndög
 73

	)

82 
	#__NR_£tho°«me
 74

	)

83 
	#__NR_£ålimô
 75

	)

84 
	#__NR_gëæimô
 76

	)

85 
	#__NR_gërußge
 77

	)

86 
	#__NR_gëtimeofday
 78

	)

87 
	#__NR_£âimeofday
 79

	)

88 
	#__NR_gëgroups
 80

	)

89 
	#__NR_£tgroups
 81

	)

90 
	#__NR_£À˘
 82

	)

91 
	#__NR_symlök
 83

	)

92 
	#__NR_ﬁdl°©
 84

	)

93 
	#__NR_ªadlök
 85

	)

94 
	#__NR_u£lib
 86

	)

95 
	#__NR_sw≠⁄
 87

	)

96 
	#__NR_ªboŸ
 88

	)

97 
	#__NR_ªaddú
 89

	)

98 
	#__NR_mm≠
 90

	)

99 
	#__NR_munm≠
 91

	)

100 
	#__NR_åunˇã
 92

	)

101 
	#__NR_·runˇã
 93

	)

102 
	#__NR_fchmod
 94

	)

103 
	#__NR_fchown
 95

	)

104 
	#__NR_gë¥i‹ôy
 96

	)

105 
	#__NR_£çri‹ôy
 97

	)

106 
	#__NR_¥ofû
 98

	)

107 
	#__NR_°©fs
 99

	)

108 
	#__NR_f°©fs
 100

	)

109 
	#__NR_i›îm
 101

	)

110 
	#__NR_sockëˇŒ
 102

	)

111 
	#__NR_sy¶og
 103

	)

112 
	#__NR_£tôimî
 104

	)

113 
	#__NR_gëôimî
 105

	)

114 
	#__NR_°©
 106

	)

115 
	#__NR_l°©
 107

	)

116 
	#__NR_f°©
 108

	)

117 
	#__NR_ﬁdu«me
 109

	)

118 
	#__NR_i›l
 110

	)

119 
	#__NR_vh™gup
 111

	)

120 
	#__NR_idÀ
 112

	)

121 
	#__NR_vm86ﬁd
 113

	)

122 
	#__NR_waô4
 114

	)

123 
	#__NR_sw≠off
 115

	)

124 
	#__NR_sysöfo
 116

	)

125 
	#__NR_ùc
 117

	)

126 
	#__NR_fsync
 118

	)

127 
	#__NR_sigªtu∫
 119

	)

128 
	#__NR_˛⁄e
 120

	)

129 
	#__NR_£tdomaö«me
 121

	)

130 
	#__NR_u«me
 122

	)

131 
	#__NR_modify_ldt
 123

	)

132 
	#__NR_adjtimex
 124

	)

133 
	#__NR_m¥Ÿe˘
 125

	)

134 
	#__NR_sig¥ocmask
 126

	)

135 
	#__NR_¸óã_moduÀ
 127

	)

136 
	#__NR_öô_moduÀ
 128

	)

137 
	#__NR_dñëe_moduÀ
 129

	)

138 
	#__NR_gë_kî√l_syms
 130

	)

139 
	#__NR_quŸa˘l
 131

	)

140 
	#__NR_gëpgid
 132

	)

141 
	#__NR_fchdú
 133

	)

142 
	#__NR_bdÊush
 134

	)

143 
	#__NR_sysfs
 135

	)

144 
	#__NR_≥rs⁄Æôy
 136

	)

145 
	#__NR_afs_sysˇŒ
 137

	)

146 
	#__NR_£tfsuid
 138

	)

147 
	#__NR_£tfsgid
 139

	)

148 
	#__NR__Œ£ek
 140

	)

149 
	#__NR_gëdíts
 141

	)

150 
	#__NR__√w£À˘
 142

	)

151 
	#__NR_Êock
 143

	)

152 
	#__NR_msync
 144

	)

153 
	#__NR_ªadv
 145

	)

154 
	#__NR_wrôev
 146

	)

155 
	#__NR_gësid
 147

	)

156 
	#__NR_fd©async
 148

	)

157 
	#__NR__sys˘l
 149

	)

158 
	#__NR_mlock
 150

	)

159 
	#__NR_mu∆ock
 151

	)

160 
	#__NR_mlockÆl
 152

	)

161 
	#__NR_mu∆ockÆl
 153

	)

162 
	#__NR_sched_£ç¨am
 154

	)

163 
	#__NR_sched_gë∑øm
 155

	)

164 
	#__NR_sched_£tscheduÀr
 156

	)

165 
	#__NR_sched_gëscheduÀr
 157

	)

166 
	#__NR_sched_yõld
 158

	)

167 
	#__NR_sched_gë_¥i‹ôy_max
 159

	)

168 
	#__NR_sched_gë_¥i‹ôy_mö
 160

	)

169 
	#__NR_sched_º_gë_öãrvÆ
 161

	)

170 
	#__NR_«no¶ìp
 162

	)

171 
	#__NR_mªm≠
 163

	)

172 
	#__NR_£åesuid
 164

	)

173 
	#__NR_gëªsuid
 165

	)

174 
	#__NR_vm86
 166

	)

175 
	#__NR_quîy_moduÀ
 167

	)

176 
	#__NR_pﬁl
 168

	)

177 
	#__NR_nfs£rv˘l
 169

	)

178 
	#__NR_£åesgid
 170

	)

179 
	#__NR_gëªsgid
 171

	)

180 
	#__NR_¥˘l
 172

	)

181 
	#__NR_π_sigªtu∫
 173

	)

182 
	#__NR_π_siga˘i⁄
 174

	)

183 
	#__NR_π_sig¥ocmask
 175

	)

184 
	#__NR_π_sig≥ndög
 176

	)

185 
	#__NR_π_sigtimedwaô
 177

	)

186 
	#__NR_π_sigqueueöfo
 178

	)

187 
	#__NR_π_sigsu•íd
 179

	)

188 
	#__NR_¥ód64
 180

	)

189 
	#__NR_pwrôe64
 181

	)

190 
	#__NR_chown
 182

	)

191 
	#__NR_gëcwd
 183

	)

192 
	#__NR_ˇpgë
 184

	)

193 
	#__NR_ˇp£t
 185

	)

194 
	#__NR_sigÆt°ack
 186

	)

195 
	#__NR_£ndfûe
 187

	)

196 
	#__NR_gëpmsg
 188

	)

197 
	#__NR_puçmsg
 189

	)

198 
	#__NR_vf‹k
 190

	)

199 
	#__NR_ugëæimô
 191

	)

200 
	#__NR_mm≠2
 192

	)

201 
	#__NR_åunˇã64
 193

	)

202 
	#__NR_·runˇã64
 194

	)

203 
	#__NR_°©64
 195

	)

204 
	#__NR_l°©64
 196

	)

205 
	#__NR_f°©64
 197

	)

206 
	#__NR_lchown32
 198

	)

207 
	#__NR_gëuid32
 199

	)

208 
	#__NR_gëgid32
 200

	)

209 
	#__NR_gëeuid32
 201

	)

210 
	#__NR_gëegid32
 202

	)

211 
	#__NR_£åeuid32
 203

	)

212 
	#__NR_£åegid32
 204

	)

213 
	#__NR_gëgroups32
 205

	)

214 
	#__NR_£tgroups32
 206

	)

215 
	#__NR_fchown32
 207

	)

216 
	#__NR_£åesuid32
 208

	)

217 
	#__NR_gëªsuid32
 209

	)

218 
	#__NR_£åesgid32
 210

	)

219 
	#__NR_gëªsgid32
 211

	)

220 
	#__NR_chown32
 212

	)

221 
	#__NR_£tuid32
 213

	)

222 
	#__NR_£tgid32
 214

	)

223 
	#__NR_£tfsuid32
 215

	)

224 
	#__NR_£tfsgid32
 216

	)

225 
	#__NR_pivŸ_roŸ
 217

	)

226 
	#__NR_möc‹e
 218

	)

227 
	#__NR_madvi£
 219

	)

228 
	#__NR_madvi£1
 219

	)

229 
	#__NR_gëdíts64
 220

	)

230 
	#__NR_f˙é64
 221

	)

232 
	#__NR_gëtid
 224

	)

233 
	#__NR_ªadahód
 225

	)

234 
	#__NR_£tx©å
 226

	)

235 
	#__NR_l£tx©å
 227

	)

236 
	#__NR_f£tx©å
 228

	)

237 
	#__NR_gëx©å
 229

	)

238 
	#__NR_lgëx©å
 230

	)

239 
	#__NR_fgëx©å
 231

	)

240 
	#__NR_li°x©å
 232

	)

241 
	#__NR_Œi°x©å
 233

	)

242 
	#__NR_Êi°x©å
 234

	)

243 
	#__NR_ªmovex©å
 235

	)

244 
	#__NR_Ãemovex©å
 236

	)

245 
	#__NR_‰emovex©å
 237

	)

246 
	#__NR_tkûl
 238

	)

247 
	#__NR_£ndfûe64
 239

	)

248 
	#__NR_fuãx
 240

	)

249 
	#__NR_sched_£èfföôy
 241

	)

250 
	#__NR_sched_gëafföôy
 242

	)

251 
	#__NR_£t_thªad_¨ó
 243

	)

252 
	#__NR_gë_thªad_¨ó
 244

	)

253 
	#__NR_io_£tup
 245

	)

254 
	#__NR_io_de°roy
 246

	)

255 
	#__NR_io_gëevíts
 247

	)

256 
	#__NR_io_submô
 248

	)

257 
	#__NR_io_ˇn˚l
 249

	)

258 
	#__NR_Ádvi£64
 250

	)

260 
	#__NR_exô_group
 252

	)

261 
	#__NR_lookup_dcookõ
 253

	)

262 
	#__NR_ïﬁl_¸óã
 254

	)

263 
	#__NR_ïﬁl_˘l
 255

	)

264 
	#__NR_ïﬁl_waô
 256

	)

265 
	#__NR_ªm≠_fûe_∑ges
 257

	)

266 
	#__NR_£t_tid_addªss
 258

	)

267 
	#__NR_timî_¸óã
 259

	)

268 
	#__NR_timî_£âime
 (
__NR_timî_¸óã
+1)

	)

269 
	#__NR_timî_gëtime
 (
__NR_timî_¸óã
+2)

	)

270 
	#__NR_timî_gëovîrun
 (
__NR_timî_¸óã
+3)

	)

271 
	#__NR_timî_dñëe
 (
__NR_timî_¸óã
+4)

	)

272 
	#__NR_˛ock_£âime
 (
__NR_timî_¸óã
+5)

	)

273 
	#__NR_˛ock_gëtime
 (
__NR_timî_¸óã
+6)

	)

274 
	#__NR_˛ock_gëªs
 (
__NR_timî_¸óã
+7)

	)

275 
	#__NR_˛ock_«no¶ìp
 (
__NR_timî_¸óã
+8)

	)

276 
	#__NR_°©fs64
 268

	)

277 
	#__NR_f°©fs64
 269

	)

278 
	#__NR_tgkûl
 270

	)

279 
	#__NR_utimes
 271

	)

280 
	#__NR_Ádvi£64_64
 272

	)

281 
	#__NR_v£rvî
 273

	)

282 
	#__NR_mböd
 274

	)

283 
	#__NR_gë_mempﬁicy
 275

	)

284 
	#__NR_£t_mempﬁicy
 276

	)

285 
	#__NR_mq_›í
 277

	)

286 
	#__NR_mq_u∆ök
 (
__NR_mq_›í
+1)

	)

287 
	#__NR_mq_timed£nd
 (
__NR_mq_›í
+2)

	)

288 
	#__NR_mq_timedª˚ive
 (
__NR_mq_›í
+3)

	)

289 
	#__NR_mq_nŸify
 (
__NR_mq_›í
+4)

	)

290 
	#__NR_mq_gë£èâr
 (
__NR_mq_›í
+5)

	)

291 
	#__NR_kexec_lﬂd
 283

	)

292 
	#__NR_waôid
 284

	)

294 
	#__NR_add_key
 286

	)

295 
	#__NR_ªque°_key
 287

	)

296 
	#__NR_key˘l
 288

	)

297 
	#__NR_i›rio_£t
 289

	)

298 
	#__NR_i›rio_gë
 290

	)

299 
	#__NR_öŸify_öô
 291

	)

300 
	#__NR_öŸify_add_w©ch
 292

	)

301 
	#__NR_öŸify_rm_w©ch
 293

	)

302 
	#__NR_migøã_∑ges
 294

	)

303 
	#__NR_›í©
 295

	)

304 
	#__NR_mkdú©
 296

	)

305 
	#__NR_mknod©
 297

	)

306 
	#__NR_fchow«t
 298

	)

307 
	#__NR_futimeßt
 299

	)

308 
	#__NR_f°©©64
 300

	)

309 
	#__NR_u∆ök©
 301

	)

310 
	#__NR_ª«mót
 302

	)

311 
	#__NR_lök©
 303

	)

312 
	#__NR_symlök©
 304

	)

313 
	#__NR_ªadlök©
 305

	)

314 
	#__NR_fchmod©
 306

	)

315 
	#__NR_Ác˚sßt
 307

	)

316 
	#__NR_p£À˘6
 308

	)

317 
	#__NR_µﬁl
 309

	)

318 
	#__NR_unsh¨e
 310

	)

319 
	#__NR_£t_robu°_li°
 311

	)

320 
	#__NR_gë_robu°_li°
 312

	)

321 
	#__NR_•li˚
 313

	)

322 
	#__NR_sync_fûe_ønge
 314

	)

323 
	#__NR_ãe
 315

	)

324 
	#__NR_vm•li˚
 316

	)

325 
	#__NR_move_∑ges
 317

	)

326 
	#__NR_gë˝u
 318

	)

327 
	#__NR_ïﬁl_pwaô
 319

	)

328 
	#__NR_utimíßt
 320

	)

329 
	#__NR_sig«lfd
 321

	)

330 
	#__NR_timîfd_¸óã
 322

	)

331 
	#__NR_evítfd
 323

	)

332 
	#__NR_ÁŒoˇã
 324

	)

333 
	#__NR_timîfd_£âime
 325

	)

334 
	#__NR_timîfd_gëtime
 326

	)

335 
	#__NR_sig«lfd4
 327

	)

336 
	#__NR_evítfd2
 328

	)

337 
	#__NR_ïﬁl_¸óã1
 329

	)

338 
	#__NR_dup3
 330

	)

339 
	#__NR_pùe2
 331

	)

340 
	#__NR_öŸify_öô1
 332

	)

341 
	#__NR_¥ódv
 333

	)

342 
	#__NR_pwrôev
 334

	)

343 
	#__NR_π_tgsigqueueöfo
 335

	)

344 
	#__NR_≥rf_evít_›í
 336

	)

345 
	#__NR_ªcvmmsg
 337

	)

346 
	#__NR_ÁnŸify_öô
 338

	)

347 
	#__NR_ÁnŸify_m¨k
 339

	)

348 
	#__NR_¥limô64
 340

	)

349 
	#__NR_«me_to_h™dÀ_©
 341

	)

350 
	#__NR_›í_by_h™dÀ_©
 342

	)

351 
	#__NR_˛ock_adjtime
 343

	)

352 
	#__NR_syncfs
 344

	)

353 
	#__NR_£ndmmsg
 345

	)

354 
	#__NR_£äs
 346

	)

355 
	#__NR_¥o˚ss_vm_ªadv
 347

	)

356 
	#__NR_¥o˚ss_vm_wrôev
 348

	)

	@/usr/include/asm/unistd_64.h

1 #i‚de‡
_ASM_X86_UNISTD_64_H


2 
	#_ASM_X86_UNISTD_64_H


	)

4 #i‚de‡
__SYSCALL


5 
	#__SYSCALL
(
a
, 
b
)

	)

15 
	#__NR_ªad
 0

	)

16 
	$__SYSCALL
(
__NR_ªad
, 
sys_ªad
)

17 
	#__NR_wrôe
 1

	)

18 
	$__SYSCALL
(
__NR_wrôe
, 
sys_wrôe
)

19 
	#__NR_›í
 2

	)

20 
	$__SYSCALL
(
__NR_›í
, 
sys_›í
)

21 
	#__NR_˛o£
 3

	)

22 
	$__SYSCALL
(
__NR_˛o£
, 
sys_˛o£
)

23 
	#__NR_°©
 4

	)

24 
	$__SYSCALL
(
__NR_°©
, 
sys_√w°©
)

25 
	#__NR_f°©
 5

	)

26 
	$__SYSCALL
(
__NR_f°©
, 
sys_√wf°©
)

27 
	#__NR_l°©
 6

	)

28 
	$__SYSCALL
(
__NR_l°©
, 
sys_√wl°©
)

29 
	#__NR_pﬁl
 7

	)

30 
	$__SYSCALL
(
__NR_pﬁl
, 
sys_pﬁl
)

32 
	#__NR_l£ek
 8

	)

33 
	$__SYSCALL
(
__NR_l£ek
, 
sys_l£ek
)

34 
	#__NR_mm≠
 9

	)

35 
	$__SYSCALL
(
__NR_mm≠
, 
sys_mm≠
)

36 
	#__NR_m¥Ÿe˘
 10

	)

37 
	$__SYSCALL
(
__NR_m¥Ÿe˘
, 
sys_m¥Ÿe˘
)

38 
	#__NR_munm≠
 11

	)

39 
	$__SYSCALL
(
__NR_munm≠
, 
sys_munm≠
)

40 
	#__NR_brk
 12

	)

41 
	$__SYSCALL
(
__NR_brk
, 
sys_brk
)

42 
	#__NR_π_siga˘i⁄
 13

	)

43 
	$__SYSCALL
(
__NR_π_siga˘i⁄
, 
sys_π_siga˘i⁄
)

44 
	#__NR_π_sig¥ocmask
 14

	)

45 
	$__SYSCALL
(
__NR_π_sig¥ocmask
, 
sys_π_sig¥ocmask
)

46 
	#__NR_π_sigªtu∫
 15

	)

47 
	$__SYSCALL
(
__NR_π_sigªtu∫
, 
°ub_π_sigªtu∫
)

49 
	#__NR_io˘l
 16

	)

50 
	$__SYSCALL
(
__NR_io˘l
, 
sys_io˘l
)

51 
	#__NR_¥ód64
 17

	)

52 
	$__SYSCALL
(
__NR_¥ód64
, 
sys_¥ód64
)

53 
	#__NR_pwrôe64
 18

	)

54 
	$__SYSCALL
(
__NR_pwrôe64
, 
sys_pwrôe64
)

55 
	#__NR_ªadv
 19

	)

56 
	$__SYSCALL
(
__NR_ªadv
, 
sys_ªadv
)

57 
	#__NR_wrôev
 20

	)

58 
	$__SYSCALL
(
__NR_wrôev
, 
sys_wrôev
)

59 
	#__NR_ac˚ss
 21

	)

60 
	$__SYSCALL
(
__NR_ac˚ss
, 
sys_ac˚ss
)

61 
	#__NR_pùe
 22

	)

62 
	$__SYSCALL
(
__NR_pùe
, 
sys_pùe
)

63 
	#__NR_£À˘
 23

	)

64 
	$__SYSCALL
(
__NR_£À˘
, 
sys_£À˘
)

66 
	#__NR_sched_yõld
 24

	)

67 
	$__SYSCALL
(
__NR_sched_yõld
, 
sys_sched_yõld
)

68 
	#__NR_mªm≠
 25

	)

69 
	$__SYSCALL
(
__NR_mªm≠
, 
sys_mªm≠
)

70 
	#__NR_msync
 26

	)

71 
	$__SYSCALL
(
__NR_msync
, 
sys_msync
)

72 
	#__NR_möc‹e
 27

	)

73 
	$__SYSCALL
(
__NR_möc‹e
, 
sys_möc‹e
)

74 
	#__NR_madvi£
 28

	)

75 
	$__SYSCALL
(
__NR_madvi£
, 
sys_madvi£
)

76 
	#__NR_shmgë
 29

	)

77 
	$__SYSCALL
(
__NR_shmgë
, 
sys_shmgë
)

78 
	#__NR_shm©
 30

	)

79 
	$__SYSCALL
(
__NR_shm©
, 
sys_shm©
)

80 
	#__NR_shm˘l
 31

	)

81 
	$__SYSCALL
(
__NR_shm˘l
, 
sys_shm˘l
)

83 
	#__NR_dup
 32

	)

84 
	$__SYSCALL
(
__NR_dup
, 
sys_dup
)

85 
	#__NR_dup2
 33

	)

86 
	$__SYSCALL
(
__NR_dup2
, 
sys_dup2
)

87 
	#__NR_∑u£
 34

	)

88 
	$__SYSCALL
(
__NR_∑u£
, 
sys_∑u£
)

89 
	#__NR_«no¶ìp
 35

	)

90 
	$__SYSCALL
(
__NR_«no¶ìp
, 
sys_«no¶ìp
)

91 
	#__NR_gëôimî
 36

	)

92 
	$__SYSCALL
(
__NR_gëôimî
, 
sys_gëôimî
)

93 
	#__NR_Æ¨m
 37

	)

94 
	$__SYSCALL
(
__NR_Æ¨m
, 
sys_Æ¨m
)

95 
	#__NR_£tôimî
 38

	)

96 
	$__SYSCALL
(
__NR_£tôimî
, 
sys_£tôimî
)

97 
	#__NR_gëpid
 39

	)

98 
	$__SYSCALL
(
__NR_gëpid
, 
sys_gëpid
)

100 
	#__NR_£ndfûe
 40

	)

101 
	$__SYSCALL
(
__NR_£ndfûe
, 
sys_£ndfûe64
)

102 
	#__NR_sockë
 41

	)

103 
	$__SYSCALL
(
__NR_sockë
, 
sys_sockë
)

104 
	#__NR_c⁄√˘
 42

	)

105 
	$__SYSCALL
(
__NR_c⁄√˘
, 
sys_c⁄√˘
)

106 
	#__NR_ac˚±
 43

	)

107 
	$__SYSCALL
(
__NR_ac˚±
, 
sys_ac˚±
)

108 
	#__NR_£ndto
 44

	)

109 
	$__SYSCALL
(
__NR_£ndto
, 
sys_£ndto
)

110 
	#__NR_ªcv‰om
 45

	)

111 
	$__SYSCALL
(
__NR_ªcv‰om
, 
sys_ªcv‰om
)

112 
	#__NR_£ndmsg
 46

	)

113 
	$__SYSCALL
(
__NR_£ndmsg
, 
sys_£ndmsg
)

114 
	#__NR_ªcvmsg
 47

	)

115 
	$__SYSCALL
(
__NR_ªcvmsg
, 
sys_ªcvmsg
)

117 
	#__NR_shutdown
 48

	)

118 
	$__SYSCALL
(
__NR_shutdown
, 
sys_shutdown
)

119 
	#__NR_böd
 49

	)

120 
	$__SYSCALL
(
__NR_böd
, 
sys_böd
)

121 
	#__NR_li°í
 50

	)

122 
	$__SYSCALL
(
__NR_li°í
, 
sys_li°í
)

123 
	#__NR_gësock«me
 51

	)

124 
	$__SYSCALL
(
__NR_gësock«me
, 
sys_gësock«me
)

125 
	#__NR_gë≥î«me
 52

	)

126 
	$__SYSCALL
(
__NR_gë≥î«me
, 
sys_gë≥î«me
)

127 
	#__NR_sockë∑ú
 53

	)

128 
	$__SYSCALL
(
__NR_sockë∑ú
, 
sys_sockë∑ú
)

129 
	#__NR_£tsock›t
 54

	)

130 
	$__SYSCALL
(
__NR_£tsock›t
, 
sys_£tsock›t
)

131 
	#__NR_gësock›t
 55

	)

132 
	$__SYSCALL
(
__NR_gësock›t
, 
sys_gësock›t
)

134 
	#__NR_˛⁄e
 56

	)

135 
	$__SYSCALL
(
__NR_˛⁄e
, 
°ub_˛⁄e
)

136 
	#__NR_f‹k
 57

	)

137 
	$__SYSCALL
(
__NR_f‹k
, 
°ub_f‹k
)

138 
	#__NR_vf‹k
 58

	)

139 
	$__SYSCALL
(
__NR_vf‹k
, 
°ub_vf‹k
)

140 
	#__NR_execve
 59

	)

141 
	$__SYSCALL
(
__NR_execve
, 
°ub_execve
)

142 
	#__NR_exô
 60

	)

143 
	$__SYSCALL
(
__NR_exô
, 
sys_exô
)

144 
	#__NR_waô4
 61

	)

145 
	$__SYSCALL
(
__NR_waô4
, 
sys_waô4
)

146 
	#__NR_kûl
 62

	)

147 
	$__SYSCALL
(
__NR_kûl
, 
sys_kûl
)

148 
	#__NR_u«me
 63

	)

149 
	$__SYSCALL
(
__NR_u«me
, 
sys_√wu«me
)

151 
	#__NR_£mgë
 64

	)

152 
	$__SYSCALL
(
__NR_£mgë
, 
sys_£mgë
)

153 
	#__NR_£m›
 65

	)

154 
	$__SYSCALL
(
__NR_£m›
, 
sys_£m›
)

155 
	#__NR_£m˘l
 66

	)

156 
	$__SYSCALL
(
__NR_£m˘l
, 
sys_£m˘l
)

157 
	#__NR_shmdt
 67

	)

158 
	$__SYSCALL
(
__NR_shmdt
, 
sys_shmdt
)

159 
	#__NR_msggë
 68

	)

160 
	$__SYSCALL
(
__NR_msggë
, 
sys_msggë
)

161 
	#__NR_msg¢d
 69

	)

162 
	$__SYSCALL
(
__NR_msg¢d
, 
sys_msg¢d
)

163 
	#__NR_msgrcv
 70

	)

164 
	$__SYSCALL
(
__NR_msgrcv
, 
sys_msgrcv
)

165 
	#__NR_msg˘l
 71

	)

166 
	$__SYSCALL
(
__NR_msg˘l
, 
sys_msg˘l
)

168 
	#__NR_f˙é
 72

	)

169 
	$__SYSCALL
(
__NR_f˙é
, 
sys_f˙é
)

170 
	#__NR_Êock
 73

	)

171 
	$__SYSCALL
(
__NR_Êock
, 
sys_Êock
)

172 
	#__NR_fsync
 74

	)

173 
	$__SYSCALL
(
__NR_fsync
, 
sys_fsync
)

174 
	#__NR_fd©async
 75

	)

175 
	$__SYSCALL
(
__NR_fd©async
, 
sys_fd©async
)

176 
	#__NR_åunˇã
 76

	)

177 
	$__SYSCALL
(
__NR_åunˇã
, 
sys_åunˇã
)

178 
	#__NR_·runˇã
 77

	)

179 
	$__SYSCALL
(
__NR_·runˇã
, 
sys_·runˇã
)

180 
	#__NR_gëdíts
 78

	)

181 
	$__SYSCALL
(
__NR_gëdíts
, 
sys_gëdíts
)

182 
	#__NR_gëcwd
 79

	)

183 
	$__SYSCALL
(
__NR_gëcwd
, 
sys_gëcwd
)

185 
	#__NR_chdú
 80

	)

186 
	$__SYSCALL
(
__NR_chdú
, 
sys_chdú
)

187 
	#__NR_fchdú
 81

	)

188 
	$__SYSCALL
(
__NR_fchdú
, 
sys_fchdú
)

189 
	#__NR_ª«me
 82

	)

190 
	$__SYSCALL
(
__NR_ª«me
, 
sys_ª«me
)

191 
	#__NR_mkdú
 83

	)

192 
	$__SYSCALL
(
__NR_mkdú
, 
sys_mkdú
)

193 
	#__NR_rmdú
 84

	)

194 
	$__SYSCALL
(
__NR_rmdú
, 
sys_rmdú
)

195 
	#__NR_¸ót
 85

	)

196 
	$__SYSCALL
(
__NR_¸ót
, 
sys_¸ót
)

197 
	#__NR_lök
 86

	)

198 
	$__SYSCALL
(
__NR_lök
, 
sys_lök
)

199 
	#__NR_u∆ök
 87

	)

200 
	$__SYSCALL
(
__NR_u∆ök
, 
sys_u∆ök
)

202 
	#__NR_symlök
 88

	)

203 
	$__SYSCALL
(
__NR_symlök
, 
sys_symlök
)

204 
	#__NR_ªadlök
 89

	)

205 
	$__SYSCALL
(
__NR_ªadlök
, 
sys_ªadlök
)

206 
	#__NR_chmod
 90

	)

207 
	$__SYSCALL
(
__NR_chmod
, 
sys_chmod
)

208 
	#__NR_fchmod
 91

	)

209 
	$__SYSCALL
(
__NR_fchmod
, 
sys_fchmod
)

210 
	#__NR_chown
 92

	)

211 
	$__SYSCALL
(
__NR_chown
, 
sys_chown
)

212 
	#__NR_fchown
 93

	)

213 
	$__SYSCALL
(
__NR_fchown
, 
sys_fchown
)

214 
	#__NR_lchown
 94

	)

215 
	$__SYSCALL
(
__NR_lchown
, 
sys_lchown
)

216 
	#__NR_umask
 95

	)

217 
	$__SYSCALL
(
__NR_umask
, 
sys_umask
)

219 
	#__NR_gëtimeofday
 96

	)

220 
	$__SYSCALL
(
__NR_gëtimeofday
, 
sys_gëtimeofday
)

221 
	#__NR_gëæimô
 97

	)

222 
	$__SYSCALL
(
__NR_gëæimô
, 
sys_gëæimô
)

223 
	#__NR_gërußge
 98

	)

224 
	$__SYSCALL
(
__NR_gërußge
, 
sys_gërußge
)

225 
	#__NR_sysöfo
 99

	)

226 
	$__SYSCALL
(
__NR_sysöfo
, 
sys_sysöfo
)

227 
	#__NR_times
 100

	)

228 
	$__SYSCALL
(
__NR_times
, 
sys_times
)

229 
	#__NR_±ø˚
 101

	)

230 
	$__SYSCALL
(
__NR_±ø˚
, 
sys_±ø˚
)

231 
	#__NR_gëuid
 102

	)

232 
	$__SYSCALL
(
__NR_gëuid
, 
sys_gëuid
)

233 
	#__NR_sy¶og
 103

	)

234 
	$__SYSCALL
(
__NR_sy¶og
, 
sys_sy¶og
)

237 
	#__NR_gëgid
 104

	)

238 
	$__SYSCALL
(
__NR_gëgid
, 
sys_gëgid
)

239 
	#__NR_£tuid
 105

	)

240 
	$__SYSCALL
(
__NR_£tuid
, 
sys_£tuid
)

241 
	#__NR_£tgid
 106

	)

242 
	$__SYSCALL
(
__NR_£tgid
, 
sys_£tgid
)

243 
	#__NR_gëeuid
 107

	)

244 
	$__SYSCALL
(
__NR_gëeuid
, 
sys_gëeuid
)

245 
	#__NR_gëegid
 108

	)

246 
	$__SYSCALL
(
__NR_gëegid
, 
sys_gëegid
)

247 
	#__NR_£çgid
 109

	)

248 
	$__SYSCALL
(
__NR_£çgid
, 
sys_£çgid
)

249 
	#__NR_gëµid
 110

	)

250 
	$__SYSCALL
(
__NR_gëµid
, 
sys_gëµid
)

251 
	#__NR_gëpgΩ
 111

	)

252 
	$__SYSCALL
(
__NR_gëpgΩ
, 
sys_gëpgΩ
)

254 
	#__NR_£tsid
 112

	)

255 
	$__SYSCALL
(
__NR_£tsid
, 
sys_£tsid
)

256 
	#__NR_£åeuid
 113

	)

257 
	$__SYSCALL
(
__NR_£åeuid
, 
sys_£åeuid
)

258 
	#__NR_£åegid
 114

	)

259 
	$__SYSCALL
(
__NR_£åegid
, 
sys_£åegid
)

260 
	#__NR_gëgroups
 115

	)

261 
	$__SYSCALL
(
__NR_gëgroups
, 
sys_gëgroups
)

262 
	#__NR_£tgroups
 116

	)

263 
	$__SYSCALL
(
__NR_£tgroups
, 
sys_£tgroups
)

264 
	#__NR_£åesuid
 117

	)

265 
	$__SYSCALL
(
__NR_£åesuid
, 
sys_£åesuid
)

266 
	#__NR_gëªsuid
 118

	)

267 
	$__SYSCALL
(
__NR_gëªsuid
, 
sys_gëªsuid
)

268 
	#__NR_£åesgid
 119

	)

269 
	$__SYSCALL
(
__NR_£åesgid
, 
sys_£åesgid
)

271 
	#__NR_gëªsgid
 120

	)

272 
	$__SYSCALL
(
__NR_gëªsgid
, 
sys_gëªsgid
)

273 
	#__NR_gëpgid
 121

	)

274 
	$__SYSCALL
(
__NR_gëpgid
, 
sys_gëpgid
)

275 
	#__NR_£tfsuid
 122

	)

276 
	$__SYSCALL
(
__NR_£tfsuid
, 
sys_£tfsuid
)

277 
	#__NR_£tfsgid
 123

	)

278 
	$__SYSCALL
(
__NR_£tfsgid
, 
sys_£tfsgid
)

279 
	#__NR_gësid
 124

	)

280 
	$__SYSCALL
(
__NR_gësid
, 
sys_gësid
)

281 
	#__NR_ˇpgë
 125

	)

282 
	$__SYSCALL
(
__NR_ˇpgë
, 
sys_ˇpgë
)

283 
	#__NR_ˇp£t
 126

	)

284 
	$__SYSCALL
(
__NR_ˇp£t
, 
sys_ˇp£t
)

286 
	#__NR_π_sig≥ndög
 127

	)

287 
	$__SYSCALL
(
__NR_π_sig≥ndög
, 
sys_π_sig≥ndög
)

288 
	#__NR_π_sigtimedwaô
 128

	)

289 
	$__SYSCALL
(
__NR_π_sigtimedwaô
, 
sys_π_sigtimedwaô
)

290 
	#__NR_π_sigqueueöfo
 129

	)

291 
	$__SYSCALL
(
__NR_π_sigqueueöfo
, 
sys_π_sigqueueöfo
)

292 
	#__NR_π_sigsu•íd
 130

	)

293 
	$__SYSCALL
(
__NR_π_sigsu•íd
, 
sys_π_sigsu•íd
)

294 
	#__NR_sigÆt°ack
 131

	)

295 
	$__SYSCALL
(
__NR_sigÆt°ack
, 
°ub_sigÆt°ack
)

296 
	#__NR_utime
 132

	)

297 
	$__SYSCALL
(
__NR_utime
, 
sys_utime
)

298 
	#__NR_mknod
 133

	)

299 
	$__SYSCALL
(
__NR_mknod
, 
sys_mknod
)

302 
	#__NR_u£lib
 134

	)

303 
	$__SYSCALL
(
__NR_u£lib
, 
sys_ni_sysˇŒ
)

304 
	#__NR_≥rs⁄Æôy
 135

	)

305 
	$__SYSCALL
(
__NR_≥rs⁄Æôy
, 
sys_≥rs⁄Æôy
)

307 
	#__NR_u°©
 136

	)

308 
	$__SYSCALL
(
__NR_u°©
, 
sys_u°©
)

309 
	#__NR_°©fs
 137

	)

310 
	$__SYSCALL
(
__NR_°©fs
, 
sys_°©fs
)

311 
	#__NR_f°©fs
 138

	)

312 
	$__SYSCALL
(
__NR_f°©fs
, 
sys_f°©fs
)

313 
	#__NR_sysfs
 139

	)

314 
	$__SYSCALL
(
__NR_sysfs
, 
sys_sysfs
)

316 
	#__NR_gë¥i‹ôy
 140

	)

317 
	$__SYSCALL
(
__NR_gë¥i‹ôy
, 
sys_gë¥i‹ôy
)

318 
	#__NR_£çri‹ôy
 141

	)

319 
	$__SYSCALL
(
__NR_£çri‹ôy
, 
sys_£çri‹ôy
)

320 
	#__NR_sched_£ç¨am
 142

	)

321 
	$__SYSCALL
(
__NR_sched_£ç¨am
, 
sys_sched_£ç¨am
)

322 
	#__NR_sched_gë∑øm
 143

	)

323 
	$__SYSCALL
(
__NR_sched_gë∑øm
, 
sys_sched_gë∑øm
)

324 
	#__NR_sched_£tscheduÀr
 144

	)

325 
	$__SYSCALL
(
__NR_sched_£tscheduÀr
, 
sys_sched_£tscheduÀr
)

326 
	#__NR_sched_gëscheduÀr
 145

	)

327 
	$__SYSCALL
(
__NR_sched_gëscheduÀr
, 
sys_sched_gëscheduÀr
)

328 
	#__NR_sched_gë_¥i‹ôy_max
 146

	)

329 
	$__SYSCALL
(
__NR_sched_gë_¥i‹ôy_max
, 
sys_sched_gë_¥i‹ôy_max
)

330 
	#__NR_sched_gë_¥i‹ôy_mö
 147

	)

331 
	$__SYSCALL
(
__NR_sched_gë_¥i‹ôy_mö
, 
sys_sched_gë_¥i‹ôy_mö
)

332 
	#__NR_sched_º_gë_öãrvÆ
 148

	)

333 
	$__SYSCALL
(
__NR_sched_º_gë_öãrvÆ
, 
sys_sched_º_gë_öãrvÆ
)

335 
	#__NR_mlock
 149

	)

336 
	$__SYSCALL
(
__NR_mlock
, 
sys_mlock
)

337 
	#__NR_mu∆ock
 150

	)

338 
	$__SYSCALL
(
__NR_mu∆ock
, 
sys_mu∆ock
)

339 
	#__NR_mlockÆl
 151

	)

340 
	$__SYSCALL
(
__NR_mlockÆl
, 
sys_mlockÆl
)

341 
	#__NR_mu∆ockÆl
 152

	)

342 
	$__SYSCALL
(
__NR_mu∆ockÆl
, 
sys_mu∆ockÆl
)

344 
	#__NR_vh™gup
 153

	)

345 
	$__SYSCALL
(
__NR_vh™gup
, 
sys_vh™gup
)

347 
	#__NR_modify_ldt
 154

	)

348 
	$__SYSCALL
(
__NR_modify_ldt
, 
sys_modify_ldt
)

350 
	#__NR_pivŸ_roŸ
 155

	)

351 
	$__SYSCALL
(
__NR_pivŸ_roŸ
, 
sys_pivŸ_roŸ
)

353 
	#__NR__sys˘l
 156

	)

354 
	$__SYSCALL
(
__NR__sys˘l
, 
sys_sys˘l
)

356 
	#__NR_¥˘l
 157

	)

357 
	$__SYSCALL
(
__NR_¥˘l
, 
sys_¥˘l
)

358 
	#__NR_¨ch_¥˘l
 158

	)

359 
	$__SYSCALL
(
__NR_¨ch_¥˘l
, 
sys_¨ch_¥˘l
)

361 
	#__NR_adjtimex
 159

	)

362 
	$__SYSCALL
(
__NR_adjtimex
, 
sys_adjtimex
)

364 
	#__NR_£ålimô
 160

	)

365 
	$__SYSCALL
(
__NR_£ålimô
, 
sys_£ålimô
)

367 
	#__NR_chroŸ
 161

	)

368 
	$__SYSCALL
(
__NR_chroŸ
, 
sys_chroŸ
)

370 
	#__NR_sync
 162

	)

371 
	$__SYSCALL
(
__NR_sync
, 
sys_sync
)

373 
	#__NR_ac˘
 163

	)

374 
	$__SYSCALL
(
__NR_ac˘
, 
sys_ac˘
)

376 
	#__NR_£âimeofday
 164

	)

377 
	$__SYSCALL
(
__NR_£âimeofday
, 
sys_£âimeofday
)

379 
	#__NR_mou¡
 165

	)

380 
	$__SYSCALL
(
__NR_mou¡
, 
sys_mou¡
)

381 
	#__NR_umou¡2
 166

	)

382 
	$__SYSCALL
(
__NR_umou¡2
, 
sys_umou¡
)

384 
	#__NR_sw≠⁄
 167

	)

385 
	$__SYSCALL
(
__NR_sw≠⁄
, 
sys_sw≠⁄
)

386 
	#__NR_sw≠off
 168

	)

387 
	$__SYSCALL
(
__NR_sw≠off
, 
sys_sw≠off
)

389 
	#__NR_ªboŸ
 169

	)

390 
	$__SYSCALL
(
__NR_ªboŸ
, 
sys_ªboŸ
)

392 
	#__NR_£tho°«me
 170

	)

393 
	$__SYSCALL
(
__NR_£tho°«me
, 
sys_£tho°«me
)

394 
	#__NR_£tdomaö«me
 171

	)

395 
	$__SYSCALL
(
__NR_£tdomaö«me
, 
sys_£tdomaö«me
)

397 
	#__NR_i›l
 172

	)

398 
	$__SYSCALL
(
__NR_i›l
, 
°ub_i›l
)

399 
	#__NR_i›îm
 173

	)

400 
	$__SYSCALL
(
__NR_i›îm
, 
sys_i›îm
)

402 
	#__NR_¸óã_moduÀ
 174

	)

403 
	$__SYSCALL
(
__NR_¸óã_moduÀ
, 
sys_ni_sysˇŒ
)

404 
	#__NR_öô_moduÀ
 175

	)

405 
	$__SYSCALL
(
__NR_öô_moduÀ
, 
sys_öô_moduÀ
)

406 
	#__NR_dñëe_moduÀ
 176

	)

407 
	$__SYSCALL
(
__NR_dñëe_moduÀ
, 
sys_dñëe_moduÀ
)

408 
	#__NR_gë_kî√l_syms
 177

	)

409 
	$__SYSCALL
(
__NR_gë_kî√l_syms
, 
sys_ni_sysˇŒ
)

410 
	#__NR_quîy_moduÀ
 178

	)

411 
	$__SYSCALL
(
__NR_quîy_moduÀ
, 
sys_ni_sysˇŒ
)

413 
	#__NR_quŸa˘l
 179

	)

414 
	$__SYSCALL
(
__NR_quŸa˘l
, 
sys_quŸa˘l
)

416 
	#__NR_nfs£rv˘l
 180

	)

417 
	$__SYSCALL
(
__NR_nfs£rv˘l
, 
sys_ni_sysˇŒ
)

420 
	#__NR_gëpmsg
 181

	)

421 
	$__SYSCALL
(
__NR_gëpmsg
, 
sys_ni_sysˇŒ
)

422 
	#__NR_puçmsg
 182

	)

423 
	$__SYSCALL
(
__NR_puçmsg
, 
sys_ni_sysˇŒ
)

426 
	#__NR_afs_sysˇŒ
 183

	)

427 
	$__SYSCALL
(
__NR_afs_sysˇŒ
, 
sys_ni_sysˇŒ
)

430 
	#__NR_tuxˇŒ
 184

	)

431 
	$__SYSCALL
(
__NR_tuxˇŒ
, 
sys_ni_sysˇŒ
)

433 
	#__NR_£curôy
 185

	)

434 
	$__SYSCALL
(
__NR_£curôy
, 
sys_ni_sysˇŒ
)

436 
	#__NR_gëtid
 186

	)

437 
	$__SYSCALL
(
__NR_gëtid
, 
sys_gëtid
)

439 
	#__NR_ªadahód
 187

	)

440 
	$__SYSCALL
(
__NR_ªadahód
, 
sys_ªadahód
)

441 
	#__NR_£tx©å
 188

	)

442 
	$__SYSCALL
(
__NR_£tx©å
, 
sys_£tx©å
)

443 
	#__NR_l£tx©å
 189

	)

444 
	$__SYSCALL
(
__NR_l£tx©å
, 
sys_l£tx©å
)

445 
	#__NR_f£tx©å
 190

	)

446 
	$__SYSCALL
(
__NR_f£tx©å
, 
sys_f£tx©å
)

447 
	#__NR_gëx©å
 191

	)

448 
	$__SYSCALL
(
__NR_gëx©å
, 
sys_gëx©å
)

449 
	#__NR_lgëx©å
 192

	)

450 
	$__SYSCALL
(
__NR_lgëx©å
, 
sys_lgëx©å
)

451 
	#__NR_fgëx©å
 193

	)

452 
	$__SYSCALL
(
__NR_fgëx©å
, 
sys_fgëx©å
)

453 
	#__NR_li°x©å
 194

	)

454 
	$__SYSCALL
(
__NR_li°x©å
, 
sys_li°x©å
)

455 
	#__NR_Œi°x©å
 195

	)

456 
	$__SYSCALL
(
__NR_Œi°x©å
, 
sys_Œi°x©å
)

457 
	#__NR_Êi°x©å
 196

	)

458 
	$__SYSCALL
(
__NR_Êi°x©å
, 
sys_Êi°x©å
)

459 
	#__NR_ªmovex©å
 197

	)

460 
	$__SYSCALL
(
__NR_ªmovex©å
, 
sys_ªmovex©å
)

461 
	#__NR_Ãemovex©å
 198

	)

462 
	$__SYSCALL
(
__NR_Ãemovex©å
, 
sys_Ãemovex©å
)

463 
	#__NR_‰emovex©å
 199

	)

464 
	$__SYSCALL
(
__NR_‰emovex©å
, 
sys_‰emovex©å
)

465 
	#__NR_tkûl
 200

	)

466 
	$__SYSCALL
(
__NR_tkûl
, 
sys_tkûl
)

467 
	#__NR_time
 201

	)

468 
	$__SYSCALL
(
__NR_time
, 
sys_time
)

469 
	#__NR_fuãx
 202

	)

470 
	$__SYSCALL
(
__NR_fuãx
, 
sys_fuãx
)

471 
	#__NR_sched_£èfföôy
 203

	)

472 
	$__SYSCALL
(
__NR_sched_£èfföôy
, 
sys_sched_£èfföôy
)

473 
	#__NR_sched_gëafföôy
 204

	)

474 
	$__SYSCALL
(
__NR_sched_gëafföôy
, 
sys_sched_gëafföôy
)

475 
	#__NR_£t_thªad_¨ó
 205

	)

476 
	$__SYSCALL
(
__NR_£t_thªad_¨ó
, 
sys_ni_sysˇŒ
)

477 
	#__NR_io_£tup
 206

	)

478 
	$__SYSCALL
(
__NR_io_£tup
, 
sys_io_£tup
)

479 
	#__NR_io_de°roy
 207

	)

480 
	$__SYSCALL
(
__NR_io_de°roy
, 
sys_io_de°roy
)

481 
	#__NR_io_gëevíts
 208

	)

482 
	$__SYSCALL
(
__NR_io_gëevíts
, 
sys_io_gëevíts
)

483 
	#__NR_io_submô
 209

	)

484 
	$__SYSCALL
(
__NR_io_submô
, 
sys_io_submô
)

485 
	#__NR_io_ˇn˚l
 210

	)

486 
	$__SYSCALL
(
__NR_io_ˇn˚l
, 
sys_io_ˇn˚l
)

487 
	#__NR_gë_thªad_¨ó
 211

	)

488 
	$__SYSCALL
(
__NR_gë_thªad_¨ó
, 
sys_ni_sysˇŒ
)

489 
	#__NR_lookup_dcookõ
 212

	)

490 
	$__SYSCALL
(
__NR_lookup_dcookõ
, 
sys_lookup_dcookõ
)

491 
	#__NR_ïﬁl_¸óã
 213

	)

492 
	$__SYSCALL
(
__NR_ïﬁl_¸óã
, 
sys_ïﬁl_¸óã
)

493 
	#__NR_ïﬁl_˘l_ﬁd
 214

	)

494 
	$__SYSCALL
(
__NR_ïﬁl_˘l_ﬁd
, 
sys_ni_sysˇŒ
)

495 
	#__NR_ïﬁl_waô_ﬁd
 215

	)

496 
	$__SYSCALL
(
__NR_ïﬁl_waô_ﬁd
, 
sys_ni_sysˇŒ
)

497 
	#__NR_ªm≠_fûe_∑ges
 216

	)

498 
	$__SYSCALL
(
__NR_ªm≠_fûe_∑ges
, 
sys_ªm≠_fûe_∑ges
)

499 
	#__NR_gëdíts64
 217

	)

500 
	$__SYSCALL
(
__NR_gëdíts64
, 
sys_gëdíts64
)

501 
	#__NR_£t_tid_addªss
 218

	)

502 
	$__SYSCALL
(
__NR_£t_tid_addªss
, 
sys_£t_tid_addªss
)

503 
	#__NR_ª°¨t_sysˇŒ
 219

	)

504 
	$__SYSCALL
(
__NR_ª°¨t_sysˇŒ
, 
sys_ª°¨t_sysˇŒ
)

505 
	#__NR_£mtimed›
 220

	)

506 
	$__SYSCALL
(
__NR_£mtimed›
, 
sys_£mtimed›
)

507 
	#__NR_Ádvi£64
 221

	)

508 
	$__SYSCALL
(
__NR_Ádvi£64
, 
sys_Ádvi£64
)

509 
	#__NR_timî_¸óã
 222

	)

510 
	$__SYSCALL
(
__NR_timî_¸óã
, 
sys_timî_¸óã
)

511 
	#__NR_timî_£âime
 223

	)

512 
	$__SYSCALL
(
__NR_timî_£âime
, 
sys_timî_£âime
)

513 
	#__NR_timî_gëtime
 224

	)

514 
	$__SYSCALL
(
__NR_timî_gëtime
, 
sys_timî_gëtime
)

515 
	#__NR_timî_gëovîrun
 225

	)

516 
	$__SYSCALL
(
__NR_timî_gëovîrun
, 
sys_timî_gëovîrun
)

517 
	#__NR_timî_dñëe
 226

	)

518 
	$__SYSCALL
(
__NR_timî_dñëe
, 
sys_timî_dñëe
)

519 
	#__NR_˛ock_£âime
 227

	)

520 
	$__SYSCALL
(
__NR_˛ock_£âime
, 
sys_˛ock_£âime
)

521 
	#__NR_˛ock_gëtime
 228

	)

522 
	$__SYSCALL
(
__NR_˛ock_gëtime
, 
sys_˛ock_gëtime
)

523 
	#__NR_˛ock_gëªs
 229

	)

524 
	$__SYSCALL
(
__NR_˛ock_gëªs
, 
sys_˛ock_gëªs
)

525 
	#__NR_˛ock_«no¶ìp
 230

	)

526 
	$__SYSCALL
(
__NR_˛ock_«no¶ìp
, 
sys_˛ock_«no¶ìp
)

527 
	#__NR_exô_group
 231

	)

528 
	$__SYSCALL
(
__NR_exô_group
, 
sys_exô_group
)

529 
	#__NR_ïﬁl_waô
 232

	)

530 
	$__SYSCALL
(
__NR_ïﬁl_waô
, 
sys_ïﬁl_waô
)

531 
	#__NR_ïﬁl_˘l
 233

	)

532 
	$__SYSCALL
(
__NR_ïﬁl_˘l
, 
sys_ïﬁl_˘l
)

533 
	#__NR_tgkûl
 234

	)

534 
	$__SYSCALL
(
__NR_tgkûl
, 
sys_tgkûl
)

535 
	#__NR_utimes
 235

	)

536 
	$__SYSCALL
(
__NR_utimes
, 
sys_utimes
)

537 
	#__NR_v£rvî
 236

	)

538 
	$__SYSCALL
(
__NR_v£rvî
, 
sys_ni_sysˇŒ
)

539 
	#__NR_mböd
 237

	)

540 
	$__SYSCALL
(
__NR_mböd
, 
sys_mböd
)

541 
	#__NR_£t_mempﬁicy
 238

	)

542 
	$__SYSCALL
(
__NR_£t_mempﬁicy
, 
sys_£t_mempﬁicy
)

543 
	#__NR_gë_mempﬁicy
 239

	)

544 
	$__SYSCALL
(
__NR_gë_mempﬁicy
, 
sys_gë_mempﬁicy
)

545 
	#__NR_mq_›í
 240

	)

546 
	$__SYSCALL
(
__NR_mq_›í
, 
sys_mq_›í
)

547 
	#__NR_mq_u∆ök
 241

	)

548 
	$__SYSCALL
(
__NR_mq_u∆ök
, 
sys_mq_u∆ök
)

549 
	#__NR_mq_timed£nd
 242

	)

550 
	$__SYSCALL
(
__NR_mq_timed£nd
, 
sys_mq_timed£nd
)

551 
	#__NR_mq_timedª˚ive
 243

	)

552 
	$__SYSCALL
(
__NR_mq_timedª˚ive
, 
sys_mq_timedª˚ive
)

553 
	#__NR_mq_nŸify
 244

	)

554 
	$__SYSCALL
(
__NR_mq_nŸify
, 
sys_mq_nŸify
)

555 
	#__NR_mq_gë£èâr
 245

	)

556 
	$__SYSCALL
(
__NR_mq_gë£èâr
, 
sys_mq_gë£èâr
)

557 
	#__NR_kexec_lﬂd
 246

	)

558 
	$__SYSCALL
(
__NR_kexec_lﬂd
, 
sys_kexec_lﬂd
)

559 
	#__NR_waôid
 247

	)

560 
	$__SYSCALL
(
__NR_waôid
, 
sys_waôid
)

561 
	#__NR_add_key
 248

	)

562 
	$__SYSCALL
(
__NR_add_key
, 
sys_add_key
)

563 
	#__NR_ªque°_key
 249

	)

564 
	$__SYSCALL
(
__NR_ªque°_key
, 
sys_ªque°_key
)

565 
	#__NR_key˘l
 250

	)

566 
	$__SYSCALL
(
__NR_key˘l
, 
sys_key˘l
)

567 
	#__NR_i›rio_£t
 251

	)

568 
	$__SYSCALL
(
__NR_i›rio_£t
, 
sys_i›rio_£t
)

569 
	#__NR_i›rio_gë
 252

	)

570 
	$__SYSCALL
(
__NR_i›rio_gë
, 
sys_i›rio_gë
)

571 
	#__NR_öŸify_öô
 253

	)

572 
	$__SYSCALL
(
__NR_öŸify_öô
, 
sys_öŸify_öô
)

573 
	#__NR_öŸify_add_w©ch
 254

	)

574 
	$__SYSCALL
(
__NR_öŸify_add_w©ch
, 
sys_öŸify_add_w©ch
)

575 
	#__NR_öŸify_rm_w©ch
 255

	)

576 
	$__SYSCALL
(
__NR_öŸify_rm_w©ch
, 
sys_öŸify_rm_w©ch
)

577 
	#__NR_migøã_∑ges
 256

	)

578 
	$__SYSCALL
(
__NR_migøã_∑ges
, 
sys_migøã_∑ges
)

579 
	#__NR_›í©
 257

	)

580 
	$__SYSCALL
(
__NR_›í©
, 
sys_›í©
)

581 
	#__NR_mkdú©
 258

	)

582 
	$__SYSCALL
(
__NR_mkdú©
, 
sys_mkdú©
)

583 
	#__NR_mknod©
 259

	)

584 
	$__SYSCALL
(
__NR_mknod©
, 
sys_mknod©
)

585 
	#__NR_fchow«t
 260

	)

586 
	$__SYSCALL
(
__NR_fchow«t
, 
sys_fchow«t
)

587 
	#__NR_futimeßt
 261

	)

588 
	$__SYSCALL
(
__NR_futimeßt
, 
sys_futimeßt
)

589 
	#__NR_√wf°©©
 262

	)

590 
	$__SYSCALL
(
__NR_√wf°©©
, 
sys_√wf°©©
)

591 
	#__NR_u∆ök©
 263

	)

592 
	$__SYSCALL
(
__NR_u∆ök©
, 
sys_u∆ök©
)

593 
	#__NR_ª«mót
 264

	)

594 
	$__SYSCALL
(
__NR_ª«mót
, 
sys_ª«mót
)

595 
	#__NR_lök©
 265

	)

596 
	$__SYSCALL
(
__NR_lök©
, 
sys_lök©
)

597 
	#__NR_symlök©
 266

	)

598 
	$__SYSCALL
(
__NR_symlök©
, 
sys_symlök©
)

599 
	#__NR_ªadlök©
 267

	)

600 
	$__SYSCALL
(
__NR_ªadlök©
, 
sys_ªadlök©
)

601 
	#__NR_fchmod©
 268

	)

602 
	$__SYSCALL
(
__NR_fchmod©
, 
sys_fchmod©
)

603 
	#__NR_Ác˚sßt
 269

	)

604 
	$__SYSCALL
(
__NR_Ác˚sßt
, 
sys_Ác˚sßt
)

605 
	#__NR_p£À˘6
 270

	)

606 
	$__SYSCALL
(
__NR_p£À˘6
, 
sys_p£À˘6
)

607 
	#__NR_µﬁl
 271

	)

608 
	$__SYSCALL
(
__NR_µﬁl
, 
sys_µﬁl
)

609 
	#__NR_unsh¨e
 272

	)

610 
	$__SYSCALL
(
__NR_unsh¨e
, 
sys_unsh¨e
)

611 
	#__NR_£t_robu°_li°
 273

	)

612 
	$__SYSCALL
(
__NR_£t_robu°_li°
, 
sys_£t_robu°_li°
)

613 
	#__NR_gë_robu°_li°
 274

	)

614 
	$__SYSCALL
(
__NR_gë_robu°_li°
, 
sys_gë_robu°_li°
)

615 
	#__NR_•li˚
 275

	)

616 
	$__SYSCALL
(
__NR_•li˚
, 
sys_•li˚
)

617 
	#__NR_ãe
 276

	)

618 
	$__SYSCALL
(
__NR_ãe
, 
sys_ãe
)

619 
	#__NR_sync_fûe_ønge
 277

	)

620 
	$__SYSCALL
(
__NR_sync_fûe_ønge
, 
sys_sync_fûe_ønge
)

621 
	#__NR_vm•li˚
 278

	)

622 
	$__SYSCALL
(
__NR_vm•li˚
, 
sys_vm•li˚
)

623 
	#__NR_move_∑ges
 279

	)

624 
	$__SYSCALL
(
__NR_move_∑ges
, 
sys_move_∑ges
)

625 
	#__NR_utimíßt
 280

	)

626 
	$__SYSCALL
(
__NR_utimíßt
, 
sys_utimíßt
)

627 
	#__NR_ïﬁl_pwaô
 281

	)

628 
	$__SYSCALL
(
__NR_ïﬁl_pwaô
, 
sys_ïﬁl_pwaô
)

629 
	#__NR_sig«lfd
 282

	)

630 
	$__SYSCALL
(
__NR_sig«lfd
, 
sys_sig«lfd
)

631 
	#__NR_timîfd_¸óã
 283

	)

632 
	$__SYSCALL
(
__NR_timîfd_¸óã
, 
sys_timîfd_¸óã
)

633 
	#__NR_evítfd
 284

	)

634 
	$__SYSCALL
(
__NR_evítfd
, 
sys_evítfd
)

635 
	#__NR_ÁŒoˇã
 285

	)

636 
	$__SYSCALL
(
__NR_ÁŒoˇã
, 
sys_ÁŒoˇã
)

637 
	#__NR_timîfd_£âime
 286

	)

638 
	$__SYSCALL
(
__NR_timîfd_£âime
, 
sys_timîfd_£âime
)

639 
	#__NR_timîfd_gëtime
 287

	)

640 
	$__SYSCALL
(
__NR_timîfd_gëtime
, 
sys_timîfd_gëtime
)

641 
	#__NR_ac˚±4
 288

	)

642 
	$__SYSCALL
(
__NR_ac˚±4
, 
sys_ac˚±4
)

643 
	#__NR_sig«lfd4
 289

	)

644 
	$__SYSCALL
(
__NR_sig«lfd4
, 
sys_sig«lfd4
)

645 
	#__NR_evítfd2
 290

	)

646 
	$__SYSCALL
(
__NR_evítfd2
, 
sys_evítfd2
)

647 
	#__NR_ïﬁl_¸óã1
 291

	)

648 
	$__SYSCALL
(
__NR_ïﬁl_¸óã1
, 
sys_ïﬁl_¸óã1
)

649 
	#__NR_dup3
 292

	)

650 
	$__SYSCALL
(
__NR_dup3
, 
sys_dup3
)

651 
	#__NR_pùe2
 293

	)

652 
	$__SYSCALL
(
__NR_pùe2
, 
sys_pùe2
)

653 
	#__NR_öŸify_öô1
 294

	)

654 
	$__SYSCALL
(
__NR_öŸify_öô1
, 
sys_öŸify_öô1
)

655 
	#__NR_¥ódv
 295

	)

656 
	$__SYSCALL
(
__NR_¥ódv
, 
sys_¥ódv
)

657 
	#__NR_pwrôev
 296

	)

658 
	$__SYSCALL
(
__NR_pwrôev
, 
sys_pwrôev
)

659 
	#__NR_π_tgsigqueueöfo
 297

	)

660 
	$__SYSCALL
(
__NR_π_tgsigqueueöfo
, 
sys_π_tgsigqueueöfo
)

661 
	#__NR_≥rf_evít_›í
 298

	)

662 
	$__SYSCALL
(
__NR_≥rf_evít_›í
, 
sys_≥rf_evít_›í
)

663 
	#__NR_ªcvmmsg
 299

	)

664 
	$__SYSCALL
(
__NR_ªcvmmsg
, 
sys_ªcvmmsg
)

665 
	#__NR_ÁnŸify_öô
 300

	)

666 
	$__SYSCALL
(
__NR_ÁnŸify_öô
, 
sys_ÁnŸify_öô
)

667 
	#__NR_ÁnŸify_m¨k
 301

	)

668 
	$__SYSCALL
(
__NR_ÁnŸify_m¨k
, 
sys_ÁnŸify_m¨k
)

669 
	#__NR_¥limô64
 302

	)

670 
	$__SYSCALL
(
__NR_¥limô64
, 
sys_¥limô64
)

671 
	#__NR_«me_to_h™dÀ_©
 303

	)

672 
	$__SYSCALL
(
__NR_«me_to_h™dÀ_©
, 
sys_«me_to_h™dÀ_©
)

673 
	#__NR_›í_by_h™dÀ_©
 304

	)

674 
	$__SYSCALL
(
__NR_›í_by_h™dÀ_©
, 
sys_›í_by_h™dÀ_©
)

675 
	#__NR_˛ock_adjtime
 305

	)

676 
	$__SYSCALL
(
__NR_˛ock_adjtime
, 
sys_˛ock_adjtime
)

677 
	#__NR_syncfs
 306

	)

678 
	$__SYSCALL
(
__NR_syncfs
, 
sys_syncfs
)

679 
	#__NR_£ndmmsg
 307

	)

680 
	$__SYSCALL
(
__NR_£ndmmsg
, 
sys_£ndmmsg
)

681 
	#__NR_£äs
 308

	)

682 
	$__SYSCALL
(
__NR_£äs
, 
sys_£äs
)

683 
	#__NR_gë˝u
 309

	)

684 
	$__SYSCALL
(
__NR_gë˝u
, 
sys_gë˝u
)

685 
	#__NR_¥o˚ss_vm_ªadv
 310

	)

686 
	$__SYSCALL
(
__NR_¥o˚ss_vm_ªadv
, 
sys_¥o˚ss_vm_ªadv
)

687 
	#__NR_¥o˚ss_vm_wrôev
 311

	)

688 
	$__SYSCALL
(
__NR_¥o˚ss_vm_wrôev
, 
sys_¥o˚ss_vm_wrôev
)

690 #i‚de‡
__NO_STUBS


691 
	#__ARCH_WANT_OLD_READDIR


	)

692 
	#__ARCH_WANT_OLD_STAT


	)

693 
	#__ARCH_WANT_SYS_ALARM


	)

694 
	#__ARCH_WANT_SYS_GETHOSTNAME


	)

695 
	#__ARCH_WANT_SYS_PAUSE


	)

696 
	#__ARCH_WANT_SYS_SGETMASK


	)

697 
	#__ARCH_WANT_SYS_SIGNAL


	)

698 
	#__ARCH_WANT_SYS_UTIME


	)

699 
	#__ARCH_WANT_SYS_WAITPID


	)

700 
	#__ARCH_WANT_SYS_SOCKETCALL


	)

701 
	#__ARCH_WANT_SYS_FADVISE64


	)

702 
	#__ARCH_WANT_SYS_GETPGRP


	)

703 
	#__ARCH_WANT_SYS_LLSEEK


	)

704 
	#__ARCH_WANT_SYS_NICE


	)

705 
	#__ARCH_WANT_SYS_OLD_GETRLIMIT


	)

706 
	#__ARCH_WANT_SYS_OLD_UNAME


	)

707 
	#__ARCH_WANT_SYS_OLDUMOUNT


	)

708 
	#__ARCH_WANT_SYS_SIGPENDING


	)

709 
	#__ARCH_WANT_SYS_SIGPROCMASK


	)

710 
	#__ARCH_WANT_SYS_RT_SIGACTION


	)

711 
	#__ARCH_WANT_SYS_RT_SIGSUSPEND


	)

712 
	#__ARCH_WANT_SYS_TIME


	)

713 
	#__ARCH_WANT_COMPAT_SYS_TIME


	)

	@/usr/include/bits/libc-lock.h

20 #i‚de‡
_BITS_LIBC_LOCK_H


21 
	#_BITS_LIBC_LOCK_H
 1

	)

23 
	~<±hªad.h
>

24 
	#__√ed_NULL


	)

25 
	~<°ddef.h
>

34 #ifde‡
_LIBC


35 
	~<lowÀvñlock.h
>

36 
	~<és.h
>

37 
	~<±hªad-fun˘i⁄s.h
>

38 
	~<î∫o.h
>

39 
	~<gnu/›ti⁄-groups.h
>

43 #i‡
deföed
 
_LIBC
 || deföed 
_IO_MTSAFE_IO


44 #i‡(
deföed
 
NOT_IN_libc
 && !deföed 
IS_IN_lib±hªad
Ë|| !deföed 
_LIBC


45 
±hªad_muãx_t
 
	t__libc_lock_t
;

46 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

48 
	t__libc_lock_t
;

49 °ru˘ { 
	mlock
; 
	m˙t
; *
	mow√r
; } 
	t__libc_lock_ªcursive_t
;

51 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__πld_lock_ªcursive_t
;

52 #ifde‡
__USE_UNIX98


53 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

55 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

58 
__libc_lock_›aque__
 
	t__libc_lock_t
;

59 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

60 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

64 
±hªad_key_t
 
	t__libc_key_t
;

73 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

74 
CLASS
 
__libc_lock_t
 
NAME
;

	)

75 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

76 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

77 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

78 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

79 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

80 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

91 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

92 #i‡
LLL_LOCK_INITIALIZER
 == 0

93 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

94 
CLASS
 
__libc_lock_t
 
NAME
;

	)

96 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

97 
CLASS
 
__libc_lock_t
 
NAME
 = 
LLL_LOCK_INITIALIZER
;

	)

100 #i‡
__LT_SPINLOCK_INIT
 == 0

101 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

102 
CLASS
 
__libc_lock_t
 
NAME
;

	)

104 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

105 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

109 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

110 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

114 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

115 #i‡
LLL_LOCK_INITIALIZER
 == 0

116 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

117 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

119 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

120 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

122 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

123 { 
LLL_LOCK_INITIALIZER
, 0, 
NULL
 }

	)

125 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

126 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

127 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

128 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

131 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

132 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

133 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

134 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

136 
	#__πld_lock_öôülize
(
NAME
) \

137 (Ë((
NAME
Ë(
__πld_lock_ªcursive_t
Ë
_RTLD_LOCK_RECURSIVE_INITIALIZER
)

	)

144 #ifde‡
__PIC__


145 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

146 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

147 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

149 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

150 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

154 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


155 
	#PTFAVAIL
(
NAME
Ë
__libc_±hªad_fun˘i⁄s_öô


	)

156 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

157 (
__libc_±hªad_fun˘i⁄s_öô
 ? 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
Ë: 
ELSE
)

	)

158 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

159 
	`PTHFCT_CALL
 (
±r_
##
FUNC
, 
ARGS
)

	)

161 
	#PTFAVAIL
(
NAME
Ë(NAME !
NULL
)

	)

162 
	#__libc_±f_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

163 
	`__libc_maybe_ˇŒ
 (
FUNC
, 
ARGS
, 
ELSE
)

	)

164 
	#__libc_±f_ˇŒ_Æways
(
FUNC
, 
ARGS
) \

165 
FUNC
 
ARGS


	)

171 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

172 
	#__libc_lock_öô
(
NAME
Ë((NAMEË
LLL_LOCK_INITIALIZER
, 0)

	)

174 
	#__libc_lock_öô
(
NAME
) \

175 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0)

	)

177 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


180 
	#__libc_rwlock_öô
(
NAME
) \

181 (
	`__buûtö_mem£t
 (&(
NAME
), '\0',  (NAME)), 0)

	)

183 
	#__libc_rwlock_öô
(
NAME
) \

184 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0)

	)

188 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

189 
	#__libc_lock_öô_ªcursive
(
NAME
) \

190 ((
NAME
Ë(
__libc_lock_ªcursive_t
Ë
_LIBC_LOCK_RECURSIVE_INITIALIZER
, 0)

	)

192 
	#__libc_lock_öô_ªcursive
(
NAME
) \

194 i‡(
__±hªad_muãx_öô
 !
NULL
) \

196 
±hªad_muãx©å_t
 
__©å
; \

197 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

198 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

199 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

200 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

202 } 0)

	)

205 
	#__πld_lock_öô_ªcursive
(
NAME
) \

207 i‡(
__±hªad_muãx_öô
 !
NULL
) \

209 
±hªad_muãx©å_t
 
__©å
; \

210 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

211 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

212 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

213 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

215 } 0)

	)

220 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

221 
	#__libc_lock_föi
(
NAME
Ë((Ë0)

	)

223 
	#__libc_lock_föi
(
NAME
) \

224 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

226 #i‡
deföed
 
SHARED
 && !deföed 
NOT_IN_libc


227 
	#__libc_rwlock_föi
(
NAME
Ë((Ë0)

	)

229 
	#__libc_rwlock_föi
(
NAME
) \

230 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0)

	)

234 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

235 
	#__libc_lock_föi_ªcursive
(
NAME
Ë((Ë0)

	)

237 
	#__libc_lock_föi_ªcursive
(
NAME
) \

238 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_de°roy
, (&(
NAME
)), 0)

	)

242 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

243 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

247 
__libc_lock_lock_‚
 (
__libc_lock_t
 *);

248 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_‚
);

250 #i‡
__OPTION_EGLIBC_BIG_MACROS


251 
	#__libc_lock_lock
(
NAME
) \

252 ({ 
	`Œl_lock
 (
NAME
, 
LLL_PRIVATE
); 0; })

	)

254 
	#__libc_lock_lock
(
NAME
) \

255 
	`__libc_lock_lock_‚
 (&(
NAME
))

	)

258 
	#__libc_lock_lock
(
NAME
) \

259 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
)), 0)

	)

261 
	#__libc_rwlock_rdlock
(
NAME
) \

262 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0)

	)

263 
	#__libc_rwlock_wæock
(
NAME
) \

264 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0)

	)

267 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

268 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

272 
__libc_lock_lock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

273 
libc_hiddí_¥Ÿo
 (
__libc_lock_lock_ªcursive_‚
);

275 #i‡
__OPTION_EGLIBC_BIG_MACROS


276 
	#__libc_lock_lock_ªcursive
(
NAME
) \

278 *
£lf
 = 
THREAD_SELF
; \

279 i‡((
NAME
).
ow√r
 !
£lf
) \

281 
	`Œl_lock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

282 (
NAME
).
ow√r
 = 
£lf
; \

284 ++(
NAME
).
˙t
; \

285 } 0)

	)

287 
	#__libc_lock_lock_ªcursive
(
NAME
) \

288 
	`__libc_lock_lock_ªcursive_‚
 (&(
NAME
))

	)

291 
	#__libc_lock_lock_ªcursive
(
NAME
) \

292 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

296 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

297 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

301 
__libc_lock_åylock_‚
 (
__libc_lock_t
 *);

302 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_‚
);

304 #i‡
__OPTION_EGLIBC_BIG_MACROS


305 
	#__libc_lock_åylock
(
NAME
) \

306 
	`Œl_åylock
 (
NAME
)

	)

308 
	#__libc_lock_åylock
(
NAME
) \

309 
	`__libc_lock_åylock_‚
 (&(
NAME
))

	)

312 
	#__libc_lock_åylock
(
NAME
) \

313 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

315 
	#__libc_rwlock_åyrdlock
(
NAME
) \

316 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0)

	)

317 
	#__libc_rwlock_åywæock
(
NAME
) \

318 
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0)

	)

321 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

322 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

326 
__libc_lock_åylock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

327 
libc_hiddí_¥Ÿo
 (
__libc_lock_åylock_ªcursive_‚
);

329 #i‡
__OPTION_EGLIBC_BIG_MACROS


330 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

332 
ªsu…
 = 0; \

333 *
£lf
 = 
THREAD_SELF
; \

334 i‡((
NAME
).
ow√r
 !
£lf
) \

336 i‡(
	`Œl_åylock
 ((
NAME
).
lock
) == 0) \

338 (
NAME
).
ow√r
 = 
£lf
; \

339 (
NAME
).
˙t
 = 1; \

342 
ªsu…
 = 
EBUSY
; \

345 ++(
NAME
).
˙t
; \

346 
ªsu…
; \

347 })

	)

349 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

350 
	`__libc_lock_åylock_ªcursive_‚
 (&(
NAME
))

	)

353 
	#__libc_lock_åylock_ªcursive
(
NAME
) \

354 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
)), 0)

	)

357 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

358 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_åylock
, (&(
NAME
).
muãx
), 0)

	)

361 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

362 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

366 
__libc_lock_u∆ock_‚
 (
__libc_lock_t
 *);

367 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_‚
);

369 #i‡
__OPTION_EGLIBC_BIG_MACROS


370 
	#__libc_lock_u∆ock
(
NAME
) \

371 
	`Œl_u∆ock
 (
NAME
, 
LLL_PRIVATE
)

	)

373 
	#__libc_lock_u∆ock
(
NAME
) \

374 
	`__libc_lock_u∆ock_‚
 (&(
NAME
))

	)

377 
	#__libc_lock_u∆ock
(
NAME
) \

378 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

380 
	#__libc_rwlock_u∆ock
(
NAME
) \

381 
	`__libc_±f_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0)

	)

384 #i‡
deföed
 
_LIBC
 && (!deföed 
NOT_IN_libc
 || deföed 
IS_IN_lib±hªad
)

385 #i‡
__OPTION_EGLIBC_BIG_MACROS
 != 1

389 
__libc_lock_u∆ock_ªcursive_‚
 (
__libc_lock_ªcursive_t
 *);

390 
libc_hiddí_¥Ÿo
 (
__libc_lock_u∆ock_ªcursive_‚
);

392 #i‡
__OPTION_EGLIBC_BIG_MACROS


394 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

396 i‡(--(
NAME
).
˙t
 == 0) \

398 (
NAME
).
ow√r
 = 
NULL
; \

399 
	`Œl_u∆ock
 ((
NAME
).
lock
, 
LLL_PRIVATE
); \

401 } 0)

	)

403 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

404 
	`__libc_lock_u∆ock_ªcursive_‚
 (&(
NAME
))

	)

407 
	#__libc_lock_u∆ock_ªcursive
(
NAME
) \

408 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
)), 0)

	)

411 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


412 
	#__πld_lock_deÁu…_lock_ªcursive
(
lock
) \

413 ++((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

415 
	#__πld_lock_deÁu…_u∆ock_ªcursive
(
lock
) \

416 --((
±hªad_muãx_t
 *)(
lock
))->
__d©a
.
__cou¡
;

	)

418 
	#__πld_lock_lock_ªcursive
(
NAME
) \

419 
	`GL
(
dl_πld_lock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

421 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

422 
	`GL
(
dl_πld_u∆ock_ªcursive
Ë(&(
NAME
).
muãx
)

	)

424 
	#__πld_lock_lock_ªcursive
(
NAME
) \

425 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_lock
, (&(
NAME
).
muãx
), 0)

	)

427 
	#__πld_lock_u∆ock_ªcursive
(
NAME
) \

428 
	`__libc_maybe_ˇŒ
 (
__±hªad_muãx_u∆ock
, (&(
NAME
).
muãx
), 0)

	)

432 #i‡
PTHREAD_ONCE_INIT
 == 0

435 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

436 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

438 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

439 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

443 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

445 i‡(
	`PTFAVAIL
 (
__±hªad_⁄˚
)) \

446 
	`__libc_±f_ˇŒ_Æways
 (
__±hªad_⁄˚
, (&(
ONCE_CONTROL
), \

447 
INIT_FUNCTION
)); \

448 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

449 
	`INIT_FUNCTION
 (); \

450 (
ONCE_CONTROL
) |= 2; \

452 } 0)

	)

459 
_±hªad_˛ónup_push
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

460 (*
routöe
Ë(*), *
¨g
);

461 
	`_±hªad_˛ónup_p›
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

462 
execuã
);

463 
	`_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

464 (*
routöe
Ë(*), *
¨g
);

465 
	`_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
buf„r
,

466 
execuã
);

469 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

470 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

471 
_avaû
; \

472 i‡(
DOIT
) { \

473 
_avaû
 = 
	`PTFAVAIL
 (
_±hªad_˛ónup_push_de„r
); \

474 i‡(
_avaû
) { \

475 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_push_de„r
, (&
_buf„r
, 
FCT
, \

476 
ARG
)); \

478 
_buf„r
.
__routöe
 = (
FCT
); \

479 
_buf„r
.
__¨g
 = (
ARG
); \

482 
_avaû
 = 0; \

483 }

	)

486 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

487 i‡(
_avaû
) { \

488 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

489 } i‡(
DOIT
) \

490 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
); \

491 
	}

	)
}

494 
	#__libc_˛ónup_íd
(
DOIT
) \

495 i‡(
_avaû
) { \

496 
	`__libc_±f_ˇŒ_Æways
 (
_±hªad_˛ónup_p›_ª°‹e
, (&
_buf„r
, 
DOIT
));\

497 } i‡(
DOIT
) \

498 
_buf„r
.
	`__routöe
 (_buf„r.
__¨g
)

	)

502 
__exã∫_ölöe
 

503 
	$__libc_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
f
)

505 i‡(
f
->
__do_ô
)

506 
f
->
	`__ˇn˚l_routöe
 (f->
__ˇn˚l_¨g
);

507 
	}
}

509 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

511 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

512 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__libc_˛ónup_routöe
))) \

513 { .
__ˇn˚l_routöe
 = (
f˘
), .
__ˇn˚l_¨g
 = (
¨g
), \

514 .
__do_ô
 = 1 };

	)

516 
	#__libc_˛ónup_p›
(
execuã
) \

517 
__˛‰ame
.
__do_ô
 = (
execuã
); \

518 } 0)

	)

522 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

523 
	`__libc_±f_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1)

	)

526 
	#__libc_gë•ecific
(
KEY
) \

527 
	`__libc_±f_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
)

	)

530 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

531 
	`__libc_±f_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0)

	)

537 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

538 
	`__ªgi°î_©f‹k
 (
PREPARE
, 
PARENT
, 
CHILD
, 
NULL
)

	)

539 
__ªgi°î_©f‹k
 ((*
__¥ï¨e
) (),

540 (*
__∑ª¡
) (),

541 (*
__chûd
) (),

542 *
__dso_h™dÀ
);

547 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

548 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

550 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

552 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

554 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

556 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

558 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

560 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

562 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

563 
__köd
);

565 #ifde‡
__USE_UNIX98


566 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

567 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

569 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

571 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

573 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

575 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

577 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

579 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

582 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

583 (*
__de°r_fun˘i⁄
) (*));

585 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

586 
__c⁄°
 *
__poöãr
);

588 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

590 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

591 (*
__öô_routöe
) ());

593 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

594 (*
__∑ª¡
) (),

595 (*
__chûd
) ());

601 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


602 #ifde‡
wók_exã∫


603 #i‡
_LIBC


604 
	~<bp-sym.h
>

606 
	#BP_SYM
(
sym
Ë
	)
sym

608 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_öô
))

609 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_de°roy
))

610 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_lock
))

611 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_åylock
))

612 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx_u∆ock
))

613 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_öô
))

614 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_de°roy
))

615 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_muãx©å_£ây≥
))

616 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_öô
))

617 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_de°roy
))

618 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_rdlock
))

619 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åyrdlock
))

620 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_wæock
))

621 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_åywæock
))

622 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_rwlock_u∆ock
))

623 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_key_¸óã
))

624 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_£t•ecific
))

625 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_gë•ecific
))

626 
	`wók_exã∫
 (
	$BP_SYM
 (
__±hªad_⁄˚
))

627 
	$wók_exã∫
 (
__±hªad_öôülize
)

628 
	$wók_exã∫
 (
__±hªad_©f‹k
)

629 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_push_de„r
))

630 
	`wók_exã∫
 (
	$BP_SYM
 (
_±hªad_˛ónup_p›_ª°‹e
))

631 
	`wók_exã∫
 (
	$BP_SYM
 (
±hªad_£tˇn˚l°©e
))

633 #¥agm®
wók
 
__±hªad_muãx_öô


634 #¥agm®
wók
 
__±hªad_muãx_de°roy


635 #¥agm®
wók
 
__±hªad_muãx_lock


636 #¥agm®
wók
 
__±hªad_muãx_åylock


637 #¥agm®
wók
 
__±hªad_muãx_u∆ock


638 #¥agm®
wók
 
__±hªad_muãx©å_öô


639 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


640 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


641 #¥agm®
wók
 
__±hªad_rwlock_de°roy


642 #¥agm®
wók
 
__±hªad_rwlock_rdlock


643 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


644 #¥agm®
wók
 
__±hªad_rwlock_wæock


645 #¥agm®
wók
 
__±hªad_rwlock_åywæock


646 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


647 #¥agm®
wók
 
__±hªad_key_¸óã


648 #¥agm®
wók
 
__±hªad_£t•ecific


649 #¥agm®
wók
 
__±hªad_gë•ecific


650 #¥agm®
wók
 
__±hªad_⁄˚


651 #¥agm®
wók
 
__±hªad_öôülize


652 #¥agm®
wók
 
__±hªad_©f‹k


653 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


654 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


655 #¥agm®
wók
 
±hªad_£tˇn˚l°©e


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-32.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___kî√l_co¶


	)

11 
	#__°ub___kî√l_söl


	)

12 
	#__°ub___kî√l_è∆


	)

13 
	#__°ub_chÊags


	)

14 
	#__°ub_Áâach


	)

15 
	#__°ub_fchÊags


	)

16 
	#__°ub_fdëach


	)

17 
	#__°ub_gây


	)

18 
	#__°ub_lchmod


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

24 #ifde‡
__WCHAR_MAX__


25 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

27 
	#__WCHAR_MAX
 (2147483647)

	)

32 #ifde‡
__WCHAR_UNSIGNED__


33 
	#__WCHAR_MIN
 
L
'\0'

	)

37 #ñi‡
L
'\0' - 1 > 0

38 
	#__WCHAR_MIN
 
L
'\0'

	)

40 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/gnu/option-groups.h

10 #i‚de‡
__GNU_OPTION_GROUPS_H


11 
	#__GNU_OPTION_GROUPS_H


	)

13 
	#__OPTION_EGLIBC_ADVANCED_INET6
 1

	)

14 
	#__OPTION_EGLIBC_BACKTRACE
 1

	)

15 
	#__OPTION_EGLIBC_BIG_MACROS
 1

	)

16 
	#__OPTION_EGLIBC_BSD
 1

	)

17 
	#__OPTION_EGLIBC_CATGETS
 1

	)

18 
	#__OPTION_EGLIBC_CHARSETS
 1

	)

19 
	#__OPTION_EGLIBC_CRYPT
 1

	)

20 
	#__OPTION_EGLIBC_CRYPT_UFC
 1

	)

21 
	#__OPTION_EGLIBC_CXX_TESTS
 1

	)

22 
	#__OPTION_EGLIBC_DB_ALIASES
 1

	)

23 
	#__OPTION_EGLIBC_ENVZ
 1

	)

24 
	#__OPTION_EGLIBC_FCVT
 1

	)

25 
	#__OPTION_EGLIBC_FMTMSG
 1

	)

26 
	#__OPTION_EGLIBC_FSTAB
 1

	)

27 
	#__OPTION_EGLIBC_FTRAVERSE
 1

	)

28 
	#__OPTION_EGLIBC_GETLOGIN
 1

	)

29 
	#__OPTION_EGLIBC_IDN
 1

	)

30 
	#__OPTION_EGLIBC_INET
 1

	)

31 
	#__OPTION_EGLIBC_INET_ANL
 1

	)

32 
	#__OPTION_EGLIBC_LIBM
 1

	)

33 
	#__OPTION_EGLIBC_LIBM_BIG
 1

	)

34 
	#__OPTION_EGLIBC_LOCALES
 1

	)

35 
	#__OPTION_EGLIBC_LOCALE_CODE
 1

	)

36 
	#__OPTION_EGLIBC_MEMUSAGE
 1

	)

37 
	#__OPTION_EGLIBC_NIS
 1

	)

38 
	#__OPTION_EGLIBC_NSSWITCH
 1

	)

39 
	#__OPTION_EGLIBC_RCMD
 1

	)

40 
	#__OPTION_EGLIBC_RTLD_DEBUG
 1

	)

41 
	#__OPTION_EGLIBC_SPAWN
 1

	)

42 
	#__OPTION_EGLIBC_STREAMS
 1

	)

43 
	#__OPTION_EGLIBC_SUNRPC
 1

	)

44 
	#__OPTION_EGLIBC_UTMP
 1

	)

45 
	#__OPTION_EGLIBC_UTMPX
 1

	)

46 
	#__OPTION_EGLIBC_WORDEXP
 1

	)

47 
	#__OPTION_POSIX_C_LANG_WIDE_CHAR
 1

	)

48 
	#__OPTION_POSIX_REGEXP
 1

	)

49 
	#__OPTION_POSIX_REGEXP_GLIBC
 1

	)

50 
	#__OPTION_POSIX_WIDE_CHAR_DEVICE_IO
 1

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROW
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@
1
.
1
/usr/include
79
1860
include/bwio.h
include/context_switch.h
include/global.h
include/kernel.h
include/kernel_syscall.h
include/nameserver.h
include/rps.h
include/scheduler.h
include/syscall.h
include/task_descriptor.h
include/timer.h
include/tools.h
include/ts7200.h
include/user_task.h
src/bwio.c
src/kernel.c
src/kernel_syscall.c
src/nameserver.c
src/rps.c
src/scheduler.c
src/syscall.c
src/task_descriptor.c
src/timer.c
src/user_task.c
untracked/test.c
untracked/tools.h
/usr/include/stdio.h
/usr/include/syscall.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/types.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sys/syscall.h
/usr/include/_G_config.h
/usr/include/asm/unistd.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/predefs.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/syscall.h
/usr/include/bits/typesizes.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/sys/cdefs.h
/usr/include/asm/unistd_32.h
/usr/include/asm/unistd_64.h
/usr/include/bits/libc-lock.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/gnu/stubs-32.h
/usr/include/gnu/stubs-64.h
/usr/include/wchar.h
/usr/include/xlocale.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/errno.h
/usr/include/gnu/option-groups.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/bits/errno.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/setjmp.h
/usr/include/sched.h
/usr/include/time.h
/usr/include/bits/sched.h
/usr/include/bits/time.h
/usr/include/linux/errno.h
/usr/include/asm/errno.h
/usr/include/bits/timex.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/errno-base.h
